   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_cryp_aes.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CRYP_AES_ECB,"ax",%progbits
  20              		.align	2
  21              		.global	CRYP_AES_ECB
  22              		.thumb
  23              		.thumb_func
  25              	CRYP_AES_ECB:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @file    stm32f4xx_cryp_aes.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          input message using AES in ECB/CBC/CTR modes.
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          peripheral.
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *  @verbatim
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          ===================================================================
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *                                   How to use this driver
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          ===================================================================
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          1. Enable The CRYP controller clock using 
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          2. Encrypt and decrypt using AES in ECB Mode using CRYP_AES_ECB()
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *             function.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          3. Encrypt and decrypt using AES in CBC Mode using CRYP_AES_CBC()
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *             function.
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          4. Encrypt and decrypt using AES in CTR Mode using CRYP_AES_CTR()
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *             function.
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *  @endverbatim
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @attention
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************  
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Includes ------------------------------------------------------------------*/
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** #include "stm32f4xx_cryp.h"
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP 
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief CRYP driver modules
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private typedef -----------------------------------------------------------*/
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private define ------------------------------------------------------------*/
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** #define AESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private macro -------------------------------------------------------------*/
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private variables ---------------------------------------------------------*/
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private function prototypes -----------------------------------------------*/
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private functions ---------------------------------------------------------*/
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Private_Functions
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */ 
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Group6 High Level AES functions
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  *  @brief   High Level AES functions 
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  *
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** @verbatim   
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                           High Level AES functions
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** @endverbatim
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in ECB Mode
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_ECB(uint8_t Mode, uint8_t* Key, uint16_t Keysize,
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint8_t* Input, uint32_t Ilength, uint8_t* Output)
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** {
  28              		.loc 1 100 0
  29              		.cfi_startproc
  30              		@ args = 8, pretend = 0, frame = 232
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 4, -12
  38 0002 BBB0     		sub	sp, sp, #236
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 248
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 B960     		str	r1, [r7, #8]
  45 0008 7B60     		str	r3, [r7, #4]
  46 000a 0346     		mov	r3, r0
  47 000c FB73     		strb	r3, [r7, #15]
  48 000e 1346     		mov	r3, r2	@ movhi
  49 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
  50              		.loc 1 103 0
  51 0012 4FF00003 		mov	r3, #0
  52 0016 7B61     		str	r3, [r7, #20]
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
  53              		.loc 1 104 0
  54 0018 4FF00003 		mov	r3, #0
  55 001c C7F8D430 		str	r3, [r7, #212]
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
  56              		.loc 1 105 0
  57 0020 4FF00103 		mov	r3, #1
  58 0024 87F8E730 		strb	r3, [r7, #231]
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
  59              		.loc 1 106 0
  60 0028 BB68     		ldr	r3, [r7, #8]
  61 002a C7F8D030 		str	r3, [r7, #208]
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
  62              		.loc 1 107 0
  63 002e 7B68     		ldr	r3, [r7, #4]
  64 0030 C7F8E030 		str	r3, [r7, #224]
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
  65              		.loc 1 108 0
  66 0034 D7F8FC30 		ldr	r3, [r7, #252]
  67 0038 C7F8DC30 		str	r3, [r7, #220]
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
  68              		.loc 1 109 0
  69 003c 4FF00003 		mov	r3, #0
  70 0040 C7F8D830 		str	r3, [r7, #216]
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
  71              		.loc 1 112 0
  72 0044 07F11803 		add	r3, r7, #24
  73 0048 1846     		mov	r0, r3
  74 004a FFF7FEFF 		bl	CRYP_KeyStructInit
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
  75              		.loc 1 114 0
  76 004e BB89     		ldrh	r3, [r7, #12]
  77 0050 C02B     		cmp	r3, #192
  78 0052 50D0     		beq	.L4
  79 0054 B3F5807F 		cmp	r3, #256
  80 0058 00F0BD80 		beq	.L5
  81 005c 802B     		cmp	r3, #128
  82 005e 40F03081 		bne	.L19
  83              	.L3:
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 128:
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
  84              		.loc 1 117 0
  85 0062 4FF00003 		mov	r3, #0
  86 0066 FB87     		strh	r3, [r7, #62]	@ movhi
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
  87              		.loc 1 118 0
  88 0068 D7F8D030 		ldr	r3, [r7, #208]
  89 006c 1B68     		ldr	r3, [r3, #0]
  90 006e C7F8CC30 		str	r3, [r7, #204]
  91              	.LBB126:
  92              	.LBB127:
  93              		.file 2 "libs/CMSIS/Include/core_cmInstr.h"
   1:libs/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:libs/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:libs/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:libs/CMSIS/Include/core_cmInstr.h ****  * @version  V2.10
   5:libs/CMSIS/Include/core_cmInstr.h ****  * @date     19. July 2011
   6:libs/CMSIS/Include/core_cmInstr.h ****  *
   7:libs/CMSIS/Include/core_cmInstr.h ****  * @note
   8:libs/CMSIS/Include/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:libs/CMSIS/Include/core_cmInstr.h ****  *
  10:libs/CMSIS/Include/core_cmInstr.h ****  * @par
  11:libs/CMSIS/Include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:libs/CMSIS/Include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:libs/CMSIS/Include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:libs/CMSIS/Include/core_cmInstr.h ****  *
  15:libs/CMSIS/Include/core_cmInstr.h ****  * @par
  16:libs/CMSIS/Include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libs/CMSIS/Include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libs/CMSIS/Include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libs/CMSIS/Include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libs/CMSIS/Include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libs/CMSIS/Include/core_cmInstr.h ****  *
  22:libs/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  23:libs/CMSIS/Include/core_cmInstr.h **** 
  24:libs/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:libs/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:libs/CMSIS/Include/core_cmInstr.h **** 
  27:libs/CMSIS/Include/core_cmInstr.h **** 
  28:libs/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:libs/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:libs/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  31:libs/CMSIS/Include/core_cmInstr.h ****   @{
  32:libs/CMSIS/Include/core_cmInstr.h **** */
  33:libs/CMSIS/Include/core_cmInstr.h **** 
  34:libs/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:libs/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:libs/CMSIS/Include/core_cmInstr.h **** 
  37:libs/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:libs/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:libs/CMSIS/Include/core_cmInstr.h **** #endif
  40:libs/CMSIS/Include/core_cmInstr.h **** 
  41:libs/CMSIS/Include/core_cmInstr.h **** 
  42:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  43:libs/CMSIS/Include/core_cmInstr.h **** 
  44:libs/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:libs/CMSIS/Include/core_cmInstr.h ****  */
  46:libs/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  47:libs/CMSIS/Include/core_cmInstr.h **** 
  48:libs/CMSIS/Include/core_cmInstr.h **** 
  49:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:libs/CMSIS/Include/core_cmInstr.h **** 
  51:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:libs/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  53:libs/CMSIS/Include/core_cmInstr.h ****  */
  54:libs/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  55:libs/CMSIS/Include/core_cmInstr.h **** 
  56:libs/CMSIS/Include/core_cmInstr.h **** 
  57:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  58:libs/CMSIS/Include/core_cmInstr.h **** 
  59:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:libs/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:libs/CMSIS/Include/core_cmInstr.h ****  */
  62:libs/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  63:libs/CMSIS/Include/core_cmInstr.h **** 
  64:libs/CMSIS/Include/core_cmInstr.h **** 
  65:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  66:libs/CMSIS/Include/core_cmInstr.h **** 
  67:libs/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:libs/CMSIS/Include/core_cmInstr.h ****  */
  69:libs/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  70:libs/CMSIS/Include/core_cmInstr.h **** 
  71:libs/CMSIS/Include/core_cmInstr.h **** 
  72:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:libs/CMSIS/Include/core_cmInstr.h **** 
  74:libs/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:libs/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:libs/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:libs/CMSIS/Include/core_cmInstr.h ****  */
  78:libs/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:libs/CMSIS/Include/core_cmInstr.h **** 
  80:libs/CMSIS/Include/core_cmInstr.h **** 
  81:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:libs/CMSIS/Include/core_cmInstr.h **** 
  83:libs/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:libs/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:libs/CMSIS/Include/core_cmInstr.h ****  */
  86:libs/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:libs/CMSIS/Include/core_cmInstr.h **** 
  88:libs/CMSIS/Include/core_cmInstr.h **** 
  89:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:libs/CMSIS/Include/core_cmInstr.h **** 
  91:libs/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:libs/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:libs/CMSIS/Include/core_cmInstr.h ****  */
  94:libs/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:libs/CMSIS/Include/core_cmInstr.h **** 
  96:libs/CMSIS/Include/core_cmInstr.h **** 
  97:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:libs/CMSIS/Include/core_cmInstr.h **** 
  99:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:libs/CMSIS/Include/core_cmInstr.h **** 
 101:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 103:libs/CMSIS/Include/core_cmInstr.h ****  */
 104:libs/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 105:libs/CMSIS/Include/core_cmInstr.h **** 
 106:libs/CMSIS/Include/core_cmInstr.h **** 
 107:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:libs/CMSIS/Include/core_cmInstr.h **** 
 109:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:libs/CMSIS/Include/core_cmInstr.h **** 
 111:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 113:libs/CMSIS/Include/core_cmInstr.h ****  */
 114:libs/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:libs/CMSIS/Include/core_cmInstr.h **** {
 116:libs/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 117:libs/CMSIS/Include/core_cmInstr.h ****   bx lr
 118:libs/CMSIS/Include/core_cmInstr.h **** }
 119:libs/CMSIS/Include/core_cmInstr.h **** 
 120:libs/CMSIS/Include/core_cmInstr.h **** 
 121:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:libs/CMSIS/Include/core_cmInstr.h **** 
 123:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:libs/CMSIS/Include/core_cmInstr.h **** 
 125:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:libs/CMSIS/Include/core_cmInstr.h ****  */
 128:libs/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:libs/CMSIS/Include/core_cmInstr.h **** {
 130:libs/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 131:libs/CMSIS/Include/core_cmInstr.h ****   bx lr
 132:libs/CMSIS/Include/core_cmInstr.h **** }
 133:libs/CMSIS/Include/core_cmInstr.h **** 
 134:libs/CMSIS/Include/core_cmInstr.h **** 
 135:libs/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:libs/CMSIS/Include/core_cmInstr.h **** 
 137:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:libs/CMSIS/Include/core_cmInstr.h **** 
 139:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:libs/CMSIS/Include/core_cmInstr.h **** 
 141:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 143:libs/CMSIS/Include/core_cmInstr.h ****  */
 144:libs/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 145:libs/CMSIS/Include/core_cmInstr.h **** 
 146:libs/CMSIS/Include/core_cmInstr.h **** 
 147:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:libs/CMSIS/Include/core_cmInstr.h **** 
 149:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:libs/CMSIS/Include/core_cmInstr.h **** 
 151:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:libs/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:libs/CMSIS/Include/core_cmInstr.h ****  */
 154:libs/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:libs/CMSIS/Include/core_cmInstr.h **** 
 156:libs/CMSIS/Include/core_cmInstr.h **** 
 157:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:libs/CMSIS/Include/core_cmInstr.h **** 
 159:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:libs/CMSIS/Include/core_cmInstr.h **** 
 161:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:libs/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:libs/CMSIS/Include/core_cmInstr.h ****  */
 164:libs/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:libs/CMSIS/Include/core_cmInstr.h **** 
 166:libs/CMSIS/Include/core_cmInstr.h **** 
 167:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:libs/CMSIS/Include/core_cmInstr.h **** 
 169:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:libs/CMSIS/Include/core_cmInstr.h **** 
 171:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:libs/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:libs/CMSIS/Include/core_cmInstr.h ****  */
 174:libs/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:libs/CMSIS/Include/core_cmInstr.h **** 
 176:libs/CMSIS/Include/core_cmInstr.h **** 
 177:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:libs/CMSIS/Include/core_cmInstr.h **** 
 179:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:libs/CMSIS/Include/core_cmInstr.h **** 
 181:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 182:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:libs/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 184:libs/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 185:libs/CMSIS/Include/core_cmInstr.h ****  */
 186:libs/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:libs/CMSIS/Include/core_cmInstr.h **** 
 188:libs/CMSIS/Include/core_cmInstr.h **** 
 189:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:libs/CMSIS/Include/core_cmInstr.h **** 
 191:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:libs/CMSIS/Include/core_cmInstr.h **** 
 193:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 194:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:libs/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 196:libs/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 197:libs/CMSIS/Include/core_cmInstr.h ****  */
 198:libs/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:libs/CMSIS/Include/core_cmInstr.h **** 
 200:libs/CMSIS/Include/core_cmInstr.h **** 
 201:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:libs/CMSIS/Include/core_cmInstr.h **** 
 203:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:libs/CMSIS/Include/core_cmInstr.h **** 
 205:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 206:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:libs/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 208:libs/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 209:libs/CMSIS/Include/core_cmInstr.h ****  */
 210:libs/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:libs/CMSIS/Include/core_cmInstr.h **** 
 212:libs/CMSIS/Include/core_cmInstr.h **** 
 213:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:libs/CMSIS/Include/core_cmInstr.h **** 
 215:libs/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:libs/CMSIS/Include/core_cmInstr.h **** 
 217:libs/CMSIS/Include/core_cmInstr.h ****  */
 218:libs/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 219:libs/CMSIS/Include/core_cmInstr.h **** 
 220:libs/CMSIS/Include/core_cmInstr.h **** 
 221:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 222:libs/CMSIS/Include/core_cmInstr.h **** 
 223:libs/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 224:libs/CMSIS/Include/core_cmInstr.h **** 
 225:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:libs/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 228:libs/CMSIS/Include/core_cmInstr.h ****  */
 229:libs/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 230:libs/CMSIS/Include/core_cmInstr.h **** 
 231:libs/CMSIS/Include/core_cmInstr.h **** 
 232:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:libs/CMSIS/Include/core_cmInstr.h **** 
 234:libs/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 235:libs/CMSIS/Include/core_cmInstr.h **** 
 236:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:libs/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 239:libs/CMSIS/Include/core_cmInstr.h ****  */
 240:libs/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 241:libs/CMSIS/Include/core_cmInstr.h **** 
 242:libs/CMSIS/Include/core_cmInstr.h **** 
 243:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 244:libs/CMSIS/Include/core_cmInstr.h **** 
 245:libs/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:libs/CMSIS/Include/core_cmInstr.h **** 
 247:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:libs/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 249:libs/CMSIS/Include/core_cmInstr.h ****  */
 250:libs/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz 
 251:libs/CMSIS/Include/core_cmInstr.h **** 
 252:libs/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:libs/CMSIS/Include/core_cmInstr.h **** 
 254:libs/CMSIS/Include/core_cmInstr.h **** 
 255:libs/CMSIS/Include/core_cmInstr.h **** 
 256:libs/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:libs/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:libs/CMSIS/Include/core_cmInstr.h **** 
 259:libs/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
 260:libs/CMSIS/Include/core_cmInstr.h **** 
 261:libs/CMSIS/Include/core_cmInstr.h **** 
 262:libs/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:libs/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 264:libs/CMSIS/Include/core_cmInstr.h **** 
 265:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 266:libs/CMSIS/Include/core_cmInstr.h **** 
 267:libs/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:libs/CMSIS/Include/core_cmInstr.h ****  */
 269:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:libs/CMSIS/Include/core_cmInstr.h **** {
 271:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 272:libs/CMSIS/Include/core_cmInstr.h **** }
 273:libs/CMSIS/Include/core_cmInstr.h **** 
 274:libs/CMSIS/Include/core_cmInstr.h **** 
 275:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:libs/CMSIS/Include/core_cmInstr.h **** 
 277:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:libs/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 279:libs/CMSIS/Include/core_cmInstr.h ****  */
 280:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:libs/CMSIS/Include/core_cmInstr.h **** {
 282:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:libs/CMSIS/Include/core_cmInstr.h **** }
 284:libs/CMSIS/Include/core_cmInstr.h **** 
 285:libs/CMSIS/Include/core_cmInstr.h **** 
 286:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 287:libs/CMSIS/Include/core_cmInstr.h **** 
 288:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:libs/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:libs/CMSIS/Include/core_cmInstr.h ****  */
 291:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:libs/CMSIS/Include/core_cmInstr.h **** {
 293:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:libs/CMSIS/Include/core_cmInstr.h **** }
 295:libs/CMSIS/Include/core_cmInstr.h **** 
 296:libs/CMSIS/Include/core_cmInstr.h **** 
 297:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 298:libs/CMSIS/Include/core_cmInstr.h **** 
 299:libs/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:libs/CMSIS/Include/core_cmInstr.h ****  */
 301:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:libs/CMSIS/Include/core_cmInstr.h **** {
 303:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 304:libs/CMSIS/Include/core_cmInstr.h **** }
 305:libs/CMSIS/Include/core_cmInstr.h **** 
 306:libs/CMSIS/Include/core_cmInstr.h **** 
 307:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:libs/CMSIS/Include/core_cmInstr.h **** 
 309:libs/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:libs/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:libs/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:libs/CMSIS/Include/core_cmInstr.h ****  */
 313:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:libs/CMSIS/Include/core_cmInstr.h **** {
 315:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb");
 316:libs/CMSIS/Include/core_cmInstr.h **** }
 317:libs/CMSIS/Include/core_cmInstr.h **** 
 318:libs/CMSIS/Include/core_cmInstr.h **** 
 319:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:libs/CMSIS/Include/core_cmInstr.h **** 
 321:libs/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:libs/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:libs/CMSIS/Include/core_cmInstr.h ****  */
 324:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:libs/CMSIS/Include/core_cmInstr.h **** {
 326:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb");
 327:libs/CMSIS/Include/core_cmInstr.h **** }
 328:libs/CMSIS/Include/core_cmInstr.h **** 
 329:libs/CMSIS/Include/core_cmInstr.h **** 
 330:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:libs/CMSIS/Include/core_cmInstr.h **** 
 332:libs/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:libs/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:libs/CMSIS/Include/core_cmInstr.h ****  */
 335:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
 336:libs/CMSIS/Include/core_cmInstr.h **** {
 337:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb");
 338:libs/CMSIS/Include/core_cmInstr.h **** }
 339:libs/CMSIS/Include/core_cmInstr.h **** 
 340:libs/CMSIS/Include/core_cmInstr.h **** 
 341:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:libs/CMSIS/Include/core_cmInstr.h **** 
 343:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:libs/CMSIS/Include/core_cmInstr.h **** 
 345:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 347:libs/CMSIS/Include/core_cmInstr.h ****  */
 348:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:libs/CMSIS/Include/core_cmInstr.h **** {
 350:libs/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 351:libs/CMSIS/Include/core_cmInstr.h ****   
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
  94              		.loc 2 352 0
  95 0072 D7F8CC30 		ldr	r3, [r7, #204]
  96              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
  97 0076 1CBA     		rev r4, r3
  98              	@ 0 "" 2
  99              		.thumb
 100 0078 C7F8C840 		str	r4, [r7, #200]
 353:libs/CMSIS/Include/core_cmInstr.h ****   return(result);
 101              		.loc 2 353 0
 102 007c D7F8C830 		ldr	r3, [r7, #200]
 103              	.LBE127:
 104              	.LBE126:
 105              		.loc 1 118 0
 106 0080 BB62     		str	r3, [r7, #40]
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 107              		.loc 1 119 0
 108 0082 D7F8D030 		ldr	r3, [r7, #208]
 109 0086 03F10403 		add	r3, r3, #4
 110 008a C7F8D030 		str	r3, [r7, #208]
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 111              		.loc 1 120 0
 112 008e D7F8D030 		ldr	r3, [r7, #208]
 113 0092 1B68     		ldr	r3, [r3, #0]
 114 0094 C7F8C430 		str	r3, [r7, #196]
 115              	.LBB128:
 116              	.LBB129:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 117              		.loc 2 352 0
 118 0098 D7F8C430 		ldr	r3, [r7, #196]
 119              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 120 009c 1CBA     		rev r4, r3
 121              	@ 0 "" 2
 122              		.thumb
 123 009e C7F8C040 		str	r4, [r7, #192]
 124              		.loc 2 353 0
 125 00a2 D7F8C030 		ldr	r3, [r7, #192]
 126              	.LBE129:
 127              	.LBE128:
 128              		.loc 1 120 0
 129 00a6 FB62     		str	r3, [r7, #44]
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 130              		.loc 1 121 0
 131 00a8 D7F8D030 		ldr	r3, [r7, #208]
 132 00ac 03F10403 		add	r3, r3, #4
 133 00b0 C7F8D030 		str	r3, [r7, #208]
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 134              		.loc 1 122 0
 135 00b4 D7F8D030 		ldr	r3, [r7, #208]
 136 00b8 1B68     		ldr	r3, [r3, #0]
 137 00ba C7F8BC30 		str	r3, [r7, #188]
 138              	.LBB130:
 139              	.LBB131:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 140              		.loc 2 352 0
 141 00be D7F8BC30 		ldr	r3, [r7, #188]
 142              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 143 00c2 1CBA     		rev r4, r3
 144              	@ 0 "" 2
 145              		.thumb
 146 00c4 C7F8B840 		str	r4, [r7, #184]
 147              		.loc 2 353 0
 148 00c8 D7F8B830 		ldr	r3, [r7, #184]
 149              	.LBE131:
 150              	.LBE130:
 151              		.loc 1 122 0
 152 00cc 3B63     		str	r3, [r7, #48]
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 153              		.loc 1 123 0
 154 00ce D7F8D030 		ldr	r3, [r7, #208]
 155 00d2 03F10403 		add	r3, r3, #4
 156 00d6 C7F8D030 		str	r3, [r7, #208]
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 157              		.loc 1 124 0
 158 00da D7F8D030 		ldr	r3, [r7, #208]
 159 00de 1B68     		ldr	r3, [r3, #0]
 160 00e0 C7F8B430 		str	r3, [r7, #180]
 161              	.LBB132:
 162              	.LBB133:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 163              		.loc 2 352 0
 164 00e4 D7F8B430 		ldr	r3, [r7, #180]
 165              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 166 00e8 1CBA     		rev r4, r3
 167              	@ 0 "" 2
 168              		.thumb
 169 00ea C7F8B040 		str	r4, [r7, #176]
 170              		.loc 2 353 0
 171 00ee D7F8B030 		ldr	r3, [r7, #176]
 172              	.LBE133:
 173              	.LBE132:
 174              		.loc 1 124 0
 175 00f2 7B63     		str	r3, [r7, #52]
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 176              		.loc 1 125 0
 177 00f4 E6E0     		b	.L6
 178              	.L4:
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 192:
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 179              		.loc 1 127 0
 180 00f6 4FF48073 		mov	r3, #256
 181 00fa FB87     		strh	r3, [r7, #62]	@ movhi
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 182              		.loc 1 128 0
 183 00fc D7F8D030 		ldr	r3, [r7, #208]
 184 0100 1B68     		ldr	r3, [r3, #0]
 185 0102 C7F8AC30 		str	r3, [r7, #172]
 186              	.LBB134:
 187              	.LBB135:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 188              		.loc 2 352 0
 189 0106 D7F8AC30 		ldr	r3, [r7, #172]
 190              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 191 010a 1CBA     		rev r4, r3
 192              	@ 0 "" 2
 193              		.thumb
 194 010c C7F8A840 		str	r4, [r7, #168]
 195              		.loc 2 353 0
 196 0110 D7F8A830 		ldr	r3, [r7, #168]
 197              	.LBE135:
 198              	.LBE134:
 199              		.loc 1 128 0
 200 0114 3B62     		str	r3, [r7, #32]
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 201              		.loc 1 129 0
 202 0116 D7F8D030 		ldr	r3, [r7, #208]
 203 011a 03F10403 		add	r3, r3, #4
 204 011e C7F8D030 		str	r3, [r7, #208]
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 205              		.loc 1 130 0
 206 0122 D7F8D030 		ldr	r3, [r7, #208]
 207 0126 1B68     		ldr	r3, [r3, #0]
 208 0128 C7F8A430 		str	r3, [r7, #164]
 209              	.LBB136:
 210              	.LBB137:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 211              		.loc 2 352 0
 212 012c D7F8A430 		ldr	r3, [r7, #164]
 213              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 214 0130 1CBA     		rev r4, r3
 215              	@ 0 "" 2
 216              		.thumb
 217 0132 C7F8A040 		str	r4, [r7, #160]
 218              		.loc 2 353 0
 219 0136 D7F8A030 		ldr	r3, [r7, #160]
 220              	.LBE137:
 221              	.LBE136:
 222              		.loc 1 130 0
 223 013a 7B62     		str	r3, [r7, #36]
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 224              		.loc 1 131 0
 225 013c D7F8D030 		ldr	r3, [r7, #208]
 226 0140 03F10403 		add	r3, r3, #4
 227 0144 C7F8D030 		str	r3, [r7, #208]
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 228              		.loc 1 132 0
 229 0148 D7F8D030 		ldr	r3, [r7, #208]
 230 014c 1B68     		ldr	r3, [r3, #0]
 231 014e C7F89C30 		str	r3, [r7, #156]
 232              	.LBB138:
 233              	.LBB139:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 234              		.loc 2 352 0
 235 0152 D7F89C30 		ldr	r3, [r7, #156]
 236              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 237 0156 1CBA     		rev r4, r3
 238              	@ 0 "" 2
 239              		.thumb
 240 0158 C7F89840 		str	r4, [r7, #152]
 241              		.loc 2 353 0
 242 015c D7F89830 		ldr	r3, [r7, #152]
 243              	.LBE139:
 244              	.LBE138:
 245              		.loc 1 132 0
 246 0160 BB62     		str	r3, [r7, #40]
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 247              		.loc 1 133 0
 248 0162 D7F8D030 		ldr	r3, [r7, #208]
 249 0166 03F10403 		add	r3, r3, #4
 250 016a C7F8D030 		str	r3, [r7, #208]
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 251              		.loc 1 134 0
 252 016e D7F8D030 		ldr	r3, [r7, #208]
 253 0172 1B68     		ldr	r3, [r3, #0]
 254 0174 C7F89430 		str	r3, [r7, #148]
 255              	.LBB140:
 256              	.LBB141:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 257              		.loc 2 352 0
 258 0178 D7F89430 		ldr	r3, [r7, #148]
 259              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 260 017c 1CBA     		rev r4, r3
 261              	@ 0 "" 2
 262              		.thumb
 263 017e C7F89040 		str	r4, [r7, #144]
 264              		.loc 2 353 0
 265 0182 D7F89030 		ldr	r3, [r7, #144]
 266              	.LBE141:
 267              	.LBE140:
 268              		.loc 1 134 0
 269 0186 FB62     		str	r3, [r7, #44]
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 270              		.loc 1 135 0
 271 0188 D7F8D030 		ldr	r3, [r7, #208]
 272 018c 03F10403 		add	r3, r3, #4
 273 0190 C7F8D030 		str	r3, [r7, #208]
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 274              		.loc 1 136 0
 275 0194 D7F8D030 		ldr	r3, [r7, #208]
 276 0198 1B68     		ldr	r3, [r3, #0]
 277 019a C7F88C30 		str	r3, [r7, #140]
 278              	.LBB142:
 279              	.LBB143:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 280              		.loc 2 352 0
 281 019e D7F88C30 		ldr	r3, [r7, #140]
 282              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 283 01a2 1CBA     		rev r4, r3
 284              	@ 0 "" 2
 285              		.thumb
 286 01a4 C7F88840 		str	r4, [r7, #136]
 287              		.loc 2 353 0
 288 01a8 D7F88830 		ldr	r3, [r7, #136]
 289              	.LBE143:
 290              	.LBE142:
 291              		.loc 1 136 0
 292 01ac 3B63     		str	r3, [r7, #48]
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 293              		.loc 1 137 0
 294 01ae D7F8D030 		ldr	r3, [r7, #208]
 295 01b2 03F10403 		add	r3, r3, #4
 296 01b6 C7F8D030 		str	r3, [r7, #208]
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 297              		.loc 1 138 0
 298 01ba D7F8D030 		ldr	r3, [r7, #208]
 299 01be 1B68     		ldr	r3, [r3, #0]
 300 01c0 C7F88430 		str	r3, [r7, #132]
 301              	.LBB144:
 302              	.LBB145:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 303              		.loc 2 352 0
 304 01c4 D7F88430 		ldr	r3, [r7, #132]
 305              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 306 01c8 1CBA     		rev r4, r3
 307              	@ 0 "" 2
 308              		.thumb
 309 01ca C7F88040 		str	r4, [r7, #128]
 310              		.loc 2 353 0
 311 01ce D7F88030 		ldr	r3, [r7, #128]
 312              	.LBE145:
 313              	.LBE144:
 314              		.loc 1 138 0
 315 01d2 7B63     		str	r3, [r7, #52]
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 316              		.loc 1 139 0
 317 01d4 76E0     		b	.L6
 318              	.L5:
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 256:
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 319              		.loc 1 141 0
 320 01d6 4FF40073 		mov	r3, #512
 321 01da FB87     		strh	r3, [r7, #62]	@ movhi
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 322              		.loc 1 142 0
 323 01dc D7F8D030 		ldr	r3, [r7, #208]
 324 01e0 1B68     		ldr	r3, [r3, #0]
 325 01e2 FB67     		str	r3, [r7, #124]
 326              	.LBB146:
 327              	.LBB147:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 328              		.loc 2 352 0
 329 01e4 FB6F     		ldr	r3, [r7, #124]
 330              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 331 01e6 1CBA     		rev r4, r3
 332              	@ 0 "" 2
 333              		.thumb
 334 01e8 BC67     		str	r4, [r7, #120]
 335              		.loc 2 353 0
 336 01ea BB6F     		ldr	r3, [r7, #120]
 337              	.LBE147:
 338              	.LBE146:
 339              		.loc 1 142 0
 340 01ec BB61     		str	r3, [r7, #24]
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 341              		.loc 1 143 0
 342 01ee D7F8D030 		ldr	r3, [r7, #208]
 343 01f2 03F10403 		add	r3, r3, #4
 344 01f6 C7F8D030 		str	r3, [r7, #208]
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 345              		.loc 1 144 0
 346 01fa D7F8D030 		ldr	r3, [r7, #208]
 347 01fe 1B68     		ldr	r3, [r3, #0]
 348 0200 7B67     		str	r3, [r7, #116]
 349              	.LBB148:
 350              	.LBB149:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 351              		.loc 2 352 0
 352 0202 7B6F     		ldr	r3, [r7, #116]
 353              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 354 0204 1CBA     		rev r4, r3
 355              	@ 0 "" 2
 356              		.thumb
 357 0206 3C67     		str	r4, [r7, #112]
 358              		.loc 2 353 0
 359 0208 3B6F     		ldr	r3, [r7, #112]
 360              	.LBE149:
 361              	.LBE148:
 362              		.loc 1 144 0
 363 020a FB61     		str	r3, [r7, #28]
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 364              		.loc 1 145 0
 365 020c D7F8D030 		ldr	r3, [r7, #208]
 366 0210 03F10403 		add	r3, r3, #4
 367 0214 C7F8D030 		str	r3, [r7, #208]
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 368              		.loc 1 146 0
 369 0218 D7F8D030 		ldr	r3, [r7, #208]
 370 021c 1B68     		ldr	r3, [r3, #0]
 371 021e FB66     		str	r3, [r7, #108]
 372              	.LBB150:
 373              	.LBB151:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 374              		.loc 2 352 0
 375 0220 FB6E     		ldr	r3, [r7, #108]
 376              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 377 0222 1CBA     		rev r4, r3
 378              	@ 0 "" 2
 379              		.thumb
 380 0224 BC66     		str	r4, [r7, #104]
 381              		.loc 2 353 0
 382 0226 BB6E     		ldr	r3, [r7, #104]
 383              	.LBE151:
 384              	.LBE150:
 385              		.loc 1 146 0
 386 0228 3B62     		str	r3, [r7, #32]
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 387              		.loc 1 147 0
 388 022a D7F8D030 		ldr	r3, [r7, #208]
 389 022e 03F10403 		add	r3, r3, #4
 390 0232 C7F8D030 		str	r3, [r7, #208]
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 391              		.loc 1 148 0
 392 0236 D7F8D030 		ldr	r3, [r7, #208]
 393 023a 1B68     		ldr	r3, [r3, #0]
 394 023c 7B66     		str	r3, [r7, #100]
 395              	.LBB152:
 396              	.LBB153:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 397              		.loc 2 352 0
 398 023e 7B6E     		ldr	r3, [r7, #100]
 399              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 400 0240 1CBA     		rev r4, r3
 401              	@ 0 "" 2
 402              		.thumb
 403 0242 3C66     		str	r4, [r7, #96]
 404              		.loc 2 353 0
 405 0244 3B6E     		ldr	r3, [r7, #96]
 406              	.LBE153:
 407              	.LBE152:
 408              		.loc 1 148 0
 409 0246 7B62     		str	r3, [r7, #36]
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 410              		.loc 1 149 0
 411 0248 D7F8D030 		ldr	r3, [r7, #208]
 412 024c 03F10403 		add	r3, r3, #4
 413 0250 C7F8D030 		str	r3, [r7, #208]
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 414              		.loc 1 150 0
 415 0254 D7F8D030 		ldr	r3, [r7, #208]
 416 0258 1B68     		ldr	r3, [r3, #0]
 417 025a FB65     		str	r3, [r7, #92]
 418              	.LBB154:
 419              	.LBB155:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 420              		.loc 2 352 0
 421 025c FB6D     		ldr	r3, [r7, #92]
 422              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 423 025e 1CBA     		rev r4, r3
 424              	@ 0 "" 2
 425              		.thumb
 426 0260 BC65     		str	r4, [r7, #88]
 427              		.loc 2 353 0
 428 0262 BB6D     		ldr	r3, [r7, #88]
 429              	.LBE155:
 430              	.LBE154:
 431              		.loc 1 150 0
 432 0264 BB62     		str	r3, [r7, #40]
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 433              		.loc 1 151 0
 434 0266 D7F8D030 		ldr	r3, [r7, #208]
 435 026a 03F10403 		add	r3, r3, #4
 436 026e C7F8D030 		str	r3, [r7, #208]
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 437              		.loc 1 152 0
 438 0272 D7F8D030 		ldr	r3, [r7, #208]
 439 0276 1B68     		ldr	r3, [r3, #0]
 440 0278 7B65     		str	r3, [r7, #84]
 441              	.LBB156:
 442              	.LBB157:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 443              		.loc 2 352 0
 444 027a 7B6D     		ldr	r3, [r7, #84]
 445              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 446 027c 1CBA     		rev r4, r3
 447              	@ 0 "" 2
 448              		.thumb
 449 027e 3C65     		str	r4, [r7, #80]
 450              		.loc 2 353 0
 451 0280 3B6D     		ldr	r3, [r7, #80]
 452              	.LBE157:
 453              	.LBE156:
 454              		.loc 1 152 0
 455 0282 FB62     		str	r3, [r7, #44]
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 456              		.loc 1 153 0
 457 0284 D7F8D030 		ldr	r3, [r7, #208]
 458 0288 03F10403 		add	r3, r3, #4
 459 028c C7F8D030 		str	r3, [r7, #208]
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 460              		.loc 1 154 0
 461 0290 D7F8D030 		ldr	r3, [r7, #208]
 462 0294 1B68     		ldr	r3, [r3, #0]
 463 0296 FB64     		str	r3, [r7, #76]
 464              	.LBB158:
 465              	.LBB159:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 466              		.loc 2 352 0
 467 0298 FB6C     		ldr	r3, [r7, #76]
 468              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 469 029a 1CBA     		rev r4, r3
 470              	@ 0 "" 2
 471              		.thumb
 472 029c BC64     		str	r4, [r7, #72]
 473              		.loc 2 353 0
 474 029e BB6C     		ldr	r3, [r7, #72]
 475              	.LBE159:
 476              	.LBE158:
 477              		.loc 1 154 0
 478 02a0 3B63     		str	r3, [r7, #48]
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 479              		.loc 1 155 0
 480 02a2 D7F8D030 		ldr	r3, [r7, #208]
 481 02a6 03F10403 		add	r3, r3, #4
 482 02aa C7F8D030 		str	r3, [r7, #208]
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 483              		.loc 1 156 0
 484 02ae D7F8D030 		ldr	r3, [r7, #208]
 485 02b2 1B68     		ldr	r3, [r3, #0]
 486 02b4 7B64     		str	r3, [r7, #68]
 487              	.LBB160:
 488              	.LBB161:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 489              		.loc 2 352 0
 490 02b6 7B6C     		ldr	r3, [r7, #68]
 491              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 492 02b8 1CBA     		rev r4, r3
 493              	@ 0 "" 2
 494              		.thumb
 495 02ba 3C64     		str	r4, [r7, #64]
 496              		.loc 2 353 0
 497 02bc 3B6C     		ldr	r3, [r7, #64]
 498              	.LBE161:
 499              	.LBE160:
 500              		.loc 1 156 0
 501 02be 7B63     		str	r3, [r7, #52]
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 502              		.loc 1 157 0
 503 02c0 00E0     		b	.L6
 504              	.L19:
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     default:
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 505              		.loc 1 159 0
 506 02c2 00BF     		nop
 507              	.L6:
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 508              		.loc 1 163 0
 509 02c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 510 02c6 002B     		cmp	r3, #0
 511 02c8 38D1     		bne	.L7
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 512              		.loc 1 166 0
 513 02ca FFF7FEFF 		bl	CRYP_FIFOFlush
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 514              		.loc 1 169 0
 515 02ce 4FF00403 		mov	r3, #4
 516 02d2 3B87     		strh	r3, [r7, #56]	@ movhi
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 517              		.loc 1 170 0
 518 02d4 4FF03803 		mov	r3, #56
 519 02d8 7B87     		strh	r3, [r7, #58]	@ movhi
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 520              		.loc 1 171 0
 521 02da 4FF00003 		mov	r3, #0
 522 02de BB87     		strh	r3, [r7, #60]	@ movhi
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 523              		.loc 1 172 0
 524 02e0 07F13803 		add	r3, r7, #56
 525 02e4 1846     		mov	r0, r3
 526 02e6 FFF7FEFF 		bl	CRYP_Init
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 527              		.loc 1 175 0
 528 02ea 07F11803 		add	r3, r7, #24
 529 02ee 1846     		mov	r0, r3
 530 02f0 FFF7FEFF 		bl	CRYP_KeyInit
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 531              		.loc 1 178 0
 532 02f4 4FF00100 		mov	r0, #1
 533 02f8 FFF7FEFF 		bl	CRYP_Cmd
 534              	.L9:
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 535              		.loc 1 183 0 discriminator 1
 536 02fc 4FF01000 		mov	r0, #16
 537 0300 FFF7FEFF 		bl	CRYP_GetFlagStatus
 538 0304 0346     		mov	r3, r0
 539 0306 C7F8D430 		str	r3, [r7, #212]
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 540              		.loc 1 184 0 discriminator 1
 541 030a 7B69     		ldr	r3, [r7, #20]
 542 030c 03F10103 		add	r3, r3, #1
 543 0310 7B61     		str	r3, [r7, #20]
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 544              		.loc 1 185 0 discriminator 1
 545 0312 7B69     		ldr	r3, [r7, #20]
 546 0314 B3F5803F 		cmp	r3, #65536
 547 0318 03D0     		beq	.L8
 548 031a D7F8D430 		ldr	r3, [r7, #212]
 549 031e 002B     		cmp	r3, #0
 550 0320 ECD1     		bne	.L9
 551              	.L8:
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 552              		.loc 1 187 0
 553 0322 D7F8D430 		ldr	r3, [r7, #212]
 554 0326 002B     		cmp	r3, #0
 555 0328 04D0     		beq	.L10
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 556              		.loc 1 189 0
 557 032a 4FF00003 		mov	r3, #0
 558 032e 87F8E730 		strb	r3, [r7, #231]
 559 0332 0BE0     		b	.L11
 560              	.L10:
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 561              		.loc 1 194 0
 562 0334 4FF00403 		mov	r3, #4
 563 0338 3B87     		strh	r3, [r7, #56]	@ movhi
 564 033a 07E0     		b	.L11
 565              	.L7:
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 566              		.loc 1 201 0
 567 033c 07F11803 		add	r3, r7, #24
 568 0340 1846     		mov	r0, r3
 569 0342 FFF7FEFF 		bl	CRYP_KeyInit
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 570              		.loc 1 204 0
 571 0346 4FF00003 		mov	r3, #0
 572 034a 3B87     		strh	r3, [r7, #56]	@ movhi
 573              	.L11:
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_ECB;
 574              		.loc 1 207 0
 575 034c 4FF02003 		mov	r3, #32
 576 0350 7B87     		strh	r3, [r7, #58]	@ movhi
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 577              		.loc 1 208 0
 578 0352 4FF08003 		mov	r3, #128
 579 0356 BB87     		strh	r3, [r7, #60]	@ movhi
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 580              		.loc 1 209 0
 581 0358 07F13803 		add	r3, r7, #56
 582 035c 1846     		mov	r0, r3
 583 035e FFF7FEFF 		bl	CRYP_Init
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 584              		.loc 1 212 0
 585 0362 FFF7FEFF 		bl	CRYP_FIFOFlush
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 586              		.loc 1 215 0
 587 0366 4FF00100 		mov	r0, #1
 588 036a FFF7FEFF 		bl	CRYP_Cmd
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 589              		.loc 1 217 0
 590 036e 4FF00003 		mov	r3, #0
 591 0372 C7F8D830 		str	r3, [r7, #216]
 592 0376 84E0     		b	.L12
 593              	.L18:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 594              		.loc 1 221 0
 595 0378 D7F8E030 		ldr	r3, [r7, #224]
 596 037c 1B68     		ldr	r3, [r3, #0]
 597 037e 1846     		mov	r0, r3
 598 0380 FFF7FEFF 		bl	CRYP_DataIn
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 599              		.loc 1 222 0
 600 0384 D7F8E030 		ldr	r3, [r7, #224]
 601 0388 03F10403 		add	r3, r3, #4
 602 038c C7F8E030 		str	r3, [r7, #224]
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 603              		.loc 1 223 0
 604 0390 D7F8E030 		ldr	r3, [r7, #224]
 605 0394 1B68     		ldr	r3, [r3, #0]
 606 0396 1846     		mov	r0, r3
 607 0398 FFF7FEFF 		bl	CRYP_DataIn
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 608              		.loc 1 224 0
 609 039c D7F8E030 		ldr	r3, [r7, #224]
 610 03a0 03F10403 		add	r3, r3, #4
 611 03a4 C7F8E030 		str	r3, [r7, #224]
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 612              		.loc 1 225 0
 613 03a8 D7F8E030 		ldr	r3, [r7, #224]
 614 03ac 1B68     		ldr	r3, [r3, #0]
 615 03ae 1846     		mov	r0, r3
 616 03b0 FFF7FEFF 		bl	CRYP_DataIn
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 617              		.loc 1 226 0
 618 03b4 D7F8E030 		ldr	r3, [r7, #224]
 619 03b8 03F10403 		add	r3, r3, #4
 620 03bc C7F8E030 		str	r3, [r7, #224]
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 621              		.loc 1 227 0
 622 03c0 D7F8E030 		ldr	r3, [r7, #224]
 623 03c4 1B68     		ldr	r3, [r3, #0]
 624 03c6 1846     		mov	r0, r3
 625 03c8 FFF7FEFF 		bl	CRYP_DataIn
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 626              		.loc 1 228 0
 627 03cc D7F8E030 		ldr	r3, [r7, #224]
 628 03d0 03F10403 		add	r3, r3, #4
 629 03d4 C7F8E030 		str	r3, [r7, #224]
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 630              		.loc 1 231 0
 631 03d8 4FF00003 		mov	r3, #0
 632 03dc 7B61     		str	r3, [r7, #20]
 633              	.L14:
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 634              		.loc 1 234 0 discriminator 1
 635 03de 4FF01000 		mov	r0, #16
 636 03e2 FFF7FEFF 		bl	CRYP_GetFlagStatus
 637 03e6 0346     		mov	r3, r0
 638 03e8 C7F8D430 		str	r3, [r7, #212]
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 639              		.loc 1 235 0 discriminator 1
 640 03ec 7B69     		ldr	r3, [r7, #20]
 641 03ee 03F10103 		add	r3, r3, #1
 642 03f2 7B61     		str	r3, [r7, #20]
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 643              		.loc 1 236 0 discriminator 1
 644 03f4 7B69     		ldr	r3, [r7, #20]
 645 03f6 B3F5803F 		cmp	r3, #65536
 646 03fa 03D0     		beq	.L13
 647 03fc D7F8D430 		ldr	r3, [r7, #212]
 648 0400 002B     		cmp	r3, #0
 649 0402 ECD1     		bne	.L14
 650              	.L13:
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 651              		.loc 1 238 0
 652 0404 D7F8D430 		ldr	r3, [r7, #212]
 653 0408 002B     		cmp	r3, #0
 654 040a 04D0     		beq	.L15
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 655              		.loc 1 240 0
 656 040c 4FF00003 		mov	r3, #0
 657 0410 87F8E730 		strb	r3, [r7, #231]
 658 0414 2FE0     		b	.L16
 659              	.L15:
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 660              		.loc 1 246 0
 661 0416 D7F8DC40 		ldr	r4, [r7, #220]
 662 041a FFF7FEFF 		bl	CRYP_DataOut
 663 041e 0346     		mov	r3, r0
 664 0420 2360     		str	r3, [r4, #0]
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 665              		.loc 1 247 0
 666 0422 D7F8DC30 		ldr	r3, [r7, #220]
 667 0426 03F10403 		add	r3, r3, #4
 668 042a C7F8DC30 		str	r3, [r7, #220]
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 669              		.loc 1 248 0
 670 042e D7F8DC40 		ldr	r4, [r7, #220]
 671 0432 FFF7FEFF 		bl	CRYP_DataOut
 672 0436 0346     		mov	r3, r0
 673 0438 2360     		str	r3, [r4, #0]
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 674              		.loc 1 249 0
 675 043a D7F8DC30 		ldr	r3, [r7, #220]
 676 043e 03F10403 		add	r3, r3, #4
 677 0442 C7F8DC30 		str	r3, [r7, #220]
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 678              		.loc 1 250 0
 679 0446 D7F8DC40 		ldr	r4, [r7, #220]
 680 044a FFF7FEFF 		bl	CRYP_DataOut
 681 044e 0346     		mov	r3, r0
 682 0450 2360     		str	r3, [r4, #0]
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 683              		.loc 1 251 0
 684 0452 D7F8DC30 		ldr	r3, [r7, #220]
 685 0456 03F10403 		add	r3, r3, #4
 686 045a C7F8DC30 		str	r3, [r7, #220]
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut(); 
 687              		.loc 1 252 0
 688 045e D7F8DC40 		ldr	r4, [r7, #220]
 689 0462 FFF7FEFF 		bl	CRYP_DataOut
 690 0466 0346     		mov	r3, r0
 691 0468 2360     		str	r3, [r4, #0]
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 692              		.loc 1 253 0
 693 046a D7F8DC30 		ldr	r3, [r7, #220]
 694 046e 03F10403 		add	r3, r3, #4
 695 0472 C7F8DC30 		str	r3, [r7, #220]
 696              	.L16:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 697              		.loc 1 217 0
 698 0476 D7F8D830 		ldr	r3, [r7, #216]
 699 047a 03F11003 		add	r3, r3, #16
 700 047e C7F8D830 		str	r3, [r7, #216]
 701              	.L12:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 702              		.loc 1 217 0 is_stmt 0 discriminator 1
 703 0482 D7F8D820 		ldr	r2, [r7, #216]
 704 0486 D7F8F830 		ldr	r3, [r7, #248]
 705 048a 9A42     		cmp	r2, r3
 706 048c 04D2     		bcs	.L17
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 707              		.loc 1 217 0 discriminator 2
 708 048e 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 709 0492 002B     		cmp	r3, #0
 710 0494 7FF470AF 		bne	.L18
 711              	.L17:
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 712              		.loc 1 258 0 is_stmt 1
 713 0498 4FF00000 		mov	r0, #0
 714 049c FFF7FEFF 		bl	CRYP_Cmd
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   return status; 
 715              		.loc 1 260 0
 716 04a0 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** }
 717              		.loc 1 261 0
 718 04a4 1846     		mov	r0, r3
 719 04a6 07F1EC07 		add	r7, r7, #236
 720 04aa BD46     		mov	sp, r7
 721 04ac 90BD     		pop	{r4, r7, pc}
 722              		.cfi_endproc
 723              	.LFE110:
 725 04ae 00BF     		.section	.text.CRYP_AES_CBC,"ax",%progbits
 726              		.align	2
 727              		.global	CRYP_AES_CBC
 728              		.thumb
 729              		.thumb_func
 731              	CRYP_AES_CBC:
 732              	.LFB111:
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CBC Mode
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CBC(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key,
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** {
 733              		.loc 1 282 0
 734              		.cfi_startproc
 735              		@ args = 12, pretend = 0, frame = 280
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737 0000 90B5     		push	{r4, r7, lr}
 738              	.LCFI3:
 739              		.cfi_def_cfa_offset 12
 740              		.cfi_offset 14, -4
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 4, -12
 743 0002 C7B0     		sub	sp, sp, #284
 744              	.LCFI4:
 745              		.cfi_def_cfa_offset 296
 746 0004 00AF     		add	r7, sp, #0
 747              	.LCFI5:
 748              		.cfi_def_cfa_register 7
 749 0006 07F10804 		add	r4, r7, #8
 750 000a 2160     		str	r1, [r4, #0]
 751 000c 07F10401 		add	r1, r7, #4
 752 0010 0A60     		str	r2, [r1, #0]
 753 0012 1A46     		mov	r2, r3
 754 0014 07F11003 		add	r3, r7, #16
 755 0018 03F1FF33 		add	r3, r3, #-1
 756 001c 0146     		mov	r1, r0
 757 001e 1970     		strb	r1, [r3, #0]
 758 0020 07F10C03 		add	r3, r7, #12
 759 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 760              		.loc 1 286 0
 761 0026 4FF00002 		mov	r2, #0
 762 002a 07F11003 		add	r3, r7, #16
 763 002e 1A60     		str	r2, [r3, #0]
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 764              		.loc 1 287 0
 765 0030 4FF00003 		mov	r3, #0
 766 0034 C7F80431 		str	r3, [r7, #260]
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 767              		.loc 1 288 0
 768 0038 4FF00103 		mov	r3, #1
 769 003c 87F81731 		strb	r3, [r7, #279]
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 770              		.loc 1 289 0
 771 0040 07F10403 		add	r3, r7, #4
 772 0044 1B68     		ldr	r3, [r3, #0]
 773 0046 C7F80031 		str	r3, [r7, #256]
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 774              		.loc 1 290 0
 775 004a D7F82831 		ldr	r3, [r7, #296]
 776 004e C7F81031 		str	r3, [r7, #272]
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 777              		.loc 1 291 0
 778 0052 D7F83031 		ldr	r3, [r7, #304]
 779 0056 C7F80C31 		str	r3, [r7, #268]
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 780              		.loc 1 292 0
 781 005a 07F10803 		add	r3, r7, #8
 782 005e 1B68     		ldr	r3, [r3, #0]
 783 0060 C7F8FC30 		str	r3, [r7, #252]
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 784              		.loc 1 293 0
 785 0064 4FF00003 		mov	r3, #0
 786 0068 C7F80831 		str	r3, [r7, #264]
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 787              		.loc 1 296 0
 788 006c 07F12403 		add	r3, r7, #36
 789 0070 1846     		mov	r0, r3
 790 0072 FFF7FEFF 		bl	CRYP_KeyStructInit
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 791              		.loc 1 298 0
 792 0076 07F10C03 		add	r3, r7, #12
 793 007a 1B88     		ldrh	r3, [r3, #0]
 794 007c C02B     		cmp	r3, #192
 795 007e 51D0     		beq	.L23
 796 0080 B3F5807F 		cmp	r3, #256
 797 0084 00F0BF80 		beq	.L24
 798 0088 802B     		cmp	r3, #128
 799 008a 40F04981 		bne	.L38
 800              	.L22:
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 128:
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 801              		.loc 1 301 0
 802 008e 4FF00003 		mov	r3, #0
 803 0092 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 804              		.loc 1 302 0
 805 0096 D7F80031 		ldr	r3, [r7, #256]
 806 009a 1B68     		ldr	r3, [r3, #0]
 807 009c C7F8F830 		str	r3, [r7, #248]
 808              	.LBB162:
 809              	.LBB163:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 810              		.loc 2 352 0
 811 00a0 D7F8F830 		ldr	r3, [r7, #248]
 812              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 813 00a4 1CBA     		rev r4, r3
 814              	@ 0 "" 2
 815              		.thumb
 816 00a6 C7F8F440 		str	r4, [r7, #244]
 817              		.loc 2 353 0
 818 00aa D7F8F430 		ldr	r3, [r7, #244]
 819              	.LBE163:
 820              	.LBE162:
 821              		.loc 1 302 0
 822 00ae 7B63     		str	r3, [r7, #52]
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 823              		.loc 1 303 0
 824 00b0 D7F80031 		ldr	r3, [r7, #256]
 825 00b4 03F10403 		add	r3, r3, #4
 826 00b8 C7F80031 		str	r3, [r7, #256]
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 827              		.loc 1 304 0
 828 00bc D7F80031 		ldr	r3, [r7, #256]
 829 00c0 1B68     		ldr	r3, [r3, #0]
 830 00c2 C7F8F030 		str	r3, [r7, #240]
 831              	.LBB164:
 832              	.LBB165:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 833              		.loc 2 352 0
 834 00c6 D7F8F030 		ldr	r3, [r7, #240]
 835              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 836 00ca 1CBA     		rev r4, r3
 837              	@ 0 "" 2
 838              		.thumb
 839 00cc C7F8EC40 		str	r4, [r7, #236]
 840              		.loc 2 353 0
 841 00d0 D7F8EC30 		ldr	r3, [r7, #236]
 842              	.LBE165:
 843              	.LBE164:
 844              		.loc 1 304 0
 845 00d4 BB63     		str	r3, [r7, #56]
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 846              		.loc 1 305 0
 847 00d6 D7F80031 		ldr	r3, [r7, #256]
 848 00da 03F10403 		add	r3, r3, #4
 849 00de C7F80031 		str	r3, [r7, #256]
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 850              		.loc 1 306 0
 851 00e2 D7F80031 		ldr	r3, [r7, #256]
 852 00e6 1B68     		ldr	r3, [r3, #0]
 853 00e8 C7F8E830 		str	r3, [r7, #232]
 854              	.LBB166:
 855              	.LBB167:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 856              		.loc 2 352 0
 857 00ec D7F8E830 		ldr	r3, [r7, #232]
 858              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 859 00f0 1CBA     		rev r4, r3
 860              	@ 0 "" 2
 861              		.thumb
 862 00f2 C7F8E440 		str	r4, [r7, #228]
 863              		.loc 2 353 0
 864 00f6 D7F8E430 		ldr	r3, [r7, #228]
 865              	.LBE167:
 866              	.LBE166:
 867              		.loc 1 306 0
 868 00fa FB63     		str	r3, [r7, #60]
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 869              		.loc 1 307 0
 870 00fc D7F80031 		ldr	r3, [r7, #256]
 871 0100 03F10403 		add	r3, r3, #4
 872 0104 C7F80031 		str	r3, [r7, #256]
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 873              		.loc 1 308 0
 874 0108 D7F80031 		ldr	r3, [r7, #256]
 875 010c 1B68     		ldr	r3, [r3, #0]
 876 010e C7F8E030 		str	r3, [r7, #224]
 877              	.LBB168:
 878              	.LBB169:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 879              		.loc 2 352 0
 880 0112 D7F8E030 		ldr	r3, [r7, #224]
 881              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 882 0116 1CBA     		rev r4, r3
 883              	@ 0 "" 2
 884              		.thumb
 885 0118 C7F8DC40 		str	r4, [r7, #220]
 886              		.loc 2 353 0
 887 011c D7F8DC30 		ldr	r3, [r7, #220]
 888              	.LBE169:
 889              	.LBE168:
 890              		.loc 1 308 0
 891 0120 3B64     		str	r3, [r7, #64]
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 892              		.loc 1 309 0
 893 0122 FEE0     		b	.L25
 894              	.L23:
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 192:
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 895              		.loc 1 311 0
 896 0124 4FF48073 		mov	r3, #256
 897 0128 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 898              		.loc 1 312 0
 899 012c D7F80031 		ldr	r3, [r7, #256]
 900 0130 1B68     		ldr	r3, [r3, #0]
 901 0132 C7F8D830 		str	r3, [r7, #216]
 902              	.LBB170:
 903              	.LBB171:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 904              		.loc 2 352 0
 905 0136 D7F8D830 		ldr	r3, [r7, #216]
 906              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 907 013a 1CBA     		rev r4, r3
 908              	@ 0 "" 2
 909              		.thumb
 910 013c C7F8D440 		str	r4, [r7, #212]
 911              		.loc 2 353 0
 912 0140 D7F8D430 		ldr	r3, [r7, #212]
 913              	.LBE171:
 914              	.LBE170:
 915              		.loc 1 312 0
 916 0144 FB62     		str	r3, [r7, #44]
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 917              		.loc 1 313 0
 918 0146 D7F80031 		ldr	r3, [r7, #256]
 919 014a 03F10403 		add	r3, r3, #4
 920 014e C7F80031 		str	r3, [r7, #256]
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 921              		.loc 1 314 0
 922 0152 D7F80031 		ldr	r3, [r7, #256]
 923 0156 1B68     		ldr	r3, [r3, #0]
 924 0158 C7F8D030 		str	r3, [r7, #208]
 925              	.LBB172:
 926              	.LBB173:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 927              		.loc 2 352 0
 928 015c D7F8D030 		ldr	r3, [r7, #208]
 929              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 930 0160 1CBA     		rev r4, r3
 931              	@ 0 "" 2
 932              		.thumb
 933 0162 C7F8CC40 		str	r4, [r7, #204]
 934              		.loc 2 353 0
 935 0166 D7F8CC30 		ldr	r3, [r7, #204]
 936              	.LBE173:
 937              	.LBE172:
 938              		.loc 1 314 0
 939 016a 3B63     		str	r3, [r7, #48]
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 940              		.loc 1 315 0
 941 016c D7F80031 		ldr	r3, [r7, #256]
 942 0170 03F10403 		add	r3, r3, #4
 943 0174 C7F80031 		str	r3, [r7, #256]
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 944              		.loc 1 316 0
 945 0178 D7F80031 		ldr	r3, [r7, #256]
 946 017c 1B68     		ldr	r3, [r3, #0]
 947 017e C7F8C830 		str	r3, [r7, #200]
 948              	.LBB174:
 949              	.LBB175:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 950              		.loc 2 352 0
 951 0182 D7F8C830 		ldr	r3, [r7, #200]
 952              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 953 0186 1CBA     		rev r4, r3
 954              	@ 0 "" 2
 955              		.thumb
 956 0188 C7F8C440 		str	r4, [r7, #196]
 957              		.loc 2 353 0
 958 018c D7F8C430 		ldr	r3, [r7, #196]
 959              	.LBE175:
 960              	.LBE174:
 961              		.loc 1 316 0
 962 0190 7B63     		str	r3, [r7, #52]
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 963              		.loc 1 317 0
 964 0192 D7F80031 		ldr	r3, [r7, #256]
 965 0196 03F10403 		add	r3, r3, #4
 966 019a C7F80031 		str	r3, [r7, #256]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 967              		.loc 1 318 0
 968 019e D7F80031 		ldr	r3, [r7, #256]
 969 01a2 1B68     		ldr	r3, [r3, #0]
 970 01a4 C7F8C030 		str	r3, [r7, #192]
 971              	.LBB176:
 972              	.LBB177:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 973              		.loc 2 352 0
 974 01a8 D7F8C030 		ldr	r3, [r7, #192]
 975              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 976 01ac 1CBA     		rev r4, r3
 977              	@ 0 "" 2
 978              		.thumb
 979 01ae C7F8BC40 		str	r4, [r7, #188]
 980              		.loc 2 353 0
 981 01b2 D7F8BC30 		ldr	r3, [r7, #188]
 982              	.LBE177:
 983              	.LBE176:
 984              		.loc 1 318 0
 985 01b6 BB63     		str	r3, [r7, #56]
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 986              		.loc 1 319 0
 987 01b8 D7F80031 		ldr	r3, [r7, #256]
 988 01bc 03F10403 		add	r3, r3, #4
 989 01c0 C7F80031 		str	r3, [r7, #256]
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 990              		.loc 1 320 0
 991 01c4 D7F80031 		ldr	r3, [r7, #256]
 992 01c8 1B68     		ldr	r3, [r3, #0]
 993 01ca C7F8B830 		str	r3, [r7, #184]
 994              	.LBB178:
 995              	.LBB179:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 996              		.loc 2 352 0
 997 01ce D7F8B830 		ldr	r3, [r7, #184]
 998              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 999 01d2 1CBA     		rev r4, r3
 1000              	@ 0 "" 2
 1001              		.thumb
 1002 01d4 C7F8B440 		str	r4, [r7, #180]
 1003              		.loc 2 353 0
 1004 01d8 D7F8B430 		ldr	r3, [r7, #180]
 1005              	.LBE179:
 1006              	.LBE178:
 1007              		.loc 1 320 0
 1008 01dc FB63     		str	r3, [r7, #60]
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1009              		.loc 1 321 0
 1010 01de D7F80031 		ldr	r3, [r7, #256]
 1011 01e2 03F10403 		add	r3, r3, #4
 1012 01e6 C7F80031 		str	r3, [r7, #256]
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1013              		.loc 1 322 0
 1014 01ea D7F80031 		ldr	r3, [r7, #256]
 1015 01ee 1B68     		ldr	r3, [r3, #0]
 1016 01f0 C7F8B030 		str	r3, [r7, #176]
 1017              	.LBB180:
 1018              	.LBB181:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1019              		.loc 2 352 0
 1020 01f4 D7F8B030 		ldr	r3, [r7, #176]
 1021              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1022 01f8 1CBA     		rev r4, r3
 1023              	@ 0 "" 2
 1024              		.thumb
 1025 01fa C7F8AC40 		str	r4, [r7, #172]
 1026              		.loc 2 353 0
 1027 01fe D7F8AC30 		ldr	r3, [r7, #172]
 1028              	.LBE181:
 1029              	.LBE180:
 1030              		.loc 1 322 0
 1031 0202 3B64     		str	r3, [r7, #64]
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1032              		.loc 1 323 0
 1033 0204 8DE0     		b	.L25
 1034              	.L24:
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 256:
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 1035              		.loc 1 325 0
 1036 0206 4FF40073 		mov	r3, #512
 1037 020a A7F84A30 		strh	r3, [r7, #74]	@ movhi
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1038              		.loc 1 326 0
 1039 020e D7F80031 		ldr	r3, [r7, #256]
 1040 0212 1B68     		ldr	r3, [r3, #0]
 1041 0214 C7F8A830 		str	r3, [r7, #168]
 1042              	.LBB182:
 1043              	.LBB183:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1044              		.loc 2 352 0
 1045 0218 D7F8A830 		ldr	r3, [r7, #168]
 1046              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1047 021c 1CBA     		rev r4, r3
 1048              	@ 0 "" 2
 1049              		.thumb
 1050 021e C7F8A440 		str	r4, [r7, #164]
 1051              		.loc 2 353 0
 1052 0222 D7F8A430 		ldr	r3, [r7, #164]
 1053              	.LBE183:
 1054              	.LBE182:
 1055              		.loc 1 326 0
 1056 0226 7B62     		str	r3, [r7, #36]
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1057              		.loc 1 327 0
 1058 0228 D7F80031 		ldr	r3, [r7, #256]
 1059 022c 03F10403 		add	r3, r3, #4
 1060 0230 C7F80031 		str	r3, [r7, #256]
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 1061              		.loc 1 328 0
 1062 0234 D7F80031 		ldr	r3, [r7, #256]
 1063 0238 1B68     		ldr	r3, [r3, #0]
 1064 023a C7F8A030 		str	r3, [r7, #160]
 1065              	.LBB184:
 1066              	.LBB185:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1067              		.loc 2 352 0
 1068 023e D7F8A030 		ldr	r3, [r7, #160]
 1069              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1070 0242 1CBA     		rev r4, r3
 1071              	@ 0 "" 2
 1072              		.thumb
 1073 0244 C7F89C40 		str	r4, [r7, #156]
 1074              		.loc 2 353 0
 1075 0248 D7F89C30 		ldr	r3, [r7, #156]
 1076              	.LBE185:
 1077              	.LBE184:
 1078              		.loc 1 328 0
 1079 024c BB62     		str	r3, [r7, #40]
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1080              		.loc 1 329 0
 1081 024e D7F80031 		ldr	r3, [r7, #256]
 1082 0252 03F10403 		add	r3, r3, #4
 1083 0256 C7F80031 		str	r3, [r7, #256]
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1084              		.loc 1 330 0
 1085 025a D7F80031 		ldr	r3, [r7, #256]
 1086 025e 1B68     		ldr	r3, [r3, #0]
 1087 0260 C7F89830 		str	r3, [r7, #152]
 1088              	.LBB186:
 1089              	.LBB187:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1090              		.loc 2 352 0
 1091 0264 D7F89830 		ldr	r3, [r7, #152]
 1092              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1093 0268 1CBA     		rev r4, r3
 1094              	@ 0 "" 2
 1095              		.thumb
 1096 026a C7F89440 		str	r4, [r7, #148]
 1097              		.loc 2 353 0
 1098 026e D7F89430 		ldr	r3, [r7, #148]
 1099              	.LBE187:
 1100              	.LBE186:
 1101              		.loc 1 330 0
 1102 0272 FB62     		str	r3, [r7, #44]
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1103              		.loc 1 331 0
 1104 0274 D7F80031 		ldr	r3, [r7, #256]
 1105 0278 03F10403 		add	r3, r3, #4
 1106 027c C7F80031 		str	r3, [r7, #256]
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1107              		.loc 1 332 0
 1108 0280 D7F80031 		ldr	r3, [r7, #256]
 1109 0284 1B68     		ldr	r3, [r3, #0]
 1110 0286 C7F89030 		str	r3, [r7, #144]
 1111              	.LBB188:
 1112              	.LBB189:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1113              		.loc 2 352 0
 1114 028a D7F89030 		ldr	r3, [r7, #144]
 1115              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1116 028e 1CBA     		rev r4, r3
 1117              	@ 0 "" 2
 1118              		.thumb
 1119 0290 C7F88C40 		str	r4, [r7, #140]
 1120              		.loc 2 353 0
 1121 0294 D7F88C30 		ldr	r3, [r7, #140]
 1122              	.LBE189:
 1123              	.LBE188:
 1124              		.loc 1 332 0
 1125 0298 3B63     		str	r3, [r7, #48]
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1126              		.loc 1 333 0
 1127 029a D7F80031 		ldr	r3, [r7, #256]
 1128 029e 03F10403 		add	r3, r3, #4
 1129 02a2 C7F80031 		str	r3, [r7, #256]
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1130              		.loc 1 334 0
 1131 02a6 D7F80031 		ldr	r3, [r7, #256]
 1132 02aa 1B68     		ldr	r3, [r3, #0]
 1133 02ac C7F88830 		str	r3, [r7, #136]
 1134              	.LBB190:
 1135              	.LBB191:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1136              		.loc 2 352 0
 1137 02b0 D7F88830 		ldr	r3, [r7, #136]
 1138              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1139 02b4 1CBA     		rev r4, r3
 1140              	@ 0 "" 2
 1141              		.thumb
 1142 02b6 C7F88440 		str	r4, [r7, #132]
 1143              		.loc 2 353 0
 1144 02ba D7F88430 		ldr	r3, [r7, #132]
 1145              	.LBE191:
 1146              	.LBE190:
 1147              		.loc 1 334 0
 1148 02be 7B63     		str	r3, [r7, #52]
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1149              		.loc 1 335 0
 1150 02c0 D7F80031 		ldr	r3, [r7, #256]
 1151 02c4 03F10403 		add	r3, r3, #4
 1152 02c8 C7F80031 		str	r3, [r7, #256]
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1153              		.loc 1 336 0
 1154 02cc D7F80031 		ldr	r3, [r7, #256]
 1155 02d0 1B68     		ldr	r3, [r3, #0]
 1156 02d2 C7F88030 		str	r3, [r7, #128]
 1157              	.LBB192:
 1158              	.LBB193:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1159              		.loc 2 352 0
 1160 02d6 D7F88030 		ldr	r3, [r7, #128]
 1161              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1162 02da 1CBA     		rev r4, r3
 1163              	@ 0 "" 2
 1164              		.thumb
 1165 02dc FC67     		str	r4, [r7, #124]
 1166              		.loc 2 353 0
 1167 02de FB6F     		ldr	r3, [r7, #124]
 1168              	.LBE193:
 1169              	.LBE192:
 1170              		.loc 1 336 0
 1171 02e0 BB63     		str	r3, [r7, #56]
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1172              		.loc 1 337 0
 1173 02e2 D7F80031 		ldr	r3, [r7, #256]
 1174 02e6 03F10403 		add	r3, r3, #4
 1175 02ea C7F80031 		str	r3, [r7, #256]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1176              		.loc 1 338 0
 1177 02ee D7F80031 		ldr	r3, [r7, #256]
 1178 02f2 1B68     		ldr	r3, [r3, #0]
 1179 02f4 BB67     		str	r3, [r7, #120]
 1180              	.LBB194:
 1181              	.LBB195:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1182              		.loc 2 352 0
 1183 02f6 BB6F     		ldr	r3, [r7, #120]
 1184              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1185 02f8 1CBA     		rev r4, r3
 1186              	@ 0 "" 2
 1187              		.thumb
 1188 02fa 7C67     		str	r4, [r7, #116]
 1189              		.loc 2 353 0
 1190 02fc 7B6F     		ldr	r3, [r7, #116]
 1191              	.LBE195:
 1192              	.LBE194:
 1193              		.loc 1 338 0
 1194 02fe FB63     		str	r3, [r7, #60]
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1195              		.loc 1 339 0
 1196 0300 D7F80031 		ldr	r3, [r7, #256]
 1197 0304 03F10403 		add	r3, r3, #4
 1198 0308 C7F80031 		str	r3, [r7, #256]
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1199              		.loc 1 340 0
 1200 030c D7F80031 		ldr	r3, [r7, #256]
 1201 0310 1B68     		ldr	r3, [r3, #0]
 1202 0312 3B67     		str	r3, [r7, #112]
 1203              	.LBB196:
 1204              	.LBB197:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1205              		.loc 2 352 0
 1206 0314 3B6F     		ldr	r3, [r7, #112]
 1207              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1208 0316 1CBA     		rev r4, r3
 1209              	@ 0 "" 2
 1210              		.thumb
 1211 0318 FC66     		str	r4, [r7, #108]
 1212              		.loc 2 353 0
 1213 031a FB6E     		ldr	r3, [r7, #108]
 1214              	.LBE197:
 1215              	.LBE196:
 1216              		.loc 1 340 0
 1217 031c 3B64     		str	r3, [r7, #64]
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1218              		.loc 1 341 0
 1219 031e 00E0     		b	.L25
 1220              	.L38:
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     default:
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1221              		.loc 1 343 0
 1222 0320 00BF     		nop
 1223              	.L25:
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 1224              		.loc 1 347 0
 1225 0322 D7F8FC30 		ldr	r3, [r7, #252]
 1226 0326 1B68     		ldr	r3, [r3, #0]
 1227 0328 BB66     		str	r3, [r7, #104]
 1228              	.LBB198:
 1229              	.LBB199:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1230              		.loc 2 352 0
 1231 032a BB6E     		ldr	r3, [r7, #104]
 1232              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1233 032c 1CBA     		rev r4, r3
 1234              	@ 0 "" 2
 1235              		.thumb
 1236 032e 7C66     		str	r4, [r7, #100]
 1237              		.loc 2 353 0
 1238 0330 7B6E     		ldr	r3, [r7, #100]
 1239              		.loc 1 347 0
 1240 0332 1A46     		mov	r2, r3
 1241              	.LBE199:
 1242              	.LBE198:
 1243 0334 07F11403 		add	r3, r7, #20
 1244 0338 1A60     		str	r2, [r3, #0]
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1245              		.loc 1 348 0
 1246 033a D7F8FC30 		ldr	r3, [r7, #252]
 1247 033e 03F10403 		add	r3, r3, #4
 1248 0342 C7F8FC30 		str	r3, [r7, #252]
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 1249              		.loc 1 349 0
 1250 0346 D7F8FC30 		ldr	r3, [r7, #252]
 1251 034a 1B68     		ldr	r3, [r3, #0]
 1252 034c 3B66     		str	r3, [r7, #96]
 1253              	.LBB200:
 1254              	.LBB201:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1255              		.loc 2 352 0
 1256 034e 3B6E     		ldr	r3, [r7, #96]
 1257              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1258 0350 1CBA     		rev r4, r3
 1259              	@ 0 "" 2
 1260              		.thumb
 1261 0352 FC65     		str	r4, [r7, #92]
 1262              		.loc 2 353 0
 1263 0354 FB6D     		ldr	r3, [r7, #92]
 1264              		.loc 1 349 0
 1265 0356 1A46     		mov	r2, r3
 1266              	.LBE201:
 1267              	.LBE200:
 1268 0358 07F11403 		add	r3, r7, #20
 1269 035c 5A60     		str	r2, [r3, #4]
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1270              		.loc 1 350 0
 1271 035e D7F8FC30 		ldr	r3, [r7, #252]
 1272 0362 03F10403 		add	r3, r3, #4
 1273 0366 C7F8FC30 		str	r3, [r7, #252]
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 1274              		.loc 1 351 0
 1275 036a D7F8FC30 		ldr	r3, [r7, #252]
 1276 036e 1B68     		ldr	r3, [r3, #0]
 1277 0370 BB65     		str	r3, [r7, #88]
 1278              	.LBB202:
 1279              	.LBB203:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1280              		.loc 2 352 0
 1281 0372 BB6D     		ldr	r3, [r7, #88]
 1282              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1283 0374 1CBA     		rev r4, r3
 1284              	@ 0 "" 2
 1285              		.thumb
 1286 0376 7C65     		str	r4, [r7, #84]
 1287              		.loc 2 353 0
 1288 0378 7B6D     		ldr	r3, [r7, #84]
 1289              		.loc 1 351 0
 1290 037a 1A46     		mov	r2, r3
 1291              	.LBE203:
 1292              	.LBE202:
 1293 037c 07F11403 		add	r3, r7, #20
 1294 0380 9A60     		str	r2, [r3, #8]
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1295              		.loc 1 352 0
 1296 0382 D7F8FC30 		ldr	r3, [r7, #252]
 1297 0386 03F10403 		add	r3, r3, #4
 1298 038a C7F8FC30 		str	r3, [r7, #252]
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 1299              		.loc 1 353 0
 1300 038e D7F8FC30 		ldr	r3, [r7, #252]
 1301 0392 1B68     		ldr	r3, [r3, #0]
 1302 0394 3B65     		str	r3, [r7, #80]
 1303              	.LBB204:
 1304              	.LBB205:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1305              		.loc 2 352 0
 1306 0396 3B6D     		ldr	r3, [r7, #80]
 1307              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1308 0398 1CBA     		rev r4, r3
 1309              	@ 0 "" 2
 1310              		.thumb
 1311 039a FC64     		str	r4, [r7, #76]
 1312              		.loc 2 353 0
 1313 039c FB6C     		ldr	r3, [r7, #76]
 1314              		.loc 1 353 0
 1315 039e 1A46     		mov	r2, r3
 1316              	.LBE205:
 1317              	.LBE204:
 1318 03a0 07F11403 		add	r3, r7, #20
 1319 03a4 DA60     		str	r2, [r3, #12]
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 1320              		.loc 1 357 0
 1321 03a6 07F11003 		add	r3, r7, #16
 1322 03aa 03F1FF33 		add	r3, r3, #-1
 1323 03ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1324 03b0 002B     		cmp	r3, #0
 1325 03b2 42D1     		bne	.L26
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 1326              		.loc 1 360 0
 1327 03b4 FFF7FEFF 		bl	CRYP_FIFOFlush
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1328              		.loc 1 363 0
 1329 03b8 4FF00403 		mov	r3, #4
 1330 03bc A7F84430 		strh	r3, [r7, #68]	@ movhi
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 1331              		.loc 1 364 0
 1332 03c0 4FF03803 		mov	r3, #56
 1333 03c4 A7F84630 		strh	r3, [r7, #70]	@ movhi
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 1334              		.loc 1 365 0
 1335 03c8 4FF00003 		mov	r3, #0
 1336 03cc A7F84830 		strh	r3, [r7, #72]	@ movhi
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 1337              		.loc 1 367 0
 1338 03d0 07F14403 		add	r3, r7, #68
 1339 03d4 1846     		mov	r0, r3
 1340 03d6 FFF7FEFF 		bl	CRYP_Init
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1341              		.loc 1 370 0
 1342 03da 07F12403 		add	r3, r7, #36
 1343 03de 1846     		mov	r0, r3
 1344 03e0 FFF7FEFF 		bl	CRYP_KeyInit
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 1345              		.loc 1 373 0
 1346 03e4 4FF00100 		mov	r0, #1
 1347 03e8 FFF7FEFF 		bl	CRYP_Cmd
 1348              	.L28:
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 1349              		.loc 1 378 0 discriminator 1
 1350 03ec 4FF01000 		mov	r0, #16
 1351 03f0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 1352 03f4 0346     		mov	r3, r0
 1353 03f6 C7F80431 		str	r3, [r7, #260]
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 1354              		.loc 1 379 0 discriminator 1
 1355 03fa 07F11003 		add	r3, r7, #16
 1356 03fe 1B68     		ldr	r3, [r3, #0]
 1357 0400 03F10102 		add	r2, r3, #1
 1358 0404 07F11003 		add	r3, r7, #16
 1359 0408 1A60     		str	r2, [r3, #0]
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1360              		.loc 1 380 0 discriminator 1
 1361 040a 07F11003 		add	r3, r7, #16
 1362 040e 1B68     		ldr	r3, [r3, #0]
 1363 0410 B3F5803F 		cmp	r3, #65536
 1364 0414 03D0     		beq	.L27
 1365 0416 D7F80431 		ldr	r3, [r7, #260]
 1366 041a 002B     		cmp	r3, #0
 1367 041c E6D1     		bne	.L28
 1368              	.L27:
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1369              		.loc 1 382 0
 1370 041e D7F80431 		ldr	r3, [r7, #260]
 1371 0422 002B     		cmp	r3, #0
 1372 0424 04D0     		beq	.L29
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1373              		.loc 1 384 0
 1374 0426 4FF00003 		mov	r3, #0
 1375 042a 87F81731 		strb	r3, [r7, #279]
 1376 042e 0DE0     		b	.L30
 1377              	.L29:
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1378              		.loc 1 389 0
 1379 0430 4FF00403 		mov	r3, #4
 1380 0434 A7F84430 		strh	r3, [r7, #68]	@ movhi
 1381 0438 08E0     		b	.L30
 1382              	.L26:
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1383              		.loc 1 395 0
 1384 043a 07F12403 		add	r3, r7, #36
 1385 043e 1846     		mov	r0, r3
 1386 0440 FFF7FEFF 		bl	CRYP_KeyInit
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 1387              		.loc 1 398 0
 1388 0444 4FF00003 		mov	r3, #0
 1389 0448 A7F84430 		strh	r3, [r7, #68]	@ movhi
 1390              	.L30:
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CBC;
 1391              		.loc 1 400 0
 1392 044c 4FF02803 		mov	r3, #40
 1393 0450 A7F84630 		strh	r3, [r7, #70]	@ movhi
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 1394              		.loc 1 401 0
 1395 0454 4FF08003 		mov	r3, #128
 1396 0458 A7F84830 		strh	r3, [r7, #72]	@ movhi
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 1397              		.loc 1 402 0
 1398 045c 07F14403 		add	r3, r7, #68
 1399 0460 1846     		mov	r0, r3
 1400 0462 FFF7FEFF 		bl	CRYP_Init
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 1401              		.loc 1 405 0
 1402 0466 07F11403 		add	r3, r7, #20
 1403 046a 1846     		mov	r0, r3
 1404 046c FFF7FEFF 		bl	CRYP_IVInit
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 1405              		.loc 1 408 0
 1406 0470 FFF7FEFF 		bl	CRYP_FIFOFlush
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 1407              		.loc 1 411 0
 1408 0474 4FF00100 		mov	r0, #1
 1409 0478 FFF7FEFF 		bl	CRYP_Cmd
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1410              		.loc 1 414 0
 1411 047c 4FF00003 		mov	r3, #0
 1412 0480 C7F80831 		str	r3, [r7, #264]
 1413 0484 8CE0     		b	.L31
 1414              	.L37:
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1415              		.loc 1 418 0
 1416 0486 D7F81031 		ldr	r3, [r7, #272]
 1417 048a 1B68     		ldr	r3, [r3, #0]
 1418 048c 1846     		mov	r0, r3
 1419 048e FFF7FEFF 		bl	CRYP_DataIn
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1420              		.loc 1 419 0
 1421 0492 D7F81031 		ldr	r3, [r7, #272]
 1422 0496 03F10403 		add	r3, r3, #4
 1423 049a C7F81031 		str	r3, [r7, #272]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1424              		.loc 1 420 0
 1425 049e D7F81031 		ldr	r3, [r7, #272]
 1426 04a2 1B68     		ldr	r3, [r3, #0]
 1427 04a4 1846     		mov	r0, r3
 1428 04a6 FFF7FEFF 		bl	CRYP_DataIn
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1429              		.loc 1 421 0
 1430 04aa D7F81031 		ldr	r3, [r7, #272]
 1431 04ae 03F10403 		add	r3, r3, #4
 1432 04b2 C7F81031 		str	r3, [r7, #272]
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1433              		.loc 1 422 0
 1434 04b6 D7F81031 		ldr	r3, [r7, #272]
 1435 04ba 1B68     		ldr	r3, [r3, #0]
 1436 04bc 1846     		mov	r0, r3
 1437 04be FFF7FEFF 		bl	CRYP_DataIn
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1438              		.loc 1 423 0
 1439 04c2 D7F81031 		ldr	r3, [r7, #272]
 1440 04c6 03F10403 		add	r3, r3, #4
 1441 04ca C7F81031 		str	r3, [r7, #272]
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1442              		.loc 1 424 0
 1443 04ce D7F81031 		ldr	r3, [r7, #272]
 1444 04d2 1B68     		ldr	r3, [r3, #0]
 1445 04d4 1846     		mov	r0, r3
 1446 04d6 FFF7FEFF 		bl	CRYP_DataIn
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1447              		.loc 1 425 0
 1448 04da D7F81031 		ldr	r3, [r7, #272]
 1449 04de 03F10403 		add	r3, r3, #4
 1450 04e2 C7F81031 		str	r3, [r7, #272]
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 1451              		.loc 1 427 0
 1452 04e6 4FF00002 		mov	r2, #0
 1453 04ea 07F11003 		add	r3, r7, #16
 1454 04ee 1A60     		str	r2, [r3, #0]
 1455              	.L33:
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 1456              		.loc 1 430 0 discriminator 1
 1457 04f0 4FF01000 		mov	r0, #16
 1458 04f4 FFF7FEFF 		bl	CRYP_GetFlagStatus
 1459 04f8 0346     		mov	r3, r0
 1460 04fa C7F80431 		str	r3, [r7, #260]
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 1461              		.loc 1 431 0 discriminator 1
 1462 04fe 07F11003 		add	r3, r7, #16
 1463 0502 1B68     		ldr	r3, [r3, #0]
 1464 0504 03F10102 		add	r2, r3, #1
 1465 0508 07F11003 		add	r3, r7, #16
 1466 050c 1A60     		str	r2, [r3, #0]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1467              		.loc 1 432 0 discriminator 1
 1468 050e 07F11003 		add	r3, r7, #16
 1469 0512 1B68     		ldr	r3, [r3, #0]
 1470 0514 B3F5803F 		cmp	r3, #65536
 1471 0518 03D0     		beq	.L32
 1472 051a D7F80431 		ldr	r3, [r7, #260]
 1473 051e 002B     		cmp	r3, #0
 1474 0520 E6D1     		bne	.L33
 1475              	.L32:
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1476              		.loc 1 434 0
 1477 0522 D7F80431 		ldr	r3, [r7, #260]
 1478 0526 002B     		cmp	r3, #0
 1479 0528 04D0     		beq	.L34
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1480              		.loc 1 436 0
 1481 052a 4FF00003 		mov	r3, #0
 1482 052e 87F81731 		strb	r3, [r7, #279]
 1483 0532 2FE0     		b	.L35
 1484              	.L34:
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1485              		.loc 1 442 0
 1486 0534 D7F80C41 		ldr	r4, [r7, #268]
 1487 0538 FFF7FEFF 		bl	CRYP_DataOut
 1488 053c 0346     		mov	r3, r0
 1489 053e 2360     		str	r3, [r4, #0]
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1490              		.loc 1 443 0
 1491 0540 D7F80C31 		ldr	r3, [r7, #268]
 1492 0544 03F10403 		add	r3, r3, #4
 1493 0548 C7F80C31 		str	r3, [r7, #268]
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1494              		.loc 1 444 0
 1495 054c D7F80C41 		ldr	r4, [r7, #268]
 1496 0550 FFF7FEFF 		bl	CRYP_DataOut
 1497 0554 0346     		mov	r3, r0
 1498 0556 2360     		str	r3, [r4, #0]
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1499              		.loc 1 445 0
 1500 0558 D7F80C31 		ldr	r3, [r7, #268]
 1501 055c 03F10403 		add	r3, r3, #4
 1502 0560 C7F80C31 		str	r3, [r7, #268]
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1503              		.loc 1 446 0
 1504 0564 D7F80C41 		ldr	r4, [r7, #268]
 1505 0568 FFF7FEFF 		bl	CRYP_DataOut
 1506 056c 0346     		mov	r3, r0
 1507 056e 2360     		str	r3, [r4, #0]
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1508              		.loc 1 447 0
 1509 0570 D7F80C31 		ldr	r3, [r7, #268]
 1510 0574 03F10403 		add	r3, r3, #4
 1511 0578 C7F80C31 		str	r3, [r7, #268]
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1512              		.loc 1 448 0
 1513 057c D7F80C41 		ldr	r4, [r7, #268]
 1514 0580 FFF7FEFF 		bl	CRYP_DataOut
 1515 0584 0346     		mov	r3, r0
 1516 0586 2360     		str	r3, [r4, #0]
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1517              		.loc 1 449 0
 1518 0588 D7F80C31 		ldr	r3, [r7, #268]
 1519 058c 03F10403 		add	r3, r3, #4
 1520 0590 C7F80C31 		str	r3, [r7, #268]
 1521              	.L35:
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1522              		.loc 1 414 0
 1523 0594 D7F80831 		ldr	r3, [r7, #264]
 1524 0598 03F11003 		add	r3, r3, #16
 1525 059c C7F80831 		str	r3, [r7, #264]
 1526              	.L31:
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1527              		.loc 1 414 0 is_stmt 0 discriminator 1
 1528 05a0 D7F80821 		ldr	r2, [r7, #264]
 1529 05a4 D7F82C31 		ldr	r3, [r7, #300]
 1530 05a8 9A42     		cmp	r2, r3
 1531 05aa 04D2     		bcs	.L36
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1532              		.loc 1 414 0 discriminator 2
 1533 05ac 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1534 05b0 002B     		cmp	r3, #0
 1535 05b2 7FF468AF 		bne	.L37
 1536              	.L36:
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 1537              		.loc 1 454 0 is_stmt 1
 1538 05b6 4FF00000 		mov	r0, #0
 1539 05ba FFF7FEFF 		bl	CRYP_Cmd
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   return status;
 1540              		.loc 1 456 0
 1541 05be 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** }
 1542              		.loc 1 457 0
 1543 05c2 1846     		mov	r0, r3
 1544 05c4 07F58E77 		add	r7, r7, #284
 1545 05c8 BD46     		mov	sp, r7
 1546 05ca 90BD     		pop	{r4, r7, pc}
 1547              		.cfi_endproc
 1548              	.LFE111:
 1550              		.section	.text.CRYP_AES_CTR,"ax",%progbits
 1551              		.align	2
 1552              		.global	CRYP_AES_CTR
 1553              		.thumb
 1554              		.thumb_func
 1556              	CRYP_AES_CTR:
 1557              	.LFB112:
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CTR Mode
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *           This parameter can be one of the following values:
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CTR(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key, 
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** {
 1558              		.loc 1 478 0
 1559              		.cfi_startproc
 1560              		@ args = 12, pretend = 0, frame = 280
 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562 0000 90B5     		push	{r4, r7, lr}
 1563              	.LCFI6:
 1564              		.cfi_def_cfa_offset 12
 1565              		.cfi_offset 14, -4
 1566              		.cfi_offset 7, -8
 1567              		.cfi_offset 4, -12
 1568 0002 C7B0     		sub	sp, sp, #284
 1569              	.LCFI7:
 1570              		.cfi_def_cfa_offset 296
 1571 0004 00AF     		add	r7, sp, #0
 1572              	.LCFI8:
 1573              		.cfi_def_cfa_register 7
 1574 0006 07F10804 		add	r4, r7, #8
 1575 000a 2160     		str	r1, [r4, #0]
 1576 000c 07F10401 		add	r1, r7, #4
 1577 0010 0A60     		str	r2, [r1, #0]
 1578 0012 1A46     		mov	r2, r3
 1579 0014 07F11003 		add	r3, r7, #16
 1580 0018 03F1FF33 		add	r3, r3, #-1
 1581 001c 0146     		mov	r1, r0
 1582 001e 1970     		strb	r1, [r3, #0]
 1583 0020 07F10C03 		add	r3, r7, #12
 1584 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 1585              		.loc 1 482 0
 1586 0026 4FF00002 		mov	r2, #0
 1587 002a 07F11003 		add	r3, r7, #16
 1588 002e 1A60     		str	r2, [r3, #0]
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 1589              		.loc 1 483 0
 1590 0030 4FF00003 		mov	r3, #0
 1591 0034 C7F80431 		str	r3, [r7, #260]
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 1592              		.loc 1 484 0
 1593 0038 4FF00103 		mov	r3, #1
 1594 003c 87F81731 		strb	r3, [r7, #279]
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 1595              		.loc 1 485 0
 1596 0040 07F10403 		add	r3, r7, #4
 1597 0044 1B68     		ldr	r3, [r3, #0]
 1598 0046 C7F80031 		str	r3, [r7, #256]
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 1599              		.loc 1 486 0
 1600 004a D7F82831 		ldr	r3, [r7, #296]
 1601 004e C7F81031 		str	r3, [r7, #272]
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 1602              		.loc 1 487 0
 1603 0052 D7F83031 		ldr	r3, [r7, #304]
 1604 0056 C7F80C31 		str	r3, [r7, #268]
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 1605              		.loc 1 488 0
 1606 005a 07F10803 		add	r3, r7, #8
 1607 005e 1B68     		ldr	r3, [r3, #0]
 1608 0060 C7F8FC30 		str	r3, [r7, #252]
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 1609              		.loc 1 489 0
 1610 0064 4FF00003 		mov	r3, #0
 1611 0068 C7F80831 		str	r3, [r7, #264]
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 1612              		.loc 1 492 0
 1613 006c 07F12403 		add	r3, r7, #36
 1614 0070 1846     		mov	r0, r3
 1615 0072 FFF7FEFF 		bl	CRYP_KeyStructInit
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 1616              		.loc 1 494 0
 1617 0076 07F10C03 		add	r3, r7, #12
 1618 007a 1B88     		ldrh	r3, [r3, #0]
 1619 007c C02B     		cmp	r3, #192
 1620 007e 51D0     		beq	.L42
 1621 0080 B3F5807F 		cmp	r3, #256
 1622 0084 00F0BF80 		beq	.L43
 1623 0088 802B     		cmp	r3, #128
 1624 008a 40F04981 		bne	.L54
 1625              	.L41:
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 128:
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 1626              		.loc 1 497 0
 1627 008e 4FF00003 		mov	r3, #0
 1628 0092 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1629              		.loc 1 498 0
 1630 0096 D7F80031 		ldr	r3, [r7, #256]
 1631 009a 1B68     		ldr	r3, [r3, #0]
 1632 009c C7F8F830 		str	r3, [r7, #248]
 1633              	.LBB206:
 1634              	.LBB207:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1635              		.loc 2 352 0
 1636 00a0 D7F8F830 		ldr	r3, [r7, #248]
 1637              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1638 00a4 1CBA     		rev r4, r3
 1639              	@ 0 "" 2
 1640              		.thumb
 1641 00a6 C7F8F440 		str	r4, [r7, #244]
 1642              		.loc 2 353 0
 1643 00aa D7F8F430 		ldr	r3, [r7, #244]
 1644              	.LBE207:
 1645              	.LBE206:
 1646              		.loc 1 498 0
 1647 00ae 7B63     		str	r3, [r7, #52]
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1648              		.loc 1 499 0
 1649 00b0 D7F80031 		ldr	r3, [r7, #256]
 1650 00b4 03F10403 		add	r3, r3, #4
 1651 00b8 C7F80031 		str	r3, [r7, #256]
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1652              		.loc 1 500 0
 1653 00bc D7F80031 		ldr	r3, [r7, #256]
 1654 00c0 1B68     		ldr	r3, [r3, #0]
 1655 00c2 C7F8F030 		str	r3, [r7, #240]
 1656              	.LBB208:
 1657              	.LBB209:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1658              		.loc 2 352 0
 1659 00c6 D7F8F030 		ldr	r3, [r7, #240]
 1660              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1661 00ca 1CBA     		rev r4, r3
 1662              	@ 0 "" 2
 1663              		.thumb
 1664 00cc C7F8EC40 		str	r4, [r7, #236]
 1665              		.loc 2 353 0
 1666 00d0 D7F8EC30 		ldr	r3, [r7, #236]
 1667              	.LBE209:
 1668              	.LBE208:
 1669              		.loc 1 500 0
 1670 00d4 BB63     		str	r3, [r7, #56]
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1671              		.loc 1 501 0
 1672 00d6 D7F80031 		ldr	r3, [r7, #256]
 1673 00da 03F10403 		add	r3, r3, #4
 1674 00de C7F80031 		str	r3, [r7, #256]
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1675              		.loc 1 502 0
 1676 00e2 D7F80031 		ldr	r3, [r7, #256]
 1677 00e6 1B68     		ldr	r3, [r3, #0]
 1678 00e8 C7F8E830 		str	r3, [r7, #232]
 1679              	.LBB210:
 1680              	.LBB211:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1681              		.loc 2 352 0
 1682 00ec D7F8E830 		ldr	r3, [r7, #232]
 1683              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1684 00f0 1CBA     		rev r4, r3
 1685              	@ 0 "" 2
 1686              		.thumb
 1687 00f2 C7F8E440 		str	r4, [r7, #228]
 1688              		.loc 2 353 0
 1689 00f6 D7F8E430 		ldr	r3, [r7, #228]
 1690              	.LBE211:
 1691              	.LBE210:
 1692              		.loc 1 502 0
 1693 00fa FB63     		str	r3, [r7, #60]
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1694              		.loc 1 503 0
 1695 00fc D7F80031 		ldr	r3, [r7, #256]
 1696 0100 03F10403 		add	r3, r3, #4
 1697 0104 C7F80031 		str	r3, [r7, #256]
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1698              		.loc 1 504 0
 1699 0108 D7F80031 		ldr	r3, [r7, #256]
 1700 010c 1B68     		ldr	r3, [r3, #0]
 1701 010e C7F8E030 		str	r3, [r7, #224]
 1702              	.LBB212:
 1703              	.LBB213:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1704              		.loc 2 352 0
 1705 0112 D7F8E030 		ldr	r3, [r7, #224]
 1706              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1707 0116 1CBA     		rev r4, r3
 1708              	@ 0 "" 2
 1709              		.thumb
 1710 0118 C7F8DC40 		str	r4, [r7, #220]
 1711              		.loc 2 353 0
 1712 011c D7F8DC30 		ldr	r3, [r7, #220]
 1713              	.LBE213:
 1714              	.LBE212:
 1715              		.loc 1 504 0
 1716 0120 3B64     		str	r3, [r7, #64]
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1717              		.loc 1 505 0
 1718 0122 FEE0     		b	.L44
 1719              	.L42:
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 192:
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 1720              		.loc 1 507 0
 1721 0124 4FF48073 		mov	r3, #256
 1722 0128 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1723              		.loc 1 508 0
 1724 012c D7F80031 		ldr	r3, [r7, #256]
 1725 0130 1B68     		ldr	r3, [r3, #0]
 1726 0132 C7F8D830 		str	r3, [r7, #216]
 1727              	.LBB214:
 1728              	.LBB215:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1729              		.loc 2 352 0
 1730 0136 D7F8D830 		ldr	r3, [r7, #216]
 1731              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1732 013a 1CBA     		rev r4, r3
 1733              	@ 0 "" 2
 1734              		.thumb
 1735 013c C7F8D440 		str	r4, [r7, #212]
 1736              		.loc 2 353 0
 1737 0140 D7F8D430 		ldr	r3, [r7, #212]
 1738              	.LBE215:
 1739              	.LBE214:
 1740              		.loc 1 508 0
 1741 0144 FB62     		str	r3, [r7, #44]
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1742              		.loc 1 509 0
 1743 0146 D7F80031 		ldr	r3, [r7, #256]
 1744 014a 03F10403 		add	r3, r3, #4
 1745 014e C7F80031 		str	r3, [r7, #256]
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1746              		.loc 1 510 0
 1747 0152 D7F80031 		ldr	r3, [r7, #256]
 1748 0156 1B68     		ldr	r3, [r3, #0]
 1749 0158 C7F8D030 		str	r3, [r7, #208]
 1750              	.LBB216:
 1751              	.LBB217:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1752              		.loc 2 352 0
 1753 015c D7F8D030 		ldr	r3, [r7, #208]
 1754              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1755 0160 1CBA     		rev r4, r3
 1756              	@ 0 "" 2
 1757              		.thumb
 1758 0162 C7F8CC40 		str	r4, [r7, #204]
 1759              		.loc 2 353 0
 1760 0166 D7F8CC30 		ldr	r3, [r7, #204]
 1761              	.LBE217:
 1762              	.LBE216:
 1763              		.loc 1 510 0
 1764 016a 3B63     		str	r3, [r7, #48]
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1765              		.loc 1 511 0
 1766 016c D7F80031 		ldr	r3, [r7, #256]
 1767 0170 03F10403 		add	r3, r3, #4
 1768 0174 C7F80031 		str	r3, [r7, #256]
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1769              		.loc 1 512 0
 1770 0178 D7F80031 		ldr	r3, [r7, #256]
 1771 017c 1B68     		ldr	r3, [r3, #0]
 1772 017e C7F8C830 		str	r3, [r7, #200]
 1773              	.LBB218:
 1774              	.LBB219:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1775              		.loc 2 352 0
 1776 0182 D7F8C830 		ldr	r3, [r7, #200]
 1777              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1778 0186 1CBA     		rev r4, r3
 1779              	@ 0 "" 2
 1780              		.thumb
 1781 0188 C7F8C440 		str	r4, [r7, #196]
 1782              		.loc 2 353 0
 1783 018c D7F8C430 		ldr	r3, [r7, #196]
 1784              	.LBE219:
 1785              	.LBE218:
 1786              		.loc 1 512 0
 1787 0190 7B63     		str	r3, [r7, #52]
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1788              		.loc 1 513 0
 1789 0192 D7F80031 		ldr	r3, [r7, #256]
 1790 0196 03F10403 		add	r3, r3, #4
 1791 019a C7F80031 		str	r3, [r7, #256]
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1792              		.loc 1 514 0
 1793 019e D7F80031 		ldr	r3, [r7, #256]
 1794 01a2 1B68     		ldr	r3, [r3, #0]
 1795 01a4 C7F8C030 		str	r3, [r7, #192]
 1796              	.LBB220:
 1797              	.LBB221:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1798              		.loc 2 352 0
 1799 01a8 D7F8C030 		ldr	r3, [r7, #192]
 1800              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1801 01ac 1CBA     		rev r4, r3
 1802              	@ 0 "" 2
 1803              		.thumb
 1804 01ae C7F8BC40 		str	r4, [r7, #188]
 1805              		.loc 2 353 0
 1806 01b2 D7F8BC30 		ldr	r3, [r7, #188]
 1807              	.LBE221:
 1808              	.LBE220:
 1809              		.loc 1 514 0
 1810 01b6 BB63     		str	r3, [r7, #56]
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1811              		.loc 1 515 0
 1812 01b8 D7F80031 		ldr	r3, [r7, #256]
 1813 01bc 03F10403 		add	r3, r3, #4
 1814 01c0 C7F80031 		str	r3, [r7, #256]
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1815              		.loc 1 516 0
 1816 01c4 D7F80031 		ldr	r3, [r7, #256]
 1817 01c8 1B68     		ldr	r3, [r3, #0]
 1818 01ca C7F8B830 		str	r3, [r7, #184]
 1819              	.LBB222:
 1820              	.LBB223:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1821              		.loc 2 352 0
 1822 01ce D7F8B830 		ldr	r3, [r7, #184]
 1823              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1824 01d2 1CBA     		rev r4, r3
 1825              	@ 0 "" 2
 1826              		.thumb
 1827 01d4 C7F8B440 		str	r4, [r7, #180]
 1828              		.loc 2 353 0
 1829 01d8 D7F8B430 		ldr	r3, [r7, #180]
 1830              	.LBE223:
 1831              	.LBE222:
 1832              		.loc 1 516 0
 1833 01dc FB63     		str	r3, [r7, #60]
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1834              		.loc 1 517 0
 1835 01de D7F80031 		ldr	r3, [r7, #256]
 1836 01e2 03F10403 		add	r3, r3, #4
 1837 01e6 C7F80031 		str	r3, [r7, #256]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1838              		.loc 1 518 0
 1839 01ea D7F80031 		ldr	r3, [r7, #256]
 1840 01ee 1B68     		ldr	r3, [r3, #0]
 1841 01f0 C7F8B030 		str	r3, [r7, #176]
 1842              	.LBB224:
 1843              	.LBB225:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1844              		.loc 2 352 0
 1845 01f4 D7F8B030 		ldr	r3, [r7, #176]
 1846              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1847 01f8 1CBA     		rev r4, r3
 1848              	@ 0 "" 2
 1849              		.thumb
 1850 01fa C7F8AC40 		str	r4, [r7, #172]
 1851              		.loc 2 353 0
 1852 01fe D7F8AC30 		ldr	r3, [r7, #172]
 1853              	.LBE225:
 1854              	.LBE224:
 1855              		.loc 1 518 0
 1856 0202 3B64     		str	r3, [r7, #64]
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1857              		.loc 1 519 0
 1858 0204 8DE0     		b	.L44
 1859              	.L43:
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 256:
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 1860              		.loc 1 521 0
 1861 0206 4FF40073 		mov	r3, #512
 1862 020a A7F84A30 		strh	r3, [r7, #74]	@ movhi
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1863              		.loc 1 522 0
 1864 020e D7F80031 		ldr	r3, [r7, #256]
 1865 0212 1B68     		ldr	r3, [r3, #0]
 1866 0214 C7F8A830 		str	r3, [r7, #168]
 1867              	.LBB226:
 1868              	.LBB227:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1869              		.loc 2 352 0
 1870 0218 D7F8A830 		ldr	r3, [r7, #168]
 1871              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1872 021c 1CBA     		rev r4, r3
 1873              	@ 0 "" 2
 1874              		.thumb
 1875 021e C7F8A440 		str	r4, [r7, #164]
 1876              		.loc 2 353 0
 1877 0222 D7F8A430 		ldr	r3, [r7, #164]
 1878              	.LBE227:
 1879              	.LBE226:
 1880              		.loc 1 522 0
 1881 0226 7B62     		str	r3, [r7, #36]
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1882              		.loc 1 523 0
 1883 0228 D7F80031 		ldr	r3, [r7, #256]
 1884 022c 03F10403 		add	r3, r3, #4
 1885 0230 C7F80031 		str	r3, [r7, #256]
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 1886              		.loc 1 524 0
 1887 0234 D7F80031 		ldr	r3, [r7, #256]
 1888 0238 1B68     		ldr	r3, [r3, #0]
 1889 023a C7F8A030 		str	r3, [r7, #160]
 1890              	.LBB228:
 1891              	.LBB229:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1892              		.loc 2 352 0
 1893 023e D7F8A030 		ldr	r3, [r7, #160]
 1894              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1895 0242 1CBA     		rev r4, r3
 1896              	@ 0 "" 2
 1897              		.thumb
 1898 0244 C7F89C40 		str	r4, [r7, #156]
 1899              		.loc 2 353 0
 1900 0248 D7F89C30 		ldr	r3, [r7, #156]
 1901              	.LBE229:
 1902              	.LBE228:
 1903              		.loc 1 524 0
 1904 024c BB62     		str	r3, [r7, #40]
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1905              		.loc 1 525 0
 1906 024e D7F80031 		ldr	r3, [r7, #256]
 1907 0252 03F10403 		add	r3, r3, #4
 1908 0256 C7F80031 		str	r3, [r7, #256]
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1909              		.loc 1 526 0
 1910 025a D7F80031 		ldr	r3, [r7, #256]
 1911 025e 1B68     		ldr	r3, [r3, #0]
 1912 0260 C7F89830 		str	r3, [r7, #152]
 1913              	.LBB230:
 1914              	.LBB231:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1915              		.loc 2 352 0
 1916 0264 D7F89830 		ldr	r3, [r7, #152]
 1917              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1918 0268 1CBA     		rev r4, r3
 1919              	@ 0 "" 2
 1920              		.thumb
 1921 026a C7F89440 		str	r4, [r7, #148]
 1922              		.loc 2 353 0
 1923 026e D7F89430 		ldr	r3, [r7, #148]
 1924              	.LBE231:
 1925              	.LBE230:
 1926              		.loc 1 526 0
 1927 0272 FB62     		str	r3, [r7, #44]
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1928              		.loc 1 527 0
 1929 0274 D7F80031 		ldr	r3, [r7, #256]
 1930 0278 03F10403 		add	r3, r3, #4
 1931 027c C7F80031 		str	r3, [r7, #256]
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1932              		.loc 1 528 0
 1933 0280 D7F80031 		ldr	r3, [r7, #256]
 1934 0284 1B68     		ldr	r3, [r3, #0]
 1935 0286 C7F89030 		str	r3, [r7, #144]
 1936              	.LBB232:
 1937              	.LBB233:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1938              		.loc 2 352 0
 1939 028a D7F89030 		ldr	r3, [r7, #144]
 1940              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1941 028e 1CBA     		rev r4, r3
 1942              	@ 0 "" 2
 1943              		.thumb
 1944 0290 C7F88C40 		str	r4, [r7, #140]
 1945              		.loc 2 353 0
 1946 0294 D7F88C30 		ldr	r3, [r7, #140]
 1947              	.LBE233:
 1948              	.LBE232:
 1949              		.loc 1 528 0
 1950 0298 3B63     		str	r3, [r7, #48]
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1951              		.loc 1 529 0
 1952 029a D7F80031 		ldr	r3, [r7, #256]
 1953 029e 03F10403 		add	r3, r3, #4
 1954 02a2 C7F80031 		str	r3, [r7, #256]
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1955              		.loc 1 530 0
 1956 02a6 D7F80031 		ldr	r3, [r7, #256]
 1957 02aa 1B68     		ldr	r3, [r3, #0]
 1958 02ac C7F88830 		str	r3, [r7, #136]
 1959              	.LBB234:
 1960              	.LBB235:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1961              		.loc 2 352 0
 1962 02b0 D7F88830 		ldr	r3, [r7, #136]
 1963              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1964 02b4 1CBA     		rev r4, r3
 1965              	@ 0 "" 2
 1966              		.thumb
 1967 02b6 C7F88440 		str	r4, [r7, #132]
 1968              		.loc 2 353 0
 1969 02ba D7F88430 		ldr	r3, [r7, #132]
 1970              	.LBE235:
 1971              	.LBE234:
 1972              		.loc 1 530 0
 1973 02be 7B63     		str	r3, [r7, #52]
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1974              		.loc 1 531 0
 1975 02c0 D7F80031 		ldr	r3, [r7, #256]
 1976 02c4 03F10403 		add	r3, r3, #4
 1977 02c8 C7F80031 		str	r3, [r7, #256]
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1978              		.loc 1 532 0
 1979 02cc D7F80031 		ldr	r3, [r7, #256]
 1980 02d0 1B68     		ldr	r3, [r3, #0]
 1981 02d2 C7F88030 		str	r3, [r7, #128]
 1982              	.LBB236:
 1983              	.LBB237:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1984              		.loc 2 352 0
 1985 02d6 D7F88030 		ldr	r3, [r7, #128]
 1986              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 1987 02da 1CBA     		rev r4, r3
 1988              	@ 0 "" 2
 1989              		.thumb
 1990 02dc FC67     		str	r4, [r7, #124]
 1991              		.loc 2 353 0
 1992 02de FB6F     		ldr	r3, [r7, #124]
 1993              	.LBE237:
 1994              	.LBE236:
 1995              		.loc 1 532 0
 1996 02e0 BB63     		str	r3, [r7, #56]
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1997              		.loc 1 533 0
 1998 02e2 D7F80031 		ldr	r3, [r7, #256]
 1999 02e6 03F10403 		add	r3, r3, #4
 2000 02ea C7F80031 		str	r3, [r7, #256]
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 2001              		.loc 1 534 0
 2002 02ee D7F80031 		ldr	r3, [r7, #256]
 2003 02f2 1B68     		ldr	r3, [r3, #0]
 2004 02f4 BB67     		str	r3, [r7, #120]
 2005              	.LBB238:
 2006              	.LBB239:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2007              		.loc 2 352 0
 2008 02f6 BB6F     		ldr	r3, [r7, #120]
 2009              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2010 02f8 1CBA     		rev r4, r3
 2011              	@ 0 "" 2
 2012              		.thumb
 2013 02fa 7C67     		str	r4, [r7, #116]
 2014              		.loc 2 353 0
 2015 02fc 7B6F     		ldr	r3, [r7, #116]
 2016              	.LBE239:
 2017              	.LBE238:
 2018              		.loc 1 534 0
 2019 02fe FB63     		str	r3, [r7, #60]
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2020              		.loc 1 535 0
 2021 0300 D7F80031 		ldr	r3, [r7, #256]
 2022 0304 03F10403 		add	r3, r3, #4
 2023 0308 C7F80031 		str	r3, [r7, #256]
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 2024              		.loc 1 536 0
 2025 030c D7F80031 		ldr	r3, [r7, #256]
 2026 0310 1B68     		ldr	r3, [r3, #0]
 2027 0312 3B67     		str	r3, [r7, #112]
 2028              	.LBB240:
 2029              	.LBB241:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2030              		.loc 2 352 0
 2031 0314 3B6F     		ldr	r3, [r7, #112]
 2032              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2033 0316 1CBA     		rev r4, r3
 2034              	@ 0 "" 2
 2035              		.thumb
 2036 0318 FC66     		str	r4, [r7, #108]
 2037              		.loc 2 353 0
 2038 031a FB6E     		ldr	r3, [r7, #108]
 2039              	.LBE241:
 2040              	.LBE240:
 2041              		.loc 1 536 0
 2042 031c 3B64     		str	r3, [r7, #64]
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 2043              		.loc 1 537 0
 2044 031e 00E0     		b	.L44
 2045              	.L54:
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     default:
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 2046              		.loc 1 539 0
 2047 0320 00BF     		nop
 2048              	.L44:
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 2049              		.loc 1 542 0
 2050 0322 D7F8FC30 		ldr	r3, [r7, #252]
 2051 0326 1B68     		ldr	r3, [r3, #0]
 2052 0328 BB66     		str	r3, [r7, #104]
 2053              	.LBB242:
 2054              	.LBB243:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2055              		.loc 2 352 0
 2056 032a BB6E     		ldr	r3, [r7, #104]
 2057              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2058 032c 1CBA     		rev r4, r3
 2059              	@ 0 "" 2
 2060              		.thumb
 2061 032e 7C66     		str	r4, [r7, #100]
 2062              		.loc 2 353 0
 2063 0330 7B6E     		ldr	r3, [r7, #100]
 2064              		.loc 1 542 0
 2065 0332 1A46     		mov	r2, r3
 2066              	.LBE243:
 2067              	.LBE242:
 2068 0334 07F11403 		add	r3, r7, #20
 2069 0338 1A60     		str	r2, [r3, #0]
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2070              		.loc 1 543 0
 2071 033a D7F8FC30 		ldr	r3, [r7, #252]
 2072 033e 03F10403 		add	r3, r3, #4
 2073 0342 C7F8FC30 		str	r3, [r7, #252]
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 2074              		.loc 1 544 0
 2075 0346 D7F8FC30 		ldr	r3, [r7, #252]
 2076 034a 1B68     		ldr	r3, [r3, #0]
 2077 034c 3B66     		str	r3, [r7, #96]
 2078              	.LBB244:
 2079              	.LBB245:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2080              		.loc 2 352 0
 2081 034e 3B6E     		ldr	r3, [r7, #96]
 2082              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2083 0350 1CBA     		rev r4, r3
 2084              	@ 0 "" 2
 2085              		.thumb
 2086 0352 FC65     		str	r4, [r7, #92]
 2087              		.loc 2 353 0
 2088 0354 FB6D     		ldr	r3, [r7, #92]
 2089              		.loc 1 544 0
 2090 0356 1A46     		mov	r2, r3
 2091              	.LBE245:
 2092              	.LBE244:
 2093 0358 07F11403 		add	r3, r7, #20
 2094 035c 5A60     		str	r2, [r3, #4]
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2095              		.loc 1 545 0
 2096 035e D7F8FC30 		ldr	r3, [r7, #252]
 2097 0362 03F10403 		add	r3, r3, #4
 2098 0366 C7F8FC30 		str	r3, [r7, #252]
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 2099              		.loc 1 546 0
 2100 036a D7F8FC30 		ldr	r3, [r7, #252]
 2101 036e 1B68     		ldr	r3, [r3, #0]
 2102 0370 BB65     		str	r3, [r7, #88]
 2103              	.LBB246:
 2104              	.LBB247:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2105              		.loc 2 352 0
 2106 0372 BB6D     		ldr	r3, [r7, #88]
 2107              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2108 0374 1CBA     		rev r4, r3
 2109              	@ 0 "" 2
 2110              		.thumb
 2111 0376 7C65     		str	r4, [r7, #84]
 2112              		.loc 2 353 0
 2113 0378 7B6D     		ldr	r3, [r7, #84]
 2114              		.loc 1 546 0
 2115 037a 1A46     		mov	r2, r3
 2116              	.LBE247:
 2117              	.LBE246:
 2118 037c 07F11403 		add	r3, r7, #20
 2119 0380 9A60     		str	r2, [r3, #8]
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2120              		.loc 1 547 0
 2121 0382 D7F8FC30 		ldr	r3, [r7, #252]
 2122 0386 03F10403 		add	r3, r3, #4
 2123 038a C7F8FC30 		str	r3, [r7, #252]
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 2124              		.loc 1 548 0
 2125 038e D7F8FC30 		ldr	r3, [r7, #252]
 2126 0392 1B68     		ldr	r3, [r3, #0]
 2127 0394 3B65     		str	r3, [r7, #80]
 2128              	.LBB248:
 2129              	.LBB249:
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2130              		.loc 2 352 0
 2131 0396 3B6D     		ldr	r3, [r7, #80]
 2132              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 2133 0398 1CBA     		rev r4, r3
 2134              	@ 0 "" 2
 2135              		.thumb
 2136 039a FC64     		str	r4, [r7, #76]
 2137              		.loc 2 353 0
 2138 039c FB6C     		ldr	r3, [r7, #76]
 2139              		.loc 1 548 0
 2140 039e 1A46     		mov	r2, r3
 2141              	.LBE249:
 2142              	.LBE248:
 2143 03a0 07F11403 		add	r3, r7, #20
 2144 03a4 DA60     		str	r2, [r3, #12]
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Key Initialisation */
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 2145              		.loc 1 551 0
 2146 03a6 07F12403 		add	r3, r7, #36
 2147 03aa 1846     		mov	r0, r3
 2148 03ac FFF7FEFF 		bl	CRYP_KeyInit
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 2149              		.loc 1 554 0
 2150 03b0 07F11003 		add	r3, r7, #16
 2151 03b4 03F1FF33 		add	r3, r3, #-1
 2152 03b8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2153 03ba 002B     		cmp	r3, #0
 2154 03bc 04D1     		bne	.L45
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for decryption process */
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 2155              		.loc 1 557 0
 2156 03be 4FF00403 		mov	r3, #4
 2157 03c2 A7F84430 		strh	r3, [r7, #68]	@ movhi
 2158 03c6 03E0     		b	.L46
 2159              	.L45:
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 2160              		.loc 1 563 0
 2161 03c8 4FF00003 		mov	r3, #0
 2162 03cc A7F84430 		strh	r3, [r7, #68]	@ movhi
 2163              	.L46:
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CTR;
 2164              		.loc 1 565 0
 2165 03d0 4FF03003 		mov	r3, #48
 2166 03d4 A7F84630 		strh	r3, [r7, #70]	@ movhi
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 2167              		.loc 1 566 0
 2168 03d8 4FF08003 		mov	r3, #128
 2169 03dc A7F84830 		strh	r3, [r7, #72]	@ movhi
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 2170              		.loc 1 567 0
 2171 03e0 07F14403 		add	r3, r7, #68
 2172 03e4 1846     		mov	r0, r3
 2173 03e6 FFF7FEFF 		bl	CRYP_Init
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 2174              		.loc 1 570 0
 2175 03ea 07F11403 		add	r3, r7, #20
 2176 03ee 1846     		mov	r0, r3
 2177 03f0 FFF7FEFF 		bl	CRYP_IVInit
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 2178              		.loc 1 573 0
 2179 03f4 FFF7FEFF 		bl	CRYP_FIFOFlush
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 2180              		.loc 1 576 0
 2181 03f8 4FF00100 		mov	r0, #1
 2182 03fc FFF7FEFF 		bl	CRYP_Cmd
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2183              		.loc 1 578 0
 2184 0400 4FF00003 		mov	r3, #0
 2185 0404 C7F80831 		str	r3, [r7, #264]
 2186 0408 8CE0     		b	.L47
 2187              	.L53:
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2188              		.loc 1 582 0
 2189 040a D7F81031 		ldr	r3, [r7, #272]
 2190 040e 1B68     		ldr	r3, [r3, #0]
 2191 0410 1846     		mov	r0, r3
 2192 0412 FFF7FEFF 		bl	CRYP_DataIn
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2193              		.loc 1 583 0
 2194 0416 D7F81031 		ldr	r3, [r7, #272]
 2195 041a 03F10403 		add	r3, r3, #4
 2196 041e C7F81031 		str	r3, [r7, #272]
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2197              		.loc 1 584 0
 2198 0422 D7F81031 		ldr	r3, [r7, #272]
 2199 0426 1B68     		ldr	r3, [r3, #0]
 2200 0428 1846     		mov	r0, r3
 2201 042a FFF7FEFF 		bl	CRYP_DataIn
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2202              		.loc 1 585 0
 2203 042e D7F81031 		ldr	r3, [r7, #272]
 2204 0432 03F10403 		add	r3, r3, #4
 2205 0436 C7F81031 		str	r3, [r7, #272]
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2206              		.loc 1 586 0
 2207 043a D7F81031 		ldr	r3, [r7, #272]
 2208 043e 1B68     		ldr	r3, [r3, #0]
 2209 0440 1846     		mov	r0, r3
 2210 0442 FFF7FEFF 		bl	CRYP_DataIn
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2211              		.loc 1 587 0
 2212 0446 D7F81031 		ldr	r3, [r7, #272]
 2213 044a 03F10403 		add	r3, r3, #4
 2214 044e C7F81031 		str	r3, [r7, #272]
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2215              		.loc 1 588 0
 2216 0452 D7F81031 		ldr	r3, [r7, #272]
 2217 0456 1B68     		ldr	r3, [r3, #0]
 2218 0458 1846     		mov	r0, r3
 2219 045a FFF7FEFF 		bl	CRYP_DataIn
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2220              		.loc 1 589 0
 2221 045e D7F81031 		ldr	r3, [r7, #272]
 2222 0462 03F10403 		add	r3, r3, #4
 2223 0466 C7F81031 		str	r3, [r7, #272]
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 2224              		.loc 1 591 0
 2225 046a 4FF00002 		mov	r2, #0
 2226 046e 07F11003 		add	r3, r7, #16
 2227 0472 1A60     		str	r2, [r3, #0]
 2228              	.L49:
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 2229              		.loc 1 594 0 discriminator 1
 2230 0474 4FF01000 		mov	r0, #16
 2231 0478 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2232 047c 0346     		mov	r3, r0
 2233 047e C7F80431 		str	r3, [r7, #260]
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 2234              		.loc 1 595 0 discriminator 1
 2235 0482 07F11003 		add	r3, r7, #16
 2236 0486 1B68     		ldr	r3, [r3, #0]
 2237 0488 03F10102 		add	r2, r3, #1
 2238 048c 07F11003 		add	r3, r7, #16
 2239 0490 1A60     		str	r2, [r3, #0]
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2240              		.loc 1 596 0 discriminator 1
 2241 0492 07F11003 		add	r3, r7, #16
 2242 0496 1B68     		ldr	r3, [r3, #0]
 2243 0498 B3F5803F 		cmp	r3, #65536
 2244 049c 03D0     		beq	.L48
 2245 049e D7F80431 		ldr	r3, [r7, #260]
 2246 04a2 002B     		cmp	r3, #0
 2247 04a4 E6D1     		bne	.L49
 2248              	.L48:
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 2249              		.loc 1 598 0
 2250 04a6 D7F80431 		ldr	r3, [r7, #260]
 2251 04aa 002B     		cmp	r3, #0
 2252 04ac 04D0     		beq	.L50
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 2253              		.loc 1 600 0
 2254 04ae 4FF00003 		mov	r3, #0
 2255 04b2 87F81731 		strb	r3, [r7, #279]
 2256 04b6 2FE0     		b	.L51
 2257              	.L50:
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2258              		.loc 1 606 0
 2259 04b8 D7F80C41 		ldr	r4, [r7, #268]
 2260 04bc FFF7FEFF 		bl	CRYP_DataOut
 2261 04c0 0346     		mov	r3, r0
 2262 04c2 2360     		str	r3, [r4, #0]
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2263              		.loc 1 607 0
 2264 04c4 D7F80C31 		ldr	r3, [r7, #268]
 2265 04c8 03F10403 		add	r3, r3, #4
 2266 04cc C7F80C31 		str	r3, [r7, #268]
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2267              		.loc 1 608 0
 2268 04d0 D7F80C41 		ldr	r4, [r7, #268]
 2269 04d4 FFF7FEFF 		bl	CRYP_DataOut
 2270 04d8 0346     		mov	r3, r0
 2271 04da 2360     		str	r3, [r4, #0]
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2272              		.loc 1 609 0
 2273 04dc D7F80C31 		ldr	r3, [r7, #268]
 2274 04e0 03F10403 		add	r3, r3, #4
 2275 04e4 C7F80C31 		str	r3, [r7, #268]
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2276              		.loc 1 610 0
 2277 04e8 D7F80C41 		ldr	r4, [r7, #268]
 2278 04ec FFF7FEFF 		bl	CRYP_DataOut
 2279 04f0 0346     		mov	r3, r0
 2280 04f2 2360     		str	r3, [r4, #0]
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2281              		.loc 1 611 0
 2282 04f4 D7F80C31 		ldr	r3, [r7, #268]
 2283 04f8 03F10403 		add	r3, r3, #4
 2284 04fc C7F80C31 		str	r3, [r7, #268]
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2285              		.loc 1 612 0
 2286 0500 D7F80C41 		ldr	r4, [r7, #268]
 2287 0504 FFF7FEFF 		bl	CRYP_DataOut
 2288 0508 0346     		mov	r3, r0
 2289 050a 2360     		str	r3, [r4, #0]
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2290              		.loc 1 613 0
 2291 050c D7F80C31 		ldr	r3, [r7, #268]
 2292 0510 03F10403 		add	r3, r3, #4
 2293 0514 C7F80C31 		str	r3, [r7, #268]
 2294              	.L51:
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2295              		.loc 1 578 0
 2296 0518 D7F80831 		ldr	r3, [r7, #264]
 2297 051c 03F11003 		add	r3, r3, #16
 2298 0520 C7F80831 		str	r3, [r7, #264]
 2299              	.L47:
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2300              		.loc 1 578 0 is_stmt 0 discriminator 1
 2301 0524 D7F80821 		ldr	r2, [r7, #264]
 2302 0528 D7F82C31 		ldr	r3, [r7, #300]
 2303 052c 9A42     		cmp	r2, r3
 2304 052e 04D2     		bcs	.L52
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2305              		.loc 1 578 0 discriminator 2
 2306 0530 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 2307 0534 002B     		cmp	r3, #0
 2308 0536 7FF468AF 		bne	.L53
 2309              	.L52:
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 2310              		.loc 1 617 0 is_stmt 1
 2311 053a 4FF00000 		mov	r0, #0
 2312 053e FFF7FEFF 		bl	CRYP_Cmd
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   return status;
 2313              		.loc 1 619 0
 2314 0542 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** }
 2315              		.loc 1 620 0
 2316 0546 1846     		mov	r0, r3
 2317 0548 07F58E77 		add	r7, r7, #284
 2318 054c BD46     		mov	sp, r7
 2319 054e 90BD     		pop	{r4, r7, pc}
 2320              		.cfi_endproc
 2321              	.LFE112:
 2323              		.text
 2324              	.Letext0:
 2325              		.file 3 "/usr/local/csl/arm-2012.03/bin/../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/i
 2326              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 2327              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
 2328              		.file 6 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp_aes.c
     /tmp/cc8mcnJ6.s:20     .text.CRYP_AES_ECB:00000000 $t
     /tmp/cc8mcnJ6.s:25     .text.CRYP_AES_ECB:00000000 CRYP_AES_ECB
     /tmp/cc8mcnJ6.s:726    .text.CRYP_AES_CBC:00000000 $t
     /tmp/cc8mcnJ6.s:731    .text.CRYP_AES_CBC:00000000 CRYP_AES_CBC
     /tmp/cc8mcnJ6.s:1551   .text.CRYP_AES_CTR:00000000 $t
     /tmp/cc8mcnJ6.s:1556   .text.CRYP_AES_CTR:00000000 CRYP_AES_CTR
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_FIFOFlush
CRYP_Init
CRYP_KeyInit
CRYP_Cmd
CRYP_GetFlagStatus
CRYP_DataIn
CRYP_DataOut
CRYP_IVInit
