   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TIM_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	TIM_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	TIM_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  28              		.loc 1 195 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 7, -8
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
  44              		.loc 1 199 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 4FF00003 		mov	r3, #0
  47 000e C4F20103 		movt	r3, 16385
  48 0012 9A42     		cmp	r2, r3
  49 0014 0CD1     		bne	.L2
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  50              		.loc 1 201 0
  51 0016 4FF00100 		mov	r0, #1
  52 001a 4FF00101 		mov	r1, #1
  53 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  54              		.loc 1 202 0
  55 0022 4FF00100 		mov	r0, #1
  56 0026 4FF00001 		mov	r1, #0
  57 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  58 002e FFE0     		b	.L1
  59              	.L2:
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
  60              		.loc 1 204 0
  61 0030 7B68     		ldr	r3, [r7, #4]
  62 0032 B3F1804F 		cmp	r3, #1073741824
  63 0036 0CD1     		bne	.L4
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  64              		.loc 1 206 0
  65 0038 4FF00100 		mov	r0, #1
  66 003c 4FF00101 		mov	r1, #1
  67 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  68              		.loc 1 207 0
  69 0044 4FF00100 		mov	r0, #1
  70 0048 4FF00001 		mov	r1, #0
  71 004c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  72 0050 EEE0     		b	.L1
  73              	.L4:
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
  74              		.loc 1 209 0
  75 0052 7A68     		ldr	r2, [r7, #4]
  76 0054 4FF48063 		mov	r3, #1024
  77 0058 C4F20003 		movt	r3, 16384
  78 005c 9A42     		cmp	r2, r3
  79 005e 0CD1     		bne	.L5
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  80              		.loc 1 211 0
  81 0060 4FF00200 		mov	r0, #2
  82 0064 4FF00101 		mov	r1, #1
  83 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  84              		.loc 1 212 0
  85 006c 4FF00200 		mov	r0, #2
  86 0070 4FF00001 		mov	r1, #0
  87 0074 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  88 0078 DAE0     		b	.L1
  89              	.L5:
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
  90              		.loc 1 214 0
  91 007a 7A68     		ldr	r2, [r7, #4]
  92 007c 4FF40063 		mov	r3, #2048
  93 0080 C4F20003 		movt	r3, 16384
  94 0084 9A42     		cmp	r2, r3
  95 0086 0CD1     		bne	.L6
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  96              		.loc 1 216 0
  97 0088 4FF00400 		mov	r0, #4
  98 008c 4FF00101 		mov	r1, #1
  99 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 100              		.loc 1 217 0
 101 0094 4FF00400 		mov	r0, #4
 102 0098 4FF00001 		mov	r1, #0
 103 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 104 00a0 C6E0     		b	.L1
 105              	.L6:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 106              		.loc 1 219 0
 107 00a2 7A68     		ldr	r2, [r7, #4]
 108 00a4 4FF44063 		mov	r3, #3072
 109 00a8 C4F20003 		movt	r3, 16384
 110 00ac 9A42     		cmp	r2, r3
 111 00ae 0CD1     		bne	.L7
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 112              		.loc 1 221 0
 113 00b0 4FF00800 		mov	r0, #8
 114 00b4 4FF00101 		mov	r1, #1
 115 00b8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 116              		.loc 1 222 0
 117 00bc 4FF00800 		mov	r0, #8
 118 00c0 4FF00001 		mov	r1, #0
 119 00c4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 120 00c8 B2E0     		b	.L1
 121              	.L7:
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 122              		.loc 1 224 0
 123 00ca 7A68     		ldr	r2, [r7, #4]
 124 00cc 4FF48053 		mov	r3, #4096
 125 00d0 C4F20003 		movt	r3, 16384
 126 00d4 9A42     		cmp	r2, r3
 127 00d6 0CD1     		bne	.L8
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 128              		.loc 1 226 0
 129 00d8 4FF01000 		mov	r0, #16
 130 00dc 4FF00101 		mov	r1, #1
 131 00e0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 132              		.loc 1 227 0
 133 00e4 4FF01000 		mov	r0, #16
 134 00e8 4FF00001 		mov	r1, #0
 135 00ec FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 136 00f0 9EE0     		b	.L1
 137              	.L8:
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 138              		.loc 1 229 0
 139 00f2 7A68     		ldr	r2, [r7, #4]
 140 00f4 4FF4A053 		mov	r3, #5120
 141 00f8 C4F20003 		movt	r3, 16384
 142 00fc 9A42     		cmp	r2, r3
 143 00fe 0CD1     		bne	.L9
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 144              		.loc 1 231 0
 145 0100 4FF02000 		mov	r0, #32
 146 0104 4FF00101 		mov	r1, #1
 147 0108 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 148              		.loc 1 232 0
 149 010c 4FF02000 		mov	r0, #32
 150 0110 4FF00001 		mov	r1, #0
 151 0114 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 152 0118 8AE0     		b	.L1
 153              	.L9:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 154              		.loc 1 234 0
 155 011a 7A68     		ldr	r2, [r7, #4]
 156 011c 4FF48063 		mov	r3, #1024
 157 0120 C4F20103 		movt	r3, 16385
 158 0124 9A42     		cmp	r2, r3
 159 0126 0CD1     		bne	.L10
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 160              		.loc 1 236 0
 161 0128 4FF00200 		mov	r0, #2
 162 012c 4FF00101 		mov	r1, #1
 163 0130 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 164              		.loc 1 237 0
 165 0134 4FF00200 		mov	r0, #2
 166 0138 4FF00001 		mov	r1, #0
 167 013c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 168 0140 76E0     		b	.L1
 169              	.L10:
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 170              		.loc 1 239 0
 171 0142 7A68     		ldr	r2, [r7, #4]
 172 0144 4FF48043 		mov	r3, #16384
 173 0148 C4F20103 		movt	r3, 16385
 174 014c 9A42     		cmp	r2, r3
 175 014e 0CD1     		bne	.L11
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 176              		.loc 1 241 0
 177 0150 4FF48030 		mov	r0, #65536
 178 0154 4FF00101 		mov	r1, #1
 179 0158 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 180              		.loc 1 242 0
 181 015c 4FF48030 		mov	r0, #65536
 182 0160 4FF00001 		mov	r1, #0
 183 0164 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 184 0168 62E0     		b	.L1
 185              	.L11:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 186              		.loc 1 244 0
 187 016a 7A68     		ldr	r2, [r7, #4]
 188 016c 4FF48843 		mov	r3, #17408
 189 0170 C4F20103 		movt	r3, 16385
 190 0174 9A42     		cmp	r2, r3
 191 0176 0CD1     		bne	.L12
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 192              		.loc 1 246 0
 193 0178 4FF40030 		mov	r0, #131072
 194 017c 4FF00101 		mov	r1, #1
 195 0180 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 196              		.loc 1 247 0
 197 0184 4FF40030 		mov	r0, #131072
 198 0188 4FF00001 		mov	r1, #0
 199 018c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 200 0190 4EE0     		b	.L1
 201              	.L12:
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 202              		.loc 1 249 0
 203 0192 7A68     		ldr	r2, [r7, #4]
 204 0194 4FF49043 		mov	r3, #18432
 205 0198 C4F20103 		movt	r3, 16385
 206 019c 9A42     		cmp	r2, r3
 207 019e 0CD1     		bne	.L13
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 208              		.loc 1 251 0
 209 01a0 4FF48020 		mov	r0, #262144
 210 01a4 4FF00101 		mov	r1, #1
 211 01a8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 212              		.loc 1 252 0
 213 01ac 4FF48020 		mov	r0, #262144
 214 01b0 4FF00001 		mov	r1, #0
 215 01b4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 216 01b8 3AE0     		b	.L1
 217              	.L13:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 218              		.loc 1 254 0
 219 01ba 7A68     		ldr	r2, [r7, #4]
 220 01bc 4FF4C053 		mov	r3, #6144
 221 01c0 C4F20003 		movt	r3, 16384
 222 01c4 9A42     		cmp	r2, r3
 223 01c6 0CD1     		bne	.L14
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 224              		.loc 1 256 0
 225 01c8 4FF04000 		mov	r0, #64
 226 01cc 4FF00101 		mov	r1, #1
 227 01d0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 228              		.loc 1 257 0
 229 01d4 4FF04000 		mov	r0, #64
 230 01d8 4FF00001 		mov	r1, #0
 231 01dc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232 01e0 26E0     		b	.L1
 233              	.L14:
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 234              		.loc 1 259 0
 235 01e2 7A68     		ldr	r2, [r7, #4]
 236 01e4 4FF4E053 		mov	r3, #7168
 237 01e8 C4F20003 		movt	r3, 16384
 238 01ec 9A42     		cmp	r2, r3
 239 01ee 0CD1     		bne	.L15
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 240              		.loc 1 261 0
 241 01f0 4FF08000 		mov	r0, #128
 242 01f4 4FF00101 		mov	r1, #1
 243 01f8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 244              		.loc 1 262 0
 245 01fc 4FF08000 		mov	r0, #128
 246 0200 4FF00001 		mov	r1, #0
 247 0204 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 248 0208 12E0     		b	.L1
 249              	.L15:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 250              		.loc 1 266 0
 251 020a 7A68     		ldr	r2, [r7, #4]
 252 020c 4FF40053 		mov	r3, #8192
 253 0210 C4F20003 		movt	r3, 16384
 254 0214 9A42     		cmp	r2, r3
 255 0216 0BD1     		bne	.L1
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 256              		.loc 1 268 0
 257 0218 4FF48070 		mov	r0, #256
 258 021c 4FF00101 		mov	r1, #1
 259 0220 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 260              		.loc 1 269 0
 261 0224 4FF48070 		mov	r0, #256
 262 0228 4FF00001 		mov	r1, #0
 263 022c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 264              	.L1:
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 265              		.loc 1 272 0
 266 0230 07F10807 		add	r7, r7, #8
 267 0234 BD46     		mov	sp, r7
 268 0236 80BD     		pop	{r7, pc}
 269              		.cfi_endproc
 270              	.LFE110:
 272              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 273              		.align	2
 274              		.global	TIM_TimeBaseInit
 275              		.thumb
 276              		.thumb_func
 278              	TIM_TimeBaseInit:
 279              	.LFB111:
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 280              		.loc 1 283 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 16
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285 0000 80B4     		push	{r7}
 286              	.LCFI3:
 287              		.cfi_def_cfa_offset 4
 288              		.cfi_offset 7, -4
 289 0002 85B0     		sub	sp, sp, #20
 290              	.LCFI4:
 291              		.cfi_def_cfa_offset 24
 292 0004 00AF     		add	r7, sp, #0
 293              	.LCFI5:
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
 296 0008 3960     		str	r1, [r7, #0]
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 297              		.loc 1 284 0
 298 000a 4FF00003 		mov	r3, #0
 299 000e FB81     		strh	r3, [r7, #14]	@ movhi
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 300              		.loc 1 291 0
 301 0010 7B68     		ldr	r3, [r7, #4]
 302 0012 1B88     		ldrh	r3, [r3, #0]	@ movhi
 303 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 304              		.loc 1 293 0
 305 0016 7A68     		ldr	r2, [r7, #4]
 306 0018 4FF00003 		mov	r3, #0
 307 001c C4F20103 		movt	r3, 16385
 308 0020 9A42     		cmp	r2, r3
 309 0022 1FD0     		beq	.L17
 310              		.loc 1 293 0 is_stmt 0 discriminator 1
 311 0024 7A68     		ldr	r2, [r7, #4]
 312 0026 4FF48063 		mov	r3, #1024
 313 002a C4F20103 		movt	r3, 16385
 314 002e 9A42     		cmp	r2, r3
 315 0030 18D0     		beq	.L17
 316 0032 7B68     		ldr	r3, [r7, #4]
 317 0034 B3F1804F 		cmp	r3, #1073741824
 318 0038 14D0     		beq	.L17
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 319              		.loc 1 294 0 is_stmt 1
 320 003a 7A68     		ldr	r2, [r7, #4]
 321 003c 4FF48063 		mov	r3, #1024
 322 0040 C4F20003 		movt	r3, 16384
 323 0044 9A42     		cmp	r2, r3
 324 0046 0DD0     		beq	.L17
 325              		.loc 1 294 0 is_stmt 0 discriminator 1
 326 0048 7A68     		ldr	r2, [r7, #4]
 327 004a 4FF40063 		mov	r3, #2048
 328 004e C4F20003 		movt	r3, 16384
 329 0052 9A42     		cmp	r2, r3
 330 0054 06D0     		beq	.L17
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 331              		.loc 1 295 0 is_stmt 1
 332 0056 7A68     		ldr	r2, [r7, #4]
 333 0058 4FF44063 		mov	r3, #3072
 334 005c C4F20003 		movt	r3, 16384
 335 0060 9A42     		cmp	r2, r3
 336 0062 08D1     		bne	.L18
 337              	.L17:
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 338              		.loc 1 298 0
 339 0064 FB89     		ldrh	r3, [r7, #14]	@ movhi
 340 0066 23F07003 		bic	r3, r3, #112
 341 006a FB81     		strh	r3, [r7, #14]	@ movhi
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 342              		.loc 1 299 0
 343 006c 3B68     		ldr	r3, [r7, #0]
 344 006e 5A88     		ldrh	r2, [r3, #2]
 345 0070 FB89     		ldrh	r3, [r7, #14]	@ movhi
 346 0072 1343     		orrs	r3, r3, r2
 347 0074 FB81     		strh	r3, [r7, #14]	@ movhi
 348              	.L18:
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 349              		.loc 1 302 0
 350 0076 7A68     		ldr	r2, [r7, #4]
 351 0078 4FF48053 		mov	r3, #4096
 352 007c C4F20003 		movt	r3, 16384
 353 0080 9A42     		cmp	r2, r3
 354 0082 0FD0     		beq	.L19
 355              		.loc 1 302 0 is_stmt 0 discriminator 1
 356 0084 7A68     		ldr	r2, [r7, #4]
 357 0086 4FF4A053 		mov	r3, #5120
 358 008a C4F20003 		movt	r3, 16384
 359 008e 9A42     		cmp	r2, r3
 360 0090 08D0     		beq	.L19
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 361              		.loc 1 305 0 is_stmt 1
 362 0092 FB89     		ldrh	r3, [r7, #14]	@ movhi
 363 0094 23F44073 		bic	r3, r3, #768
 364 0098 FB81     		strh	r3, [r7, #14]	@ movhi
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 365              		.loc 1 306 0
 366 009a 3B68     		ldr	r3, [r7, #0]
 367 009c 1A89     		ldrh	r2, [r3, #8]
 368 009e FB89     		ldrh	r3, [r7, #14]	@ movhi
 369 00a0 1343     		orrs	r3, r3, r2
 370 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 371              	.L19:
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 372              		.loc 1 309 0
 373 00a4 7B68     		ldr	r3, [r7, #4]
 374 00a6 FA89     		ldrh	r2, [r7, #14]	@ movhi
 375 00a8 1A80     		strh	r2, [r3, #0]	@ movhi
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 376              		.loc 1 312 0
 377 00aa 3B68     		ldr	r3, [r7, #0]
 378 00ac 5A68     		ldr	r2, [r3, #4]
 379 00ae 7B68     		ldr	r3, [r7, #4]
 380 00b0 DA62     		str	r2, [r3, #44]
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 381              		.loc 1 315 0
 382 00b2 3B68     		ldr	r3, [r7, #0]
 383 00b4 1A88     		ldrh	r2, [r3, #0]
 384 00b6 7B68     		ldr	r3, [r7, #4]
 385 00b8 1A85     		strh	r2, [r3, #40]	@ movhi
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 386              		.loc 1 317 0
 387 00ba 7A68     		ldr	r2, [r7, #4]
 388 00bc 4FF00003 		mov	r3, #0
 389 00c0 C4F20103 		movt	r3, 16385
 390 00c4 9A42     		cmp	r2, r3
 391 00c6 06D0     		beq	.L20
 392              		.loc 1 317 0 is_stmt 0 discriminator 1
 393 00c8 7A68     		ldr	r2, [r7, #4]
 394 00ca 4FF48063 		mov	r3, #1024
 395 00ce C4F20103 		movt	r3, 16385
 396 00d2 9A42     		cmp	r2, r3
 397 00d4 04D1     		bne	.L21
 398              	.L20:
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 399              		.loc 1 320 0 is_stmt 1
 400 00d6 3B68     		ldr	r3, [r7, #0]
 401 00d8 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 402 00da 1A46     		mov	r2, r3
 403 00dc 7B68     		ldr	r3, [r7, #4]
 404 00de 1A86     		strh	r2, [r3, #48]	@ movhi
 405              	.L21:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 406              		.loc 1 325 0
 407 00e0 7B68     		ldr	r3, [r7, #4]
 408 00e2 4FF00102 		mov	r2, #1
 409 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 410              		.loc 1 326 0
 411 00e8 07F11407 		add	r7, r7, #20
 412 00ec BD46     		mov	sp, r7
 413 00ee 80BC     		pop	{r7}
 414 00f0 7047     		bx	lr
 415              		.cfi_endproc
 416              	.LFE111:
 418 00f2 00BF     		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 419              		.align	2
 420              		.global	TIM_TimeBaseStructInit
 421              		.thumb
 422              		.thumb_func
 424              	TIM_TimeBaseStructInit:
 425              	.LFB112:
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 426              		.loc 1 335 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 8
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 431 0000 80B4     		push	{r7}
 432              	.LCFI6:
 433              		.cfi_def_cfa_offset 4
 434              		.cfi_offset 7, -4
 435 0002 83B0     		sub	sp, sp, #12
 436              	.LCFI7:
 437              		.cfi_def_cfa_offset 16
 438 0004 00AF     		add	r7, sp, #0
 439              	.LCFI8:
 440              		.cfi_def_cfa_register 7
 441 0006 7860     		str	r0, [r7, #4]
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 442              		.loc 1 337 0
 443 0008 7B68     		ldr	r3, [r7, #4]
 444 000a 4FF0FF32 		mov	r2, #-1
 445 000e 5A60     		str	r2, [r3, #4]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 446              		.loc 1 338 0
 447 0010 7B68     		ldr	r3, [r7, #4]
 448 0012 4FF00002 		mov	r2, #0
 449 0016 1A80     		strh	r2, [r3, #0]	@ movhi
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 450              		.loc 1 339 0
 451 0018 7B68     		ldr	r3, [r7, #4]
 452 001a 4FF00002 		mov	r2, #0
 453 001e 1A81     		strh	r2, [r3, #8]	@ movhi
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 454              		.loc 1 340 0
 455 0020 7B68     		ldr	r3, [r7, #4]
 456 0022 4FF00002 		mov	r2, #0
 457 0026 5A80     		strh	r2, [r3, #2]	@ movhi
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 458              		.loc 1 341 0
 459 0028 7B68     		ldr	r3, [r7, #4]
 460 002a 4FF00002 		mov	r2, #0
 461 002e 9A72     		strb	r2, [r3, #10]
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 462              		.loc 1 342 0
 463 0030 07F10C07 		add	r7, r7, #12
 464 0034 BD46     		mov	sp, r7
 465 0036 80BC     		pop	{r7}
 466 0038 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE112:
 470 003a 00BF     		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 471              		.align	2
 472              		.global	TIM_PrescalerConfig
 473              		.thumb
 474              		.thumb_func
 476              	TIM_PrescalerConfig:
 477              	.LFB113:
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 478              		.loc 1 355 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 8
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483 0000 80B4     		push	{r7}
 484              	.LCFI9:
 485              		.cfi_def_cfa_offset 4
 486              		.cfi_offset 7, -4
 487 0002 83B0     		sub	sp, sp, #12
 488              	.LCFI10:
 489              		.cfi_def_cfa_offset 16
 490 0004 00AF     		add	r7, sp, #0
 491              	.LCFI11:
 492              		.cfi_def_cfa_register 7
 493 0006 7860     		str	r0, [r7, #4]
 494 0008 1346     		mov	r3, r2
 495 000a 0A46     		mov	r2, r1	@ movhi
 496 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 497 000e 3B80     		strh	r3, [r7, #0]	@ movhi
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 498              		.loc 1 360 0
 499 0010 7B68     		ldr	r3, [r7, #4]
 500 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
 501 0014 1A85     		strh	r2, [r3, #40]	@ movhi
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 502              		.loc 1 362 0
 503 0016 7B68     		ldr	r3, [r7, #4]
 504 0018 3A88     		ldrh	r2, [r7, #0]	@ movhi
 505 001a 9A82     		strh	r2, [r3, #20]	@ movhi
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 506              		.loc 1 363 0
 507 001c 07F10C07 		add	r7, r7, #12
 508 0020 BD46     		mov	sp, r7
 509 0022 80BC     		pop	{r7}
 510 0024 7047     		bx	lr
 511              		.cfi_endproc
 512              	.LFE113:
 514 0026 00BF     		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 515              		.align	2
 516              		.global	TIM_CounterModeConfig
 517              		.thumb
 518              		.thumb_func
 520              	TIM_CounterModeConfig:
 521              	.LFB114:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 522              		.loc 1 378 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 16
 525              		@ frame_needed = 1, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527 0000 80B4     		push	{r7}
 528              	.LCFI12:
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 7, -4
 531 0002 85B0     		sub	sp, sp, #20
 532              	.LCFI13:
 533              		.cfi_def_cfa_offset 24
 534 0004 00AF     		add	r7, sp, #0
 535              	.LCFI14:
 536              		.cfi_def_cfa_register 7
 537 0006 7860     		str	r0, [r7, #4]
 538 0008 0B46     		mov	r3, r1
 539 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 540              		.loc 1 379 0
 541 000c 4FF00003 		mov	r3, #0
 542 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 543              		.loc 1 385 0
 544 0012 7B68     		ldr	r3, [r7, #4]
 545 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 546 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 547              		.loc 1 388 0
 548 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 549 001a 23F07003 		bic	r3, r3, #112
 550 001e FB81     		strh	r3, [r7, #14]	@ movhi
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 551              		.loc 1 391 0
 552 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 553 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 554 0024 1343     		orrs	r3, r3, r2
 555 0026 FB81     		strh	r3, [r7, #14]	@ movhi
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 556              		.loc 1 394 0
 557 0028 7B68     		ldr	r3, [r7, #4]
 558 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 559 002c 1A80     		strh	r2, [r3, #0]	@ movhi
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 560              		.loc 1 395 0
 561 002e 07F11407 		add	r7, r7, #20
 562 0032 BD46     		mov	sp, r7
 563 0034 80BC     		pop	{r7}
 564 0036 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE114:
 568              		.section	.text.TIM_SetCounter,"ax",%progbits
 569              		.align	2
 570              		.global	TIM_SetCounter
 571              		.thumb
 572              		.thumb_func
 574              	TIM_SetCounter:
 575              	.LFB115:
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 576              		.loc 1 404 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 581 0000 80B4     		push	{r7}
 582              	.LCFI15:
 583              		.cfi_def_cfa_offset 4
 584              		.cfi_offset 7, -4
 585 0002 83B0     		sub	sp, sp, #12
 586              	.LCFI16:
 587              		.cfi_def_cfa_offset 16
 588 0004 00AF     		add	r7, sp, #0
 589              	.LCFI17:
 590              		.cfi_def_cfa_register 7
 591 0006 7860     		str	r0, [r7, #4]
 592 0008 3960     		str	r1, [r7, #0]
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 593              		.loc 1 409 0
 594 000a 7B68     		ldr	r3, [r7, #4]
 595 000c 3A68     		ldr	r2, [r7, #0]
 596 000e 5A62     		str	r2, [r3, #36]
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 597              		.loc 1 410 0
 598 0010 07F10C07 		add	r7, r7, #12
 599 0014 BD46     		mov	sp, r7
 600 0016 80BC     		pop	{r7}
 601 0018 7047     		bx	lr
 602              		.cfi_endproc
 603              	.LFE115:
 605 001a 00BF     		.section	.text.TIM_SetAutoreload,"ax",%progbits
 606              		.align	2
 607              		.global	TIM_SetAutoreload
 608              		.thumb
 609              		.thumb_func
 611              	TIM_SetAutoreload:
 612              	.LFB116:
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 613              		.loc 1 419 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 8
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618 0000 80B4     		push	{r7}
 619              	.LCFI18:
 620              		.cfi_def_cfa_offset 4
 621              		.cfi_offset 7, -4
 622 0002 83B0     		sub	sp, sp, #12
 623              	.LCFI19:
 624              		.cfi_def_cfa_offset 16
 625 0004 00AF     		add	r7, sp, #0
 626              	.LCFI20:
 627              		.cfi_def_cfa_register 7
 628 0006 7860     		str	r0, [r7, #4]
 629 0008 3960     		str	r1, [r7, #0]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 630              		.loc 1 424 0
 631 000a 7B68     		ldr	r3, [r7, #4]
 632 000c 3A68     		ldr	r2, [r7, #0]
 633 000e DA62     		str	r2, [r3, #44]
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 634              		.loc 1 425 0
 635 0010 07F10C07 		add	r7, r7, #12
 636 0014 BD46     		mov	sp, r7
 637 0016 80BC     		pop	{r7}
 638 0018 7047     		bx	lr
 639              		.cfi_endproc
 640              	.LFE116:
 642 001a 00BF     		.section	.text.TIM_GetCounter,"ax",%progbits
 643              		.align	2
 644              		.global	TIM_GetCounter
 645              		.thumb
 646              		.thumb_func
 648              	TIM_GetCounter:
 649              	.LFB117:
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 650              		.loc 1 433 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 8
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655 0000 80B4     		push	{r7}
 656              	.LCFI21:
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 7, -4
 659 0002 83B0     		sub	sp, sp, #12
 660              	.LCFI22:
 661              		.cfi_def_cfa_offset 16
 662 0004 00AF     		add	r7, sp, #0
 663              	.LCFI23:
 664              		.cfi_def_cfa_register 7
 665 0006 7860     		str	r0, [r7, #4]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 666              		.loc 1 438 0
 667 0008 7B68     		ldr	r3, [r7, #4]
 668 000a 5B6A     		ldr	r3, [r3, #36]
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 669              		.loc 1 439 0
 670 000c 1846     		mov	r0, r3
 671 000e 07F10C07 		add	r7, r7, #12
 672 0012 BD46     		mov	sp, r7
 673 0014 80BC     		pop	{r7}
 674 0016 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE117:
 678              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 679              		.align	2
 680              		.global	TIM_GetPrescaler
 681              		.thumb
 682              		.thumb_func
 684              	TIM_GetPrescaler:
 685              	.LFB118:
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 686              		.loc 1 447 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 8
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691 0000 80B4     		push	{r7}
 692              	.LCFI24:
 693              		.cfi_def_cfa_offset 4
 694              		.cfi_offset 7, -4
 695 0002 83B0     		sub	sp, sp, #12
 696              	.LCFI25:
 697              		.cfi_def_cfa_offset 16
 698 0004 00AF     		add	r7, sp, #0
 699              	.LCFI26:
 700              		.cfi_def_cfa_register 7
 701 0006 7860     		str	r0, [r7, #4]
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 702              		.loc 1 452 0
 703 0008 7B68     		ldr	r3, [r7, #4]
 704 000a 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 705 000c 9BB2     		uxth	r3, r3
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 706              		.loc 1 453 0
 707 000e 1846     		mov	r0, r3
 708 0010 07F10C07 		add	r7, r7, #12
 709 0014 BD46     		mov	sp, r7
 710 0016 80BC     		pop	{r7}
 711 0018 7047     		bx	lr
 712              		.cfi_endproc
 713              	.LFE118:
 715 001a 00BF     		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 716              		.align	2
 717              		.global	TIM_UpdateDisableConfig
 718              		.thumb
 719              		.thumb_func
 721              	TIM_UpdateDisableConfig:
 722              	.LFB119:
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 723              		.loc 1 463 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 8
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728 0000 80B4     		push	{r7}
 729              	.LCFI27:
 730              		.cfi_def_cfa_offset 4
 731              		.cfi_offset 7, -4
 732 0002 83B0     		sub	sp, sp, #12
 733              	.LCFI28:
 734              		.cfi_def_cfa_offset 16
 735 0004 00AF     		add	r7, sp, #0
 736              	.LCFI29:
 737              		.cfi_def_cfa_register 7
 738 0006 7860     		str	r0, [r7, #4]
 739 0008 0B46     		mov	r3, r1
 740 000a FB70     		strb	r3, [r7, #3]
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 741              		.loc 1 468 0
 742 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 743 000e 002B     		cmp	r3, #0
 744 0010 08D0     		beq	.L30
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 745              		.loc 1 471 0
 746 0012 7B68     		ldr	r3, [r7, #4]
 747 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 748 0016 9BB2     		uxth	r3, r3
 749 0018 43F00203 		orr	r3, r3, #2
 750 001c 9AB2     		uxth	r2, r3
 751 001e 7B68     		ldr	r3, [r7, #4]
 752 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 753 0022 07E0     		b	.L29
 754              	.L30:
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 755              		.loc 1 476 0
 756 0024 7B68     		ldr	r3, [r7, #4]
 757 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 758 0028 9BB2     		uxth	r3, r3
 759 002a 23F00203 		bic	r3, r3, #2
 760 002e 9AB2     		uxth	r2, r3
 761 0030 7B68     		ldr	r3, [r7, #4]
 762 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 763              	.L29:
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 764              		.loc 1 478 0
 765 0034 07F10C07 		add	r7, r7, #12
 766 0038 BD46     		mov	sp, r7
 767 003a 80BC     		pop	{r7}
 768 003c 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE119:
 772 003e 00BF     		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 773              		.align	2
 774              		.global	TIM_UpdateRequestConfig
 775              		.thumb
 776              		.thumb_func
 778              	TIM_UpdateRequestConfig:
 779              	.LFB120:
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is the counter
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 780              		.loc 1 492 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 8
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 785 0000 80B4     		push	{r7}
 786              	.LCFI30:
 787              		.cfi_def_cfa_offset 4
 788              		.cfi_offset 7, -4
 789 0002 83B0     		sub	sp, sp, #12
 790              	.LCFI31:
 791              		.cfi_def_cfa_offset 16
 792 0004 00AF     		add	r7, sp, #0
 793              	.LCFI32:
 794              		.cfi_def_cfa_register 7
 795 0006 7860     		str	r0, [r7, #4]
 796 0008 0B46     		mov	r3, r1
 797 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 798              		.loc 1 497 0
 799 000c 7B88     		ldrh	r3, [r7, #2]
 800 000e 002B     		cmp	r3, #0
 801 0010 08D0     		beq	.L33
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 802              		.loc 1 500 0
 803 0012 7B68     		ldr	r3, [r7, #4]
 804 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 805 0016 9BB2     		uxth	r3, r3
 806 0018 43F00403 		orr	r3, r3, #4
 807 001c 9AB2     		uxth	r2, r3
 808 001e 7B68     		ldr	r3, [r7, #4]
 809 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 810 0022 07E0     		b	.L32
 811              	.L33:
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 812              		.loc 1 505 0
 813 0024 7B68     		ldr	r3, [r7, #4]
 814 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 815 0028 9BB2     		uxth	r3, r3
 816 002a 23F00403 		bic	r3, r3, #4
 817 002e 9AB2     		uxth	r2, r3
 818 0030 7B68     		ldr	r3, [r7, #4]
 819 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 820              	.L32:
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 821              		.loc 1 507 0
 822 0034 07F10C07 		add	r7, r7, #12
 823 0038 BD46     		mov	sp, r7
 824 003a 80BC     		pop	{r7}
 825 003c 7047     		bx	lr
 826              		.cfi_endproc
 827              	.LFE120:
 829 003e 00BF     		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 830              		.align	2
 831              		.global	TIM_ARRPreloadConfig
 832              		.thumb
 833              		.thumb_func
 835              	TIM_ARRPreloadConfig:
 836              	.LFB121:
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 837              		.loc 1 517 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 8
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841              		@ link register save eliminated.
 842 0000 80B4     		push	{r7}
 843              	.LCFI33:
 844              		.cfi_def_cfa_offset 4
 845              		.cfi_offset 7, -4
 846 0002 83B0     		sub	sp, sp, #12
 847              	.LCFI34:
 848              		.cfi_def_cfa_offset 16
 849 0004 00AF     		add	r7, sp, #0
 850              	.LCFI35:
 851              		.cfi_def_cfa_register 7
 852 0006 7860     		str	r0, [r7, #4]
 853 0008 0B46     		mov	r3, r1
 854 000a FB70     		strb	r3, [r7, #3]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 855              		.loc 1 522 0
 856 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 857 000e 002B     		cmp	r3, #0
 858 0010 08D0     		beq	.L36
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 859              		.loc 1 525 0
 860 0012 7B68     		ldr	r3, [r7, #4]
 861 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 862 0016 9BB2     		uxth	r3, r3
 863 0018 43F08003 		orr	r3, r3, #128
 864 001c 9AB2     		uxth	r2, r3
 865 001e 7B68     		ldr	r3, [r7, #4]
 866 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 867 0022 07E0     		b	.L35
 868              	.L36:
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 869              		.loc 1 530 0
 870 0024 7B68     		ldr	r3, [r7, #4]
 871 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 872 0028 9BB2     		uxth	r3, r3
 873 002a 23F08003 		bic	r3, r3, #128
 874 002e 9AB2     		uxth	r2, r3
 875 0030 7B68     		ldr	r3, [r7, #4]
 876 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 877              	.L35:
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 878              		.loc 1 532 0
 879 0034 07F10C07 		add	r7, r7, #12
 880 0038 BD46     		mov	sp, r7
 881 003a 80BC     		pop	{r7}
 882 003c 7047     		bx	lr
 883              		.cfi_endproc
 884              	.LFE121:
 886 003e 00BF     		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 887              		.align	2
 888              		.global	TIM_SelectOnePulseMode
 889              		.thumb
 890              		.thumb_func
 892              	TIM_SelectOnePulseMode:
 893              	.LFB122:
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 894              		.loc 1 544 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 8
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899 0000 80B4     		push	{r7}
 900              	.LCFI36:
 901              		.cfi_def_cfa_offset 4
 902              		.cfi_offset 7, -4
 903 0002 83B0     		sub	sp, sp, #12
 904              	.LCFI37:
 905              		.cfi_def_cfa_offset 16
 906 0004 00AF     		add	r7, sp, #0
 907              	.LCFI38:
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
 910 0008 0B46     		mov	r3, r1
 911 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 912              		.loc 1 550 0
 913 000c 7B68     		ldr	r3, [r7, #4]
 914 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 915 0010 9BB2     		uxth	r3, r3
 916 0012 23F00803 		bic	r3, r3, #8
 917 0016 9AB2     		uxth	r2, r3
 918 0018 7B68     		ldr	r3, [r7, #4]
 919 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 920              		.loc 1 553 0
 921 001c 7B68     		ldr	r3, [r7, #4]
 922 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 923 0020 9AB2     		uxth	r2, r3
 924 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 925 0024 1343     		orrs	r3, r3, r2
 926 0026 9AB2     		uxth	r2, r3
 927 0028 7B68     		ldr	r3, [r7, #4]
 928 002a 1A80     		strh	r2, [r3, #0]	@ movhi
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 929              		.loc 1 554 0
 930 002c 07F10C07 		add	r7, r7, #12
 931 0030 BD46     		mov	sp, r7
 932 0032 80BC     		pop	{r7}
 933 0034 7047     		bx	lr
 934              		.cfi_endproc
 935              	.LFE122:
 937 0036 00BF     		.section	.text.TIM_SetClockDivision,"ax",%progbits
 938              		.align	2
 939              		.global	TIM_SetClockDivision
 940              		.thumb
 941              		.thumb_func
 943              	TIM_SetClockDivision:
 944              	.LFB123:
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 945              		.loc 1 567 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 8
 948              		@ frame_needed = 1, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 950 0000 80B4     		push	{r7}
 951              	.LCFI39:
 952              		.cfi_def_cfa_offset 4
 953              		.cfi_offset 7, -4
 954 0002 83B0     		sub	sp, sp, #12
 955              	.LCFI40:
 956              		.cfi_def_cfa_offset 16
 957 0004 00AF     		add	r7, sp, #0
 958              	.LCFI41:
 959              		.cfi_def_cfa_register 7
 960 0006 7860     		str	r0, [r7, #4]
 961 0008 0B46     		mov	r3, r1
 962 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 963              		.loc 1 573 0
 964 000c 7B68     		ldr	r3, [r7, #4]
 965 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 966 0010 9BB2     		uxth	r3, r3
 967 0012 23F44073 		bic	r3, r3, #768
 968 0016 9AB2     		uxth	r2, r3
 969 0018 7B68     		ldr	r3, [r7, #4]
 970 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 971              		.loc 1 576 0
 972 001c 7B68     		ldr	r3, [r7, #4]
 973 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 974 0020 9AB2     		uxth	r2, r3
 975 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 976 0024 1343     		orrs	r3, r3, r2
 977 0026 9AB2     		uxth	r2, r3
 978 0028 7B68     		ldr	r3, [r7, #4]
 979 002a 1A80     		strh	r2, [r3, #0]	@ movhi
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 980              		.loc 1 577 0
 981 002c 07F10C07 		add	r7, r7, #12
 982 0030 BD46     		mov	sp, r7
 983 0032 80BC     		pop	{r7}
 984 0034 7047     		bx	lr
 985              		.cfi_endproc
 986              	.LFE123:
 988 0036 00BF     		.section	.text.TIM_Cmd,"ax",%progbits
 989              		.align	2
 990              		.global	TIM_Cmd
 991              		.thumb
 992              		.thumb_func
 994              	TIM_Cmd:
 995              	.LFB124:
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 996              		.loc 1 587 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 8
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 1001 0000 80B4     		push	{r7}
 1002              	.LCFI42:
 1003              		.cfi_def_cfa_offset 4
 1004              		.cfi_offset 7, -4
 1005 0002 83B0     		sub	sp, sp, #12
 1006              	.LCFI43:
 1007              		.cfi_def_cfa_offset 16
 1008 0004 00AF     		add	r7, sp, #0
 1009              	.LCFI44:
 1010              		.cfi_def_cfa_register 7
 1011 0006 7860     		str	r0, [r7, #4]
 1012 0008 0B46     		mov	r3, r1
 1013 000a FB70     		strb	r3, [r7, #3]
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 1014              		.loc 1 592 0
 1015 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1016 000e 002B     		cmp	r3, #0
 1017 0010 08D0     		beq	.L41
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1018              		.loc 1 595 0
 1019 0012 7B68     		ldr	r3, [r7, #4]
 1020 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1021 0016 9BB2     		uxth	r3, r3
 1022 0018 43F00103 		orr	r3, r3, #1
 1023 001c 9AB2     		uxth	r2, r3
 1024 001e 7B68     		ldr	r3, [r7, #4]
 1025 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 1026 0022 07E0     		b	.L40
 1027              	.L41:
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1028              		.loc 1 600 0
 1029 0024 7B68     		ldr	r3, [r7, #4]
 1030 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1031 0028 9BB2     		uxth	r3, r3
 1032 002a 23F00103 		bic	r3, r3, #1
 1033 002e 9AB2     		uxth	r2, r3
 1034 0030 7B68     		ldr	r3, [r7, #4]
 1035 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 1036              	.L40:
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1037              		.loc 1 602 0
 1038 0034 07F10C07 		add	r7, r7, #12
 1039 0038 BD46     		mov	sp, r7
 1040 003a 80BC     		pop	{r7}
 1041 003c 7047     		bx	lr
 1042              		.cfi_endproc
 1043              	.LFE124:
 1045 003e 00BF     		.section	.text.TIM_OC1Init,"ax",%progbits
 1046              		.align	2
 1047              		.global	TIM_OC1Init
 1048              		.thumb
 1049              		.thumb_func
 1051              	TIM_OC1Init:
 1052              	.LFB125:
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1053              		.loc 1 666 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 16
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 1058 0000 80B4     		push	{r7}
 1059              	.LCFI45:
 1060              		.cfi_def_cfa_offset 4
 1061              		.cfi_offset 7, -4
 1062 0002 85B0     		sub	sp, sp, #20
 1063              	.LCFI46:
 1064              		.cfi_def_cfa_offset 24
 1065 0004 00AF     		add	r7, sp, #0
 1066              	.LCFI47:
 1067              		.cfi_def_cfa_register 7
 1068 0006 7860     		str	r0, [r7, #4]
 1069 0008 3960     		str	r1, [r7, #0]
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1070              		.loc 1 667 0
 1071 000a 4FF00003 		mov	r3, #0
 1072 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1073 0010 4FF00003 		mov	r3, #0
 1074 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 1075 0016 4FF00003 		mov	r3, #0
 1076 001a BB81     		strh	r3, [r7, #12]	@ movhi
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 1077              		.loc 1 676 0
 1078 001c 7B68     		ldr	r3, [r7, #4]
 1079 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1080 0020 9BB2     		uxth	r3, r3
 1081 0022 23F00103 		bic	r3, r3, #1
 1082 0026 9AB2     		uxth	r2, r3
 1083 0028 7B68     		ldr	r3, [r7, #4]
 1084 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1085              		.loc 1 679 0
 1086 002c 7B68     		ldr	r3, [r7, #4]
 1087 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1088 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1089              		.loc 1 681 0
 1090 0032 7B68     		ldr	r3, [r7, #4]
 1091 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1092 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1093              		.loc 1 684 0
 1094 0038 7B68     		ldr	r3, [r7, #4]
 1095 003a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1096 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 1097              		.loc 1 687 0
 1098 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1099 0040 23F07003 		bic	r3, r3, #112
 1100 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 1101              		.loc 1 688 0
 1102 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1103 0048 23F00303 		bic	r3, r3, #3
 1104 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1105              		.loc 1 690 0
 1106 004e 3B68     		ldr	r3, [r7, #0]
 1107 0050 1A88     		ldrh	r2, [r3, #0]
 1108 0052 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1109 0054 1343     		orrs	r3, r3, r2
 1110 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 1111              		.loc 1 693 0
 1112 0058 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1113 005a 23F00203 		bic	r3, r3, #2
 1114 005e FB81     		strh	r3, [r7, #14]	@ movhi
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1115              		.loc 1 695 0
 1116 0060 3B68     		ldr	r3, [r7, #0]
 1117 0062 9A89     		ldrh	r2, [r3, #12]
 1118 0064 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1119 0066 1343     		orrs	r3, r3, r2
 1120 0068 FB81     		strh	r3, [r7, #14]	@ movhi
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1121              		.loc 1 698 0
 1122 006a 3B68     		ldr	r3, [r7, #0]
 1123 006c 5A88     		ldrh	r2, [r3, #2]
 1124 006e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1125 0070 1343     		orrs	r3, r3, r2
 1126 0072 FB81     		strh	r3, [r7, #14]	@ movhi
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1127              		.loc 1 700 0
 1128 0074 7A68     		ldr	r2, [r7, #4]
 1129 0076 4FF00003 		mov	r3, #0
 1130 007a C4F20103 		movt	r3, 16385
 1131 007e 9A42     		cmp	r2, r3
 1132 0080 06D0     		beq	.L44
 1133              		.loc 1 700 0 is_stmt 0 discriminator 1
 1134 0082 7A68     		ldr	r2, [r7, #4]
 1135 0084 4FF48063 		mov	r3, #1024
 1136 0088 C4F20103 		movt	r3, 16385
 1137 008c 9A42     		cmp	r2, r3
 1138 008e 23D1     		bne	.L45
 1139              	.L44:
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 1140              		.loc 1 708 0 is_stmt 1
 1141 0090 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1142 0092 23F00803 		bic	r3, r3, #8
 1143 0096 FB81     		strh	r3, [r7, #14]	@ movhi
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1144              		.loc 1 710 0
 1145 0098 3B68     		ldr	r3, [r7, #0]
 1146 009a DA89     		ldrh	r2, [r3, #14]
 1147 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1148 009e 1343     		orrs	r3, r3, r2
 1149 00a0 FB81     		strh	r3, [r7, #14]	@ movhi
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 1150              		.loc 1 712 0
 1151 00a2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1152 00a4 23F00403 		bic	r3, r3, #4
 1153 00a8 FB81     		strh	r3, [r7, #14]	@ movhi
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1154              		.loc 1 715 0
 1155 00aa 3B68     		ldr	r3, [r7, #0]
 1156 00ac 9A88     		ldrh	r2, [r3, #4]
 1157 00ae FB89     		ldrh	r3, [r7, #14]	@ movhi
 1158 00b0 1343     		orrs	r3, r3, r2
 1159 00b2 FB81     		strh	r3, [r7, #14]	@ movhi
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 1160              		.loc 1 717 0
 1161 00b4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1162 00b6 23F48073 		bic	r3, r3, #256
 1163 00ba BB81     		strh	r3, [r7, #12]	@ movhi
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 1164              		.loc 1 718 0
 1165 00bc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1166 00be 23F40073 		bic	r3, r3, #512
 1167 00c2 BB81     		strh	r3, [r7, #12]	@ movhi
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1168              		.loc 1 720 0
 1169 00c4 3B68     		ldr	r3, [r7, #0]
 1170 00c6 1A8A     		ldrh	r2, [r3, #16]
 1171 00c8 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1172 00ca 1343     		orrs	r3, r3, r2
 1173 00cc BB81     		strh	r3, [r7, #12]	@ movhi
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1174              		.loc 1 722 0
 1175 00ce 3B68     		ldr	r3, [r7, #0]
 1176 00d0 5A8A     		ldrh	r2, [r3, #18]
 1177 00d2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1178 00d4 1343     		orrs	r3, r3, r2
 1179 00d6 BB81     		strh	r3, [r7, #12]	@ movhi
 1180              	.L45:
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1181              		.loc 1 725 0
 1182 00d8 7B68     		ldr	r3, [r7, #4]
 1183 00da BA89     		ldrh	r2, [r7, #12]	@ movhi
 1184 00dc 9A80     		strh	r2, [r3, #4]	@ movhi
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1185              		.loc 1 728 0
 1186 00de 7B68     		ldr	r3, [r7, #4]
 1187 00e0 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1188 00e2 1A83     		strh	r2, [r3, #24]	@ movhi
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1189              		.loc 1 731 0
 1190 00e4 3B68     		ldr	r3, [r7, #0]
 1191 00e6 9A68     		ldr	r2, [r3, #8]
 1192 00e8 7B68     		ldr	r3, [r7, #4]
 1193 00ea 5A63     		str	r2, [r3, #52]
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1194              		.loc 1 734 0
 1195 00ec 7B68     		ldr	r3, [r7, #4]
 1196 00ee FA89     		ldrh	r2, [r7, #14]	@ movhi
 1197 00f0 1A84     		strh	r2, [r3, #32]	@ movhi
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1198              		.loc 1 735 0
 1199 00f2 07F11407 		add	r7, r7, #20
 1200 00f6 BD46     		mov	sp, r7
 1201 00f8 80BC     		pop	{r7}
 1202 00fa 7047     		bx	lr
 1203              		.cfi_endproc
 1204              	.LFE125:
 1206              		.section	.text.TIM_OC2Init,"ax",%progbits
 1207              		.align	2
 1208              		.global	TIM_OC2Init
 1209              		.thumb
 1210              		.thumb_func
 1212              	TIM_OC2Init:
 1213              	.LFB126:
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1214              		.loc 1 747 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 16
 1217              		@ frame_needed = 1, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
 1219 0000 80B4     		push	{r7}
 1220              	.LCFI48:
 1221              		.cfi_def_cfa_offset 4
 1222              		.cfi_offset 7, -4
 1223 0002 85B0     		sub	sp, sp, #20
 1224              	.LCFI49:
 1225              		.cfi_def_cfa_offset 24
 1226 0004 00AF     		add	r7, sp, #0
 1227              	.LCFI50:
 1228              		.cfi_def_cfa_register 7
 1229 0006 7860     		str	r0, [r7, #4]
 1230 0008 3960     		str	r1, [r7, #0]
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1231              		.loc 1 748 0
 1232 000a 4FF00003 		mov	r3, #0
 1233 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1234 0010 4FF00003 		mov	r3, #0
 1235 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 1236 0016 4FF00003 		mov	r3, #0
 1237 001a BB81     		strh	r3, [r7, #12]	@ movhi
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1238              		.loc 1 757 0
 1239 001c 7B68     		ldr	r3, [r7, #4]
 1240 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1241 0020 9BB2     		uxth	r3, r3
 1242 0022 23F01003 		bic	r3, r3, #16
 1243 0026 9AB2     		uxth	r2, r3
 1244 0028 7B68     		ldr	r3, [r7, #4]
 1245 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1246              		.loc 1 760 0
 1247 002c 7B68     		ldr	r3, [r7, #4]
 1248 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1249 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1250              		.loc 1 762 0
 1251 0032 7B68     		ldr	r3, [r7, #4]
 1252 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1253 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1254              		.loc 1 765 0
 1255 0038 7B68     		ldr	r3, [r7, #4]
 1256 003a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1257 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 1258              		.loc 1 768 0
 1259 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1260 0040 23F4E043 		bic	r3, r3, #28672
 1261 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1262              		.loc 1 769 0
 1263 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1264 0048 23F44073 		bic	r3, r3, #768
 1265 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1266              		.loc 1 772 0
 1267 004e 3B68     		ldr	r3, [r7, #0]
 1268 0050 1B88     		ldrh	r3, [r3, #0]
 1269 0052 4FEA0323 		lsl	r3, r3, #8
 1270 0056 9AB2     		uxth	r2, r3
 1271 0058 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1272 005a 1343     		orrs	r3, r3, r2
 1273 005c 7B81     		strh	r3, [r7, #10]	@ movhi
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1274              		.loc 1 775 0
 1275 005e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1276 0060 23F02003 		bic	r3, r3, #32
 1277 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1278              		.loc 1 777 0
 1279 0066 3B68     		ldr	r3, [r7, #0]
 1280 0068 9B89     		ldrh	r3, [r3, #12]
 1281 006a 4FEA0313 		lsl	r3, r3, #4
 1282 006e 9AB2     		uxth	r2, r3
 1283 0070 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1284 0072 1343     		orrs	r3, r3, r2
 1285 0074 FB81     		strh	r3, [r7, #14]	@ movhi
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1286              		.loc 1 780 0
 1287 0076 3B68     		ldr	r3, [r7, #0]
 1288 0078 5B88     		ldrh	r3, [r3, #2]
 1289 007a 4FEA0313 		lsl	r3, r3, #4
 1290 007e 9AB2     		uxth	r2, r3
 1291 0080 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1292 0082 1343     		orrs	r3, r3, r2
 1293 0084 FB81     		strh	r3, [r7, #14]	@ movhi
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1294              		.loc 1 782 0
 1295 0086 7A68     		ldr	r2, [r7, #4]
 1296 0088 4FF00003 		mov	r3, #0
 1297 008c C4F20103 		movt	r3, 16385
 1298 0090 9A42     		cmp	r2, r3
 1299 0092 06D0     		beq	.L47
 1300              		.loc 1 782 0 is_stmt 0 discriminator 1
 1301 0094 7A68     		ldr	r2, [r7, #4]
 1302 0096 4FF48063 		mov	r3, #1024
 1303 009a C4F20103 		movt	r3, 16385
 1304 009e 9A42     		cmp	r2, r3
 1305 00a0 2FD1     		bne	.L48
 1306              	.L47:
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1307              		.loc 1 790 0 is_stmt 1
 1308 00a2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1309 00a4 23F08003 		bic	r3, r3, #128
 1310 00a8 FB81     		strh	r3, [r7, #14]	@ movhi
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1311              		.loc 1 792 0
 1312 00aa 3B68     		ldr	r3, [r7, #0]
 1313 00ac DB89     		ldrh	r3, [r3, #14]
 1314 00ae 4FEA0313 		lsl	r3, r3, #4
 1315 00b2 9AB2     		uxth	r2, r3
 1316 00b4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1317 00b6 1343     		orrs	r3, r3, r2
 1318 00b8 FB81     		strh	r3, [r7, #14]	@ movhi
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1319              		.loc 1 794 0
 1320 00ba FB89     		ldrh	r3, [r7, #14]	@ movhi
 1321 00bc 23F04003 		bic	r3, r3, #64
 1322 00c0 FB81     		strh	r3, [r7, #14]	@ movhi
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1323              		.loc 1 797 0
 1324 00c2 3B68     		ldr	r3, [r7, #0]
 1325 00c4 9B88     		ldrh	r3, [r3, #4]
 1326 00c6 4FEA0313 		lsl	r3, r3, #4
 1327 00ca 9AB2     		uxth	r2, r3
 1328 00cc FB89     		ldrh	r3, [r7, #14]	@ movhi
 1329 00ce 1343     		orrs	r3, r3, r2
 1330 00d0 FB81     		strh	r3, [r7, #14]	@ movhi
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 1331              		.loc 1 799 0
 1332 00d2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1333 00d4 23F48063 		bic	r3, r3, #1024
 1334 00d8 BB81     		strh	r3, [r7, #12]	@ movhi
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1335              		.loc 1 800 0
 1336 00da BB89     		ldrh	r3, [r7, #12]	@ movhi
 1337 00dc 23F40063 		bic	r3, r3, #2048
 1338 00e0 BB81     		strh	r3, [r7, #12]	@ movhi
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1339              		.loc 1 802 0
 1340 00e2 3B68     		ldr	r3, [r7, #0]
 1341 00e4 1B8A     		ldrh	r3, [r3, #16]
 1342 00e6 4FEA8303 		lsl	r3, r3, #2
 1343 00ea 9AB2     		uxth	r2, r3
 1344 00ec BB89     		ldrh	r3, [r7, #12]	@ movhi
 1345 00ee 1343     		orrs	r3, r3, r2
 1346 00f0 BB81     		strh	r3, [r7, #12]	@ movhi
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1347              		.loc 1 804 0
 1348 00f2 3B68     		ldr	r3, [r7, #0]
 1349 00f4 5B8A     		ldrh	r3, [r3, #18]
 1350 00f6 4FEA8303 		lsl	r3, r3, #2
 1351 00fa 9AB2     		uxth	r2, r3
 1352 00fc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1353 00fe 1343     		orrs	r3, r3, r2
 1354 0100 BB81     		strh	r3, [r7, #12]	@ movhi
 1355              	.L48:
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1356              		.loc 1 807 0
 1357 0102 7B68     		ldr	r3, [r7, #4]
 1358 0104 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1359 0106 9A80     		strh	r2, [r3, #4]	@ movhi
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1360              		.loc 1 810 0
 1361 0108 7B68     		ldr	r3, [r7, #4]
 1362 010a 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1363 010c 1A83     		strh	r2, [r3, #24]	@ movhi
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1364              		.loc 1 813 0
 1365 010e 3B68     		ldr	r3, [r7, #0]
 1366 0110 9A68     		ldr	r2, [r3, #8]
 1367 0112 7B68     		ldr	r3, [r7, #4]
 1368 0114 9A63     		str	r2, [r3, #56]
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1369              		.loc 1 816 0
 1370 0116 7B68     		ldr	r3, [r7, #4]
 1371 0118 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1372 011a 1A84     		strh	r2, [r3, #32]	@ movhi
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1373              		.loc 1 817 0
 1374 011c 07F11407 		add	r7, r7, #20
 1375 0120 BD46     		mov	sp, r7
 1376 0122 80BC     		pop	{r7}
 1377 0124 7047     		bx	lr
 1378              		.cfi_endproc
 1379              	.LFE126:
 1381 0126 00BF     		.section	.text.TIM_OC3Init,"ax",%progbits
 1382              		.align	2
 1383              		.global	TIM_OC3Init
 1384              		.thumb
 1385              		.thumb_func
 1387              	TIM_OC3Init:
 1388              	.LFB127:
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1389              		.loc 1 828 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 16
 1392              		@ frame_needed = 1, uses_anonymous_args = 0
 1393              		@ link register save eliminated.
 1394 0000 80B4     		push	{r7}
 1395              	.LCFI51:
 1396              		.cfi_def_cfa_offset 4
 1397              		.cfi_offset 7, -4
 1398 0002 85B0     		sub	sp, sp, #20
 1399              	.LCFI52:
 1400              		.cfi_def_cfa_offset 24
 1401 0004 00AF     		add	r7, sp, #0
 1402              	.LCFI53:
 1403              		.cfi_def_cfa_register 7
 1404 0006 7860     		str	r0, [r7, #4]
 1405 0008 3960     		str	r1, [r7, #0]
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1406              		.loc 1 829 0
 1407 000a 4FF00003 		mov	r3, #0
 1408 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1409 0010 4FF00003 		mov	r3, #0
 1410 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 1411 0016 4FF00003 		mov	r3, #0
 1412 001a BB81     		strh	r3, [r7, #12]	@ movhi
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1413              		.loc 1 838 0
 1414 001c 7B68     		ldr	r3, [r7, #4]
 1415 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1416 0020 9BB2     		uxth	r3, r3
 1417 0022 23F48073 		bic	r3, r3, #256
 1418 0026 9AB2     		uxth	r2, r3
 1419 0028 7B68     		ldr	r3, [r7, #4]
 1420 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1421              		.loc 1 841 0
 1422 002c 7B68     		ldr	r3, [r7, #4]
 1423 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1424 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1425              		.loc 1 843 0
 1426 0032 7B68     		ldr	r3, [r7, #4]
 1427 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1428 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1429              		.loc 1 846 0
 1430 0038 7B68     		ldr	r3, [r7, #4]
 1431 003a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1432 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 1433              		.loc 1 849 0
 1434 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1435 0040 23F07003 		bic	r3, r3, #112
 1436 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1437              		.loc 1 850 0
 1438 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1439 0048 23F00303 		bic	r3, r3, #3
 1440 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1441              		.loc 1 852 0
 1442 004e 3B68     		ldr	r3, [r7, #0]
 1443 0050 1A88     		ldrh	r2, [r3, #0]
 1444 0052 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1445 0054 1343     		orrs	r3, r3, r2
 1446 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1447              		.loc 1 855 0
 1448 0058 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1449 005a 23F40073 		bic	r3, r3, #512
 1450 005e FB81     		strh	r3, [r7, #14]	@ movhi
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1451              		.loc 1 857 0
 1452 0060 3B68     		ldr	r3, [r7, #0]
 1453 0062 9B89     		ldrh	r3, [r3, #12]
 1454 0064 4FEA0323 		lsl	r3, r3, #8
 1455 0068 9AB2     		uxth	r2, r3
 1456 006a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1457 006c 1343     		orrs	r3, r3, r2
 1458 006e FB81     		strh	r3, [r7, #14]	@ movhi
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1459              		.loc 1 860 0
 1460 0070 3B68     		ldr	r3, [r7, #0]
 1461 0072 5B88     		ldrh	r3, [r3, #2]
 1462 0074 4FEA0323 		lsl	r3, r3, #8
 1463 0078 9AB2     		uxth	r2, r3
 1464 007a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1465 007c 1343     		orrs	r3, r3, r2
 1466 007e FB81     		strh	r3, [r7, #14]	@ movhi
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1467              		.loc 1 862 0
 1468 0080 7A68     		ldr	r2, [r7, #4]
 1469 0082 4FF00003 		mov	r3, #0
 1470 0086 C4F20103 		movt	r3, 16385
 1471 008a 9A42     		cmp	r2, r3
 1472 008c 06D0     		beq	.L50
 1473              		.loc 1 862 0 is_stmt 0 discriminator 1
 1474 008e 7A68     		ldr	r2, [r7, #4]
 1475 0090 4FF48063 		mov	r3, #1024
 1476 0094 C4F20103 		movt	r3, 16385
 1477 0098 9A42     		cmp	r2, r3
 1478 009a 2FD1     		bne	.L51
 1479              	.L50:
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1480              		.loc 1 870 0 is_stmt 1
 1481 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1482 009e 23F40063 		bic	r3, r3, #2048
 1483 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1484              		.loc 1 872 0
 1485 00a4 3B68     		ldr	r3, [r7, #0]
 1486 00a6 DB89     		ldrh	r3, [r3, #14]
 1487 00a8 4FEA0323 		lsl	r3, r3, #8
 1488 00ac 9AB2     		uxth	r2, r3
 1489 00ae FB89     		ldrh	r3, [r7, #14]	@ movhi
 1490 00b0 1343     		orrs	r3, r3, r2
 1491 00b2 FB81     		strh	r3, [r7, #14]	@ movhi
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1492              		.loc 1 874 0
 1493 00b4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1494 00b6 23F48063 		bic	r3, r3, #1024
 1495 00ba FB81     		strh	r3, [r7, #14]	@ movhi
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1496              		.loc 1 877 0
 1497 00bc 3B68     		ldr	r3, [r7, #0]
 1498 00be 9B88     		ldrh	r3, [r3, #4]
 1499 00c0 4FEA0323 		lsl	r3, r3, #8
 1500 00c4 9AB2     		uxth	r2, r3
 1501 00c6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1502 00c8 1343     		orrs	r3, r3, r2
 1503 00ca FB81     		strh	r3, [r7, #14]	@ movhi
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 1504              		.loc 1 879 0
 1505 00cc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1506 00ce 23F48053 		bic	r3, r3, #4096
 1507 00d2 BB81     		strh	r3, [r7, #12]	@ movhi
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1508              		.loc 1 880 0
 1509 00d4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1510 00d6 23F40053 		bic	r3, r3, #8192
 1511 00da BB81     		strh	r3, [r7, #12]	@ movhi
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1512              		.loc 1 882 0
 1513 00dc 3B68     		ldr	r3, [r7, #0]
 1514 00de 1B8A     		ldrh	r3, [r3, #16]
 1515 00e0 4FEA0313 		lsl	r3, r3, #4
 1516 00e4 9AB2     		uxth	r2, r3
 1517 00e6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1518 00e8 1343     		orrs	r3, r3, r2
 1519 00ea BB81     		strh	r3, [r7, #12]	@ movhi
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1520              		.loc 1 884 0
 1521 00ec 3B68     		ldr	r3, [r7, #0]
 1522 00ee 5B8A     		ldrh	r3, [r3, #18]
 1523 00f0 4FEA0313 		lsl	r3, r3, #4
 1524 00f4 9AB2     		uxth	r2, r3
 1525 00f6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1526 00f8 1343     		orrs	r3, r3, r2
 1527 00fa BB81     		strh	r3, [r7, #12]	@ movhi
 1528              	.L51:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1529              		.loc 1 887 0
 1530 00fc 7B68     		ldr	r3, [r7, #4]
 1531 00fe BA89     		ldrh	r2, [r7, #12]	@ movhi
 1532 0100 9A80     		strh	r2, [r3, #4]	@ movhi
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1533              		.loc 1 890 0
 1534 0102 7B68     		ldr	r3, [r7, #4]
 1535 0104 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1536 0106 9A83     		strh	r2, [r3, #28]	@ movhi
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1537              		.loc 1 893 0
 1538 0108 3B68     		ldr	r3, [r7, #0]
 1539 010a 9A68     		ldr	r2, [r3, #8]
 1540 010c 7B68     		ldr	r3, [r7, #4]
 1541 010e DA63     		str	r2, [r3, #60]
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1542              		.loc 1 896 0
 1543 0110 7B68     		ldr	r3, [r7, #4]
 1544 0112 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1545 0114 1A84     		strh	r2, [r3, #32]	@ movhi
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1546              		.loc 1 897 0
 1547 0116 07F11407 		add	r7, r7, #20
 1548 011a BD46     		mov	sp, r7
 1549 011c 80BC     		pop	{r7}
 1550 011e 7047     		bx	lr
 1551              		.cfi_endproc
 1552              	.LFE127:
 1554              		.section	.text.TIM_OC4Init,"ax",%progbits
 1555              		.align	2
 1556              		.global	TIM_OC4Init
 1557              		.thumb
 1558              		.thumb_func
 1560              	TIM_OC4Init:
 1561              	.LFB128:
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1562              		.loc 1 908 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 16
 1565              		@ frame_needed = 1, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567 0000 80B4     		push	{r7}
 1568              	.LCFI54:
 1569              		.cfi_def_cfa_offset 4
 1570              		.cfi_offset 7, -4
 1571 0002 85B0     		sub	sp, sp, #20
 1572              	.LCFI55:
 1573              		.cfi_def_cfa_offset 24
 1574 0004 00AF     		add	r7, sp, #0
 1575              	.LCFI56:
 1576              		.cfi_def_cfa_register 7
 1577 0006 7860     		str	r0, [r7, #4]
 1578 0008 3960     		str	r1, [r7, #0]
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1579              		.loc 1 909 0
 1580 000a 4FF00003 		mov	r3, #0
 1581 000e BB81     		strh	r3, [r7, #12]	@ movhi
 1582 0010 4FF00003 		mov	r3, #0
 1583 0014 7B81     		strh	r3, [r7, #10]	@ movhi
 1584 0016 4FF00003 		mov	r3, #0
 1585 001a FB81     		strh	r3, [r7, #14]	@ movhi
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1586              		.loc 1 918 0
 1587 001c 7B68     		ldr	r3, [r7, #4]
 1588 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1589 0020 9BB2     		uxth	r3, r3
 1590 0022 23F48053 		bic	r3, r3, #4096
 1591 0026 9AB2     		uxth	r2, r3
 1592 0028 7B68     		ldr	r3, [r7, #4]
 1593 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1594              		.loc 1 921 0
 1595 002c 7B68     		ldr	r3, [r7, #4]
 1596 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1597 0030 7B81     		strh	r3, [r7, #10]	@ movhi
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1598              		.loc 1 923 0
 1599 0032 7B68     		ldr	r3, [r7, #4]
 1600 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1601 0036 FB81     		strh	r3, [r7, #14]	@ movhi
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1602              		.loc 1 926 0
 1603 0038 7B68     		ldr	r3, [r7, #4]
 1604 003a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1605 003c BB81     		strh	r3, [r7, #12]	@ movhi
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 1606              		.loc 1 929 0
 1607 003e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1608 0040 23F4E043 		bic	r3, r3, #28672
 1609 0044 BB81     		strh	r3, [r7, #12]	@ movhi
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1610              		.loc 1 930 0
 1611 0046 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1612 0048 23F44073 		bic	r3, r3, #768
 1613 004c BB81     		strh	r3, [r7, #12]	@ movhi
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1614              		.loc 1 933 0
 1615 004e 3B68     		ldr	r3, [r7, #0]
 1616 0050 1B88     		ldrh	r3, [r3, #0]
 1617 0052 4FEA0323 		lsl	r3, r3, #8
 1618 0056 9AB2     		uxth	r2, r3
 1619 0058 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1620 005a 1343     		orrs	r3, r3, r2
 1621 005c BB81     		strh	r3, [r7, #12]	@ movhi
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1622              		.loc 1 936 0
 1623 005e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1624 0060 23F40053 		bic	r3, r3, #8192
 1625 0064 7B81     		strh	r3, [r7, #10]	@ movhi
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1626              		.loc 1 938 0
 1627 0066 3B68     		ldr	r3, [r7, #0]
 1628 0068 9B89     		ldrh	r3, [r3, #12]
 1629 006a 4FEA0333 		lsl	r3, r3, #12
 1630 006e 9AB2     		uxth	r2, r3
 1631 0070 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1632 0072 1343     		orrs	r3, r3, r2
 1633 0074 7B81     		strh	r3, [r7, #10]	@ movhi
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1634              		.loc 1 941 0
 1635 0076 3B68     		ldr	r3, [r7, #0]
 1636 0078 5B88     		ldrh	r3, [r3, #2]
 1637 007a 4FEA0333 		lsl	r3, r3, #12
 1638 007e 9AB2     		uxth	r2, r3
 1639 0080 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1640 0082 1343     		orrs	r3, r3, r2
 1641 0084 7B81     		strh	r3, [r7, #10]	@ movhi
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1642              		.loc 1 943 0
 1643 0086 7A68     		ldr	r2, [r7, #4]
 1644 0088 4FF00003 		mov	r3, #0
 1645 008c C4F20103 		movt	r3, 16385
 1646 0090 9A42     		cmp	r2, r3
 1647 0092 06D0     		beq	.L53
 1648              		.loc 1 943 0 is_stmt 0 discriminator 1
 1649 0094 7A68     		ldr	r2, [r7, #4]
 1650 0096 4FF48063 		mov	r3, #1024
 1651 009a C4F20103 		movt	r3, 16385
 1652 009e 9A42     		cmp	r2, r3
 1653 00a0 0BD1     		bne	.L54
 1654              	.L53:
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1655              		.loc 1 947 0 is_stmt 1
 1656 00a2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1657 00a4 23F48043 		bic	r3, r3, #16384
 1658 00a8 FB81     		strh	r3, [r7, #14]	@ movhi
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1659              		.loc 1 949 0
 1660 00aa 3B68     		ldr	r3, [r7, #0]
 1661 00ac 1B8A     		ldrh	r3, [r3, #16]
 1662 00ae 4FEA8313 		lsl	r3, r3, #6
 1663 00b2 9AB2     		uxth	r2, r3
 1664 00b4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1665 00b6 1343     		orrs	r3, r3, r2
 1666 00b8 FB81     		strh	r3, [r7, #14]	@ movhi
 1667              	.L54:
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1668              		.loc 1 952 0
 1669 00ba 7B68     		ldr	r3, [r7, #4]
 1670 00bc FA89     		ldrh	r2, [r7, #14]	@ movhi
 1671 00be 9A80     		strh	r2, [r3, #4]	@ movhi
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1672              		.loc 1 955 0
 1673 00c0 7B68     		ldr	r3, [r7, #4]
 1674 00c2 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1675 00c4 9A83     		strh	r2, [r3, #28]	@ movhi
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1676              		.loc 1 958 0
 1677 00c6 3B68     		ldr	r3, [r7, #0]
 1678 00c8 9A68     		ldr	r2, [r3, #8]
 1679 00ca 7B68     		ldr	r3, [r7, #4]
 1680 00cc 1A64     		str	r2, [r3, #64]
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1681              		.loc 1 961 0
 1682 00ce 7B68     		ldr	r3, [r7, #4]
 1683 00d0 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1684 00d2 1A84     		strh	r2, [r3, #32]	@ movhi
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1685              		.loc 1 962 0
 1686 00d4 07F11407 		add	r7, r7, #20
 1687 00d8 BD46     		mov	sp, r7
 1688 00da 80BC     		pop	{r7}
 1689 00dc 7047     		bx	lr
 1690              		.cfi_endproc
 1691              	.LFE128:
 1693 00de 00BF     		.section	.text.TIM_OCStructInit,"ax",%progbits
 1694              		.align	2
 1695              		.global	TIM_OCStructInit
 1696              		.thumb
 1697              		.thumb_func
 1699              	TIM_OCStructInit:
 1700              	.LFB129:
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1701              		.loc 1 971 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 8
 1704              		@ frame_needed = 1, uses_anonymous_args = 0
 1705              		@ link register save eliminated.
 1706 0000 80B4     		push	{r7}
 1707              	.LCFI57:
 1708              		.cfi_def_cfa_offset 4
 1709              		.cfi_offset 7, -4
 1710 0002 83B0     		sub	sp, sp, #12
 1711              	.LCFI58:
 1712              		.cfi_def_cfa_offset 16
 1713 0004 00AF     		add	r7, sp, #0
 1714              	.LCFI59:
 1715              		.cfi_def_cfa_register 7
 1716 0006 7860     		str	r0, [r7, #4]
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1717              		.loc 1 973 0
 1718 0008 7B68     		ldr	r3, [r7, #4]
 1719 000a 4FF00002 		mov	r2, #0
 1720 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1721              		.loc 1 974 0
 1722 0010 7B68     		ldr	r3, [r7, #4]
 1723 0012 4FF00002 		mov	r2, #0
 1724 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1725              		.loc 1 975 0
 1726 0018 7B68     		ldr	r3, [r7, #4]
 1727 001a 4FF00002 		mov	r2, #0
 1728 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1729              		.loc 1 976 0
 1730 0020 7B68     		ldr	r3, [r7, #4]
 1731 0022 4FF00002 		mov	r2, #0
 1732 0026 9A60     		str	r2, [r3, #8]
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1733              		.loc 1 977 0
 1734 0028 7B68     		ldr	r3, [r7, #4]
 1735 002a 4FF00002 		mov	r2, #0
 1736 002e 9A81     		strh	r2, [r3, #12]	@ movhi
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1737              		.loc 1 978 0
 1738 0030 7B68     		ldr	r3, [r7, #4]
 1739 0032 4FF00002 		mov	r2, #0
 1740 0036 DA81     		strh	r2, [r3, #14]	@ movhi
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1741              		.loc 1 979 0
 1742 0038 7B68     		ldr	r3, [r7, #4]
 1743 003a 4FF00002 		mov	r2, #0
 1744 003e 1A82     		strh	r2, [r3, #16]	@ movhi
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1745              		.loc 1 980 0
 1746 0040 7B68     		ldr	r3, [r7, #4]
 1747 0042 4FF00002 		mov	r2, #0
 1748 0046 5A82     		strh	r2, [r3, #18]	@ movhi
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1749              		.loc 1 981 0
 1750 0048 07F10C07 		add	r7, r7, #12
 1751 004c BD46     		mov	sp, r7
 1752 004e 80BC     		pop	{r7}
 1753 0050 7047     		bx	lr
 1754              		.cfi_endproc
 1755              	.LFE129:
 1757 0052 00BF     		.section	.text.TIM_SelectOCxM,"ax",%progbits
 1758              		.align	2
 1759              		.global	TIM_SelectOCxM
 1760              		.thumb
 1761              		.thumb_func
 1763              	TIM_SelectOCxM:
 1764              	.LFB130:
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1765              		.loc 1 1007 0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 16
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769              		@ link register save eliminated.
 1770 0000 80B4     		push	{r7}
 1771              	.LCFI60:
 1772              		.cfi_def_cfa_offset 4
 1773              		.cfi_offset 7, -4
 1774 0002 85B0     		sub	sp, sp, #20
 1775              	.LCFI61:
 1776              		.cfi_def_cfa_offset 24
 1777 0004 00AF     		add	r7, sp, #0
 1778              	.LCFI62:
 1779              		.cfi_def_cfa_register 7
 1780 0006 7860     		str	r0, [r7, #4]
 1781 0008 1346     		mov	r3, r2
 1782 000a 0A46     		mov	r2, r1	@ movhi
 1783 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1784 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 1785              		.loc 1 1008 0
 1786 0010 4FF00003 		mov	r3, #0
 1787 0014 FB60     		str	r3, [r7, #12]
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
 1788              		.loc 1 1009 0
 1789 0016 4FF00003 		mov	r3, #0
 1790 001a 7B81     		strh	r3, [r7, #10]	@ movhi
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
 1791              		.loc 1 1016 0
 1792 001c 7B68     		ldr	r3, [r7, #4]
 1793 001e FB60     		str	r3, [r7, #12]
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 1794              		.loc 1 1017 0
 1795 0020 FB68     		ldr	r3, [r7, #12]
 1796 0022 03F11803 		add	r3, r3, #24
 1797 0026 FB60     		str	r3, [r7, #12]
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1798              		.loc 1 1019 0
 1799 0028 7B88     		ldrh	r3, [r7, #2]
 1800 002a 4FF00102 		mov	r2, #1
 1801 002e 02FA03F3 		lsl	r3, r2, r3
 1802 0032 7B81     		strh	r3, [r7, #10]	@ movhi
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1803              		.loc 1 1022 0
 1804 0034 7B68     		ldr	r3, [r7, #4]
 1805 0036 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1806 0038 9AB2     		uxth	r2, r3
 1807 003a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1808 003c 6FEA0303 		mvn	r3, r3
 1809 0040 9BB2     		uxth	r3, r3
 1810 0042 1340     		ands	r3, r3, r2
 1811 0044 9AB2     		uxth	r2, r3
 1812 0046 7B68     		ldr	r3, [r7, #4]
 1813 0048 1A84     		strh	r2, [r3, #32]	@ movhi
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1814              		.loc 1 1024 0
 1815 004a 7B88     		ldrh	r3, [r7, #2]
 1816 004c 002B     		cmp	r3, #0
 1817 004e 02D0     		beq	.L57
 1818              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1819 0050 7B88     		ldrh	r3, [r7, #2]
 1820 0052 082B     		cmp	r3, #8
 1821 0054 14D1     		bne	.L58
 1822              	.L57:
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 1823              		.loc 1 1026 0 is_stmt 1
 1824 0056 7B88     		ldrh	r3, [r7, #2]
 1825 0058 4FEA5303 		lsr	r3, r3, #1
 1826 005c 9BB2     		uxth	r3, r3
 1827 005e FA68     		ldr	r2, [r7, #12]
 1828 0060 D318     		adds	r3, r2, r3
 1829 0062 FB60     		str	r3, [r7, #12]
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1830              		.loc 1 1029 0
 1831 0064 FA68     		ldr	r2, [r7, #12]
 1832 0066 FB68     		ldr	r3, [r7, #12]
 1833 0068 1968     		ldr	r1, [r3, #0]
 1834 006a 4FF68F73 		movw	r3, #65423
 1835 006e 0B40     		ands	r3, r3, r1
 1836 0070 1360     		str	r3, [r2, #0]
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1837              		.loc 1 1032 0
 1838 0072 FB68     		ldr	r3, [r7, #12]
 1839 0074 FA68     		ldr	r2, [r7, #12]
 1840 0076 1168     		ldr	r1, [r2, #0]
 1841 0078 3A88     		ldrh	r2, [r7, #0]
 1842 007a 0A43     		orrs	r2, r2, r1
 1843 007c 1A60     		str	r2, [r3, #0]
 1844 007e 19E0     		b	.L56
 1845              	.L58:
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1846              		.loc 1 1036 0
 1847 0080 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1848 0082 A3F10403 		sub	r3, r3, #4
 1849 0086 9BB2     		uxth	r3, r3
 1850 0088 4FEA5303 		lsr	r3, r3, #1
 1851 008c 9BB2     		uxth	r3, r3
 1852 008e FA68     		ldr	r2, [r7, #12]
 1853 0090 D318     		adds	r3, r2, r3
 1854 0092 FB60     		str	r3, [r7, #12]
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1855              		.loc 1 1039 0
 1856 0094 FA68     		ldr	r2, [r7, #12]
 1857 0096 FB68     		ldr	r3, [r7, #12]
 1858 0098 1968     		ldr	r1, [r3, #0]
 1859 009a 48F6FF73 		movw	r3, #36863
 1860 009e 0B40     		ands	r3, r3, r1
 1861 00a0 1360     		str	r3, [r2, #0]
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1862              		.loc 1 1042 0
 1863 00a2 FB68     		ldr	r3, [r7, #12]
 1864 00a4 FA68     		ldr	r2, [r7, #12]
 1865 00a6 1168     		ldr	r1, [r2, #0]
 1866 00a8 3A88     		ldrh	r2, [r7, #0]	@ movhi
 1867 00aa 4FEA0222 		lsl	r2, r2, #8
 1868 00ae 92B2     		uxth	r2, r2
 1869 00b0 0A43     		orrs	r2, r2, r1
 1870 00b2 1A60     		str	r2, [r3, #0]
 1871              	.L56:
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1872              		.loc 1 1044 0
 1873 00b4 07F11407 		add	r7, r7, #20
 1874 00b8 BD46     		mov	sp, r7
 1875 00ba 80BC     		pop	{r7}
 1876 00bc 7047     		bx	lr
 1877              		.cfi_endproc
 1878              	.LFE130:
 1880 00be 00BF     		.section	.text.TIM_SetCompare1,"ax",%progbits
 1881              		.align	2
 1882              		.global	TIM_SetCompare1
 1883              		.thumb
 1884              		.thumb_func
 1886              	TIM_SetCompare1:
 1887              	.LFB131:
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1888              		.loc 1 1053 0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 8
 1891              		@ frame_needed = 1, uses_anonymous_args = 0
 1892              		@ link register save eliminated.
 1893 0000 80B4     		push	{r7}
 1894              	.LCFI63:
 1895              		.cfi_def_cfa_offset 4
 1896              		.cfi_offset 7, -4
 1897 0002 83B0     		sub	sp, sp, #12
 1898              	.LCFI64:
 1899              		.cfi_def_cfa_offset 16
 1900 0004 00AF     		add	r7, sp, #0
 1901              	.LCFI65:
 1902              		.cfi_def_cfa_register 7
 1903 0006 7860     		str	r0, [r7, #4]
 1904 0008 3960     		str	r1, [r7, #0]
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 1905              		.loc 1 1058 0
 1906 000a 7B68     		ldr	r3, [r7, #4]
 1907 000c 3A68     		ldr	r2, [r7, #0]
 1908 000e 5A63     		str	r2, [r3, #52]
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1909              		.loc 1 1059 0
 1910 0010 07F10C07 		add	r7, r7, #12
 1911 0014 BD46     		mov	sp, r7
 1912 0016 80BC     		pop	{r7}
 1913 0018 7047     		bx	lr
 1914              		.cfi_endproc
 1915              	.LFE131:
 1917 001a 00BF     		.section	.text.TIM_SetCompare2,"ax",%progbits
 1918              		.align	2
 1919              		.global	TIM_SetCompare2
 1920              		.thumb
 1921              		.thumb_func
 1923              	TIM_SetCompare2:
 1924              	.LFB132:
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1925              		.loc 1 1069 0
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 8
 1928              		@ frame_needed = 1, uses_anonymous_args = 0
 1929              		@ link register save eliminated.
 1930 0000 80B4     		push	{r7}
 1931              	.LCFI66:
 1932              		.cfi_def_cfa_offset 4
 1933              		.cfi_offset 7, -4
 1934 0002 83B0     		sub	sp, sp, #12
 1935              	.LCFI67:
 1936              		.cfi_def_cfa_offset 16
 1937 0004 00AF     		add	r7, sp, #0
 1938              	.LCFI68:
 1939              		.cfi_def_cfa_register 7
 1940 0006 7860     		str	r0, [r7, #4]
 1941 0008 3960     		str	r1, [r7, #0]
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 1942              		.loc 1 1074 0
 1943 000a 7B68     		ldr	r3, [r7, #4]
 1944 000c 3A68     		ldr	r2, [r7, #0]
 1945 000e 9A63     		str	r2, [r3, #56]
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1946              		.loc 1 1075 0
 1947 0010 07F10C07 		add	r7, r7, #12
 1948 0014 BD46     		mov	sp, r7
 1949 0016 80BC     		pop	{r7}
 1950 0018 7047     		bx	lr
 1951              		.cfi_endproc
 1952              	.LFE132:
 1954 001a 00BF     		.section	.text.TIM_SetCompare3,"ax",%progbits
 1955              		.align	2
 1956              		.global	TIM_SetCompare3
 1957              		.thumb
 1958              		.thumb_func
 1960              	TIM_SetCompare3:
 1961              	.LFB133:
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1962              		.loc 1 1084 0
 1963              		.cfi_startproc
 1964              		@ args = 0, pretend = 0, frame = 8
 1965              		@ frame_needed = 1, uses_anonymous_args = 0
 1966              		@ link register save eliminated.
 1967 0000 80B4     		push	{r7}
 1968              	.LCFI69:
 1969              		.cfi_def_cfa_offset 4
 1970              		.cfi_offset 7, -4
 1971 0002 83B0     		sub	sp, sp, #12
 1972              	.LCFI70:
 1973              		.cfi_def_cfa_offset 16
 1974 0004 00AF     		add	r7, sp, #0
 1975              	.LCFI71:
 1976              		.cfi_def_cfa_register 7
 1977 0006 7860     		str	r0, [r7, #4]
 1978 0008 3960     		str	r1, [r7, #0]
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 1979              		.loc 1 1089 0
 1980 000a 7B68     		ldr	r3, [r7, #4]
 1981 000c 3A68     		ldr	r2, [r7, #0]
 1982 000e DA63     		str	r2, [r3, #60]
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1983              		.loc 1 1090 0
 1984 0010 07F10C07 		add	r7, r7, #12
 1985 0014 BD46     		mov	sp, r7
 1986 0016 80BC     		pop	{r7}
 1987 0018 7047     		bx	lr
 1988              		.cfi_endproc
 1989              	.LFE133:
 1991 001a 00BF     		.section	.text.TIM_SetCompare4,"ax",%progbits
 1992              		.align	2
 1993              		.global	TIM_SetCompare4
 1994              		.thumb
 1995              		.thumb_func
 1997              	TIM_SetCompare4:
 1998              	.LFB134:
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1999              		.loc 1 1099 0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 8
 2002              		@ frame_needed = 1, uses_anonymous_args = 0
 2003              		@ link register save eliminated.
 2004 0000 80B4     		push	{r7}
 2005              	.LCFI72:
 2006              		.cfi_def_cfa_offset 4
 2007              		.cfi_offset 7, -4
 2008 0002 83B0     		sub	sp, sp, #12
 2009              	.LCFI73:
 2010              		.cfi_def_cfa_offset 16
 2011 0004 00AF     		add	r7, sp, #0
 2012              	.LCFI74:
 2013              		.cfi_def_cfa_register 7
 2014 0006 7860     		str	r0, [r7, #4]
 2015 0008 3960     		str	r1, [r7, #0]
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 2016              		.loc 1 1104 0
 2017 000a 7B68     		ldr	r3, [r7, #4]
 2018 000c 3A68     		ldr	r2, [r7, #0]
 2019 000e 1A64     		str	r2, [r3, #64]
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2020              		.loc 1 1105 0
 2021 0010 07F10C07 		add	r7, r7, #12
 2022 0014 BD46     		mov	sp, r7
 2023 0016 80BC     		pop	{r7}
 2024 0018 7047     		bx	lr
 2025              		.cfi_endproc
 2026              	.LFE134:
 2028 001a 00BF     		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 2029              		.align	2
 2030              		.global	TIM_ForcedOC1Config
 2031              		.thumb
 2032              		.thumb_func
 2034              	TIM_ForcedOC1Config:
 2035              	.LFB135:
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2036              		.loc 1 1117 0
 2037              		.cfi_startproc
 2038              		@ args = 0, pretend = 0, frame = 16
 2039              		@ frame_needed = 1, uses_anonymous_args = 0
 2040              		@ link register save eliminated.
 2041 0000 80B4     		push	{r7}
 2042              	.LCFI75:
 2043              		.cfi_def_cfa_offset 4
 2044              		.cfi_offset 7, -4
 2045 0002 85B0     		sub	sp, sp, #20
 2046              	.LCFI76:
 2047              		.cfi_def_cfa_offset 24
 2048 0004 00AF     		add	r7, sp, #0
 2049              	.LCFI77:
 2050              		.cfi_def_cfa_register 7
 2051 0006 7860     		str	r0, [r7, #4]
 2052 0008 0B46     		mov	r3, r1
 2053 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2054              		.loc 1 1118 0
 2055 000c 4FF00003 		mov	r3, #0
 2056 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2057              		.loc 1 1123 0
 2058 0012 7B68     		ldr	r3, [r7, #4]
 2059 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2060 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 2061              		.loc 1 1126 0
 2062 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2063 001a 23F07003 		bic	r3, r3, #112
 2064 001e FB81     		strh	r3, [r7, #14]	@ movhi
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 2065              		.loc 1 1129 0
 2066 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2067 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2068 0024 1343     		orrs	r3, r3, r2
 2069 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2070              		.loc 1 1132 0
 2071 0028 7B68     		ldr	r3, [r7, #4]
 2072 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2073 002c 1A83     		strh	r2, [r3, #24]	@ movhi
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2074              		.loc 1 1133 0
 2075 002e 07F11407 		add	r7, r7, #20
 2076 0032 BD46     		mov	sp, r7
 2077 0034 80BC     		pop	{r7}
 2078 0036 7047     		bx	lr
 2079              		.cfi_endproc
 2080              	.LFE135:
 2082              		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 2083              		.align	2
 2084              		.global	TIM_ForcedOC2Config
 2085              		.thumb
 2086              		.thumb_func
 2088              	TIM_ForcedOC2Config:
 2089              	.LFB136:
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2090              		.loc 1 1146 0
 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 16
 2093              		@ frame_needed = 1, uses_anonymous_args = 0
 2094              		@ link register save eliminated.
 2095 0000 80B4     		push	{r7}
 2096              	.LCFI78:
 2097              		.cfi_def_cfa_offset 4
 2098              		.cfi_offset 7, -4
 2099 0002 85B0     		sub	sp, sp, #20
 2100              	.LCFI79:
 2101              		.cfi_def_cfa_offset 24
 2102 0004 00AF     		add	r7, sp, #0
 2103              	.LCFI80:
 2104              		.cfi_def_cfa_register 7
 2105 0006 7860     		str	r0, [r7, #4]
 2106 0008 0B46     		mov	r3, r1
 2107 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2108              		.loc 1 1147 0
 2109 000c 4FF00003 		mov	r3, #0
 2110 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2111              		.loc 1 1152 0
 2112 0012 7B68     		ldr	r3, [r7, #4]
 2113 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2114 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 2115              		.loc 1 1155 0
 2116 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2117 001a 23F4E043 		bic	r3, r3, #28672
 2118 001e FB81     		strh	r3, [r7, #14]	@ movhi
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 2119              		.loc 1 1158 0
 2120 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2121 0022 4FEA0323 		lsl	r3, r3, #8
 2122 0026 9AB2     		uxth	r2, r3
 2123 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2124 002a 1343     		orrs	r3, r3, r2
 2125 002c FB81     		strh	r3, [r7, #14]	@ movhi
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2126              		.loc 1 1161 0
 2127 002e 7B68     		ldr	r3, [r7, #4]
 2128 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2129 0032 1A83     		strh	r2, [r3, #24]	@ movhi
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2130              		.loc 1 1162 0
 2131 0034 07F11407 		add	r7, r7, #20
 2132 0038 BD46     		mov	sp, r7
 2133 003a 80BC     		pop	{r7}
 2134 003c 7047     		bx	lr
 2135              		.cfi_endproc
 2136              	.LFE136:
 2138 003e 00BF     		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 2139              		.align	2
 2140              		.global	TIM_ForcedOC3Config
 2141              		.thumb
 2142              		.thumb_func
 2144              	TIM_ForcedOC3Config:
 2145              	.LFB137:
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2146              		.loc 1 1174 0
 2147              		.cfi_startproc
 2148              		@ args = 0, pretend = 0, frame = 16
 2149              		@ frame_needed = 1, uses_anonymous_args = 0
 2150              		@ link register save eliminated.
 2151 0000 80B4     		push	{r7}
 2152              	.LCFI81:
 2153              		.cfi_def_cfa_offset 4
 2154              		.cfi_offset 7, -4
 2155 0002 85B0     		sub	sp, sp, #20
 2156              	.LCFI82:
 2157              		.cfi_def_cfa_offset 24
 2158 0004 00AF     		add	r7, sp, #0
 2159              	.LCFI83:
 2160              		.cfi_def_cfa_register 7
 2161 0006 7860     		str	r0, [r7, #4]
 2162 0008 0B46     		mov	r3, r1
 2163 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2164              		.loc 1 1175 0
 2165 000c 4FF00003 		mov	r3, #0
 2166 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2167              		.loc 1 1181 0
 2168 0012 7B68     		ldr	r3, [r7, #4]
 2169 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2170 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 2171              		.loc 1 1184 0
 2172 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2173 001a 23F07003 		bic	r3, r3, #112
 2174 001e FB81     		strh	r3, [r7, #14]	@ movhi
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 2175              		.loc 1 1187 0
 2176 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2177 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2178 0024 1343     		orrs	r3, r3, r2
 2179 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2180              		.loc 1 1190 0
 2181 0028 7B68     		ldr	r3, [r7, #4]
 2182 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2183 002c 9A83     		strh	r2, [r3, #28]	@ movhi
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2184              		.loc 1 1191 0
 2185 002e 07F11407 		add	r7, r7, #20
 2186 0032 BD46     		mov	sp, r7
 2187 0034 80BC     		pop	{r7}
 2188 0036 7047     		bx	lr
 2189              		.cfi_endproc
 2190              	.LFE137:
 2192              		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 2193              		.align	2
 2194              		.global	TIM_ForcedOC4Config
 2195              		.thumb
 2196              		.thumb_func
 2198              	TIM_ForcedOC4Config:
 2199              	.LFB138:
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2200              		.loc 1 1203 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 16
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204              		@ link register save eliminated.
 2205 0000 80B4     		push	{r7}
 2206              	.LCFI84:
 2207              		.cfi_def_cfa_offset 4
 2208              		.cfi_offset 7, -4
 2209 0002 85B0     		sub	sp, sp, #20
 2210              	.LCFI85:
 2211              		.cfi_def_cfa_offset 24
 2212 0004 00AF     		add	r7, sp, #0
 2213              	.LCFI86:
 2214              		.cfi_def_cfa_register 7
 2215 0006 7860     		str	r0, [r7, #4]
 2216 0008 0B46     		mov	r3, r1
 2217 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2218              		.loc 1 1204 0
 2219 000c 4FF00003 		mov	r3, #0
 2220 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2221              		.loc 1 1209 0
 2222 0012 7B68     		ldr	r3, [r7, #4]
 2223 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2224 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 2225              		.loc 1 1212 0
 2226 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2227 001a 23F4E043 		bic	r3, r3, #28672
 2228 001e FB81     		strh	r3, [r7, #14]	@ movhi
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 2229              		.loc 1 1215 0
 2230 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2231 0022 4FEA0323 		lsl	r3, r3, #8
 2232 0026 9AB2     		uxth	r2, r3
 2233 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2234 002a 1343     		orrs	r3, r3, r2
 2235 002c FB81     		strh	r3, [r7, #14]	@ movhi
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2236              		.loc 1 1218 0
 2237 002e 7B68     		ldr	r3, [r7, #4]
 2238 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2239 0032 9A83     		strh	r2, [r3, #28]	@ movhi
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2240              		.loc 1 1219 0
 2241 0034 07F11407 		add	r7, r7, #20
 2242 0038 BD46     		mov	sp, r7
 2243 003a 80BC     		pop	{r7}
 2244 003c 7047     		bx	lr
 2245              		.cfi_endproc
 2246              	.LFE138:
 2248 003e 00BF     		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2249              		.align	2
 2250              		.global	TIM_OC1PreloadConfig
 2251              		.thumb
 2252              		.thumb_func
 2254              	TIM_OC1PreloadConfig:
 2255              	.LFB139:
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2256              		.loc 1 1231 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 16
 2259              		@ frame_needed = 1, uses_anonymous_args = 0
 2260              		@ link register save eliminated.
 2261 0000 80B4     		push	{r7}
 2262              	.LCFI87:
 2263              		.cfi_def_cfa_offset 4
 2264              		.cfi_offset 7, -4
 2265 0002 85B0     		sub	sp, sp, #20
 2266              	.LCFI88:
 2267              		.cfi_def_cfa_offset 24
 2268 0004 00AF     		add	r7, sp, #0
 2269              	.LCFI89:
 2270              		.cfi_def_cfa_register 7
 2271 0006 7860     		str	r0, [r7, #4]
 2272 0008 0B46     		mov	r3, r1
 2273 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2274              		.loc 1 1232 0
 2275 000c 4FF00003 		mov	r3, #0
 2276 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2277              		.loc 1 1238 0
 2278 0012 7B68     		ldr	r3, [r7, #4]
 2279 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2280 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 2281              		.loc 1 1241 0
 2282 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2283 001a 23F00803 		bic	r3, r3, #8
 2284 001e FB81     		strh	r3, [r7, #14]	@ movhi
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2285              		.loc 1 1244 0
 2286 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2287 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2288 0024 1343     		orrs	r3, r3, r2
 2289 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2290              		.loc 1 1247 0
 2291 0028 7B68     		ldr	r3, [r7, #4]
 2292 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2293 002c 1A83     		strh	r2, [r3, #24]	@ movhi
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2294              		.loc 1 1248 0
 2295 002e 07F11407 		add	r7, r7, #20
 2296 0032 BD46     		mov	sp, r7
 2297 0034 80BC     		pop	{r7}
 2298 0036 7047     		bx	lr
 2299              		.cfi_endproc
 2300              	.LFE139:
 2302              		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2303              		.align	2
 2304              		.global	TIM_OC2PreloadConfig
 2305              		.thumb
 2306              		.thumb_func
 2308              	TIM_OC2PreloadConfig:
 2309              	.LFB140:
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2310              		.loc 1 1261 0
 2311              		.cfi_startproc
 2312              		@ args = 0, pretend = 0, frame = 16
 2313              		@ frame_needed = 1, uses_anonymous_args = 0
 2314              		@ link register save eliminated.
 2315 0000 80B4     		push	{r7}
 2316              	.LCFI90:
 2317              		.cfi_def_cfa_offset 4
 2318              		.cfi_offset 7, -4
 2319 0002 85B0     		sub	sp, sp, #20
 2320              	.LCFI91:
 2321              		.cfi_def_cfa_offset 24
 2322 0004 00AF     		add	r7, sp, #0
 2323              	.LCFI92:
 2324              		.cfi_def_cfa_register 7
 2325 0006 7860     		str	r0, [r7, #4]
 2326 0008 0B46     		mov	r3, r1
 2327 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2328              		.loc 1 1262 0
 2329 000c 4FF00003 		mov	r3, #0
 2330 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2331              		.loc 1 1268 0
 2332 0012 7B68     		ldr	r3, [r7, #4]
 2333 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2334 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 2335              		.loc 1 1271 0
 2336 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2337 001a 23F40063 		bic	r3, r3, #2048
 2338 001e FB81     		strh	r3, [r7, #14]	@ movhi
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 2339              		.loc 1 1274 0
 2340 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2341 0022 4FEA0323 		lsl	r3, r3, #8
 2342 0026 9AB2     		uxth	r2, r3
 2343 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2344 002a 1343     		orrs	r3, r3, r2
 2345 002c FB81     		strh	r3, [r7, #14]	@ movhi
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2346              		.loc 1 1277 0
 2347 002e 7B68     		ldr	r3, [r7, #4]
 2348 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2349 0032 1A83     		strh	r2, [r3, #24]	@ movhi
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2350              		.loc 1 1278 0
 2351 0034 07F11407 		add	r7, r7, #20
 2352 0038 BD46     		mov	sp, r7
 2353 003a 80BC     		pop	{r7}
 2354 003c 7047     		bx	lr
 2355              		.cfi_endproc
 2356              	.LFE140:
 2358 003e 00BF     		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2359              		.align	2
 2360              		.global	TIM_OC3PreloadConfig
 2361              		.thumb
 2362              		.thumb_func
 2364              	TIM_OC3PreloadConfig:
 2365              	.LFB141:
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2366              		.loc 1 1290 0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 16
 2369              		@ frame_needed = 1, uses_anonymous_args = 0
 2370              		@ link register save eliminated.
 2371 0000 80B4     		push	{r7}
 2372              	.LCFI93:
 2373              		.cfi_def_cfa_offset 4
 2374              		.cfi_offset 7, -4
 2375 0002 85B0     		sub	sp, sp, #20
 2376              	.LCFI94:
 2377              		.cfi_def_cfa_offset 24
 2378 0004 00AF     		add	r7, sp, #0
 2379              	.LCFI95:
 2380              		.cfi_def_cfa_register 7
 2381 0006 7860     		str	r0, [r7, #4]
 2382 0008 0B46     		mov	r3, r1
 2383 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2384              		.loc 1 1291 0
 2385 000c 4FF00003 		mov	r3, #0
 2386 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2387              		.loc 1 1297 0
 2388 0012 7B68     		ldr	r3, [r7, #4]
 2389 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2390 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 2391              		.loc 1 1300 0
 2392 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2393 001a 23F00803 		bic	r3, r3, #8
 2394 001e FB81     		strh	r3, [r7, #14]	@ movhi
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2395              		.loc 1 1303 0
 2396 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2397 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2398 0024 1343     		orrs	r3, r3, r2
 2399 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2400              		.loc 1 1306 0
 2401 0028 7B68     		ldr	r3, [r7, #4]
 2402 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2403 002c 9A83     		strh	r2, [r3, #28]	@ movhi
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2404              		.loc 1 1307 0
 2405 002e 07F11407 		add	r7, r7, #20
 2406 0032 BD46     		mov	sp, r7
 2407 0034 80BC     		pop	{r7}
 2408 0036 7047     		bx	lr
 2409              		.cfi_endproc
 2410              	.LFE141:
 2412              		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 2413              		.align	2
 2414              		.global	TIM_OC4PreloadConfig
 2415              		.thumb
 2416              		.thumb_func
 2418              	TIM_OC4PreloadConfig:
 2419              	.LFB142:
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2420              		.loc 1 1319 0
 2421              		.cfi_startproc
 2422              		@ args = 0, pretend = 0, frame = 16
 2423              		@ frame_needed = 1, uses_anonymous_args = 0
 2424              		@ link register save eliminated.
 2425 0000 80B4     		push	{r7}
 2426              	.LCFI96:
 2427              		.cfi_def_cfa_offset 4
 2428              		.cfi_offset 7, -4
 2429 0002 85B0     		sub	sp, sp, #20
 2430              	.LCFI97:
 2431              		.cfi_def_cfa_offset 24
 2432 0004 00AF     		add	r7, sp, #0
 2433              	.LCFI98:
 2434              		.cfi_def_cfa_register 7
 2435 0006 7860     		str	r0, [r7, #4]
 2436 0008 0B46     		mov	r3, r1
 2437 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2438              		.loc 1 1320 0
 2439 000c 4FF00003 		mov	r3, #0
 2440 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2441              		.loc 1 1326 0
 2442 0012 7B68     		ldr	r3, [r7, #4]
 2443 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2444 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 2445              		.loc 1 1329 0
 2446 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2447 001a 23F40063 		bic	r3, r3, #2048
 2448 001e FB81     		strh	r3, [r7, #14]	@ movhi
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 2449              		.loc 1 1332 0
 2450 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2451 0022 4FEA0323 		lsl	r3, r3, #8
 2452 0026 9AB2     		uxth	r2, r3
 2453 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2454 002a 1343     		orrs	r3, r3, r2
 2455 002c FB81     		strh	r3, [r7, #14]	@ movhi
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2456              		.loc 1 1335 0
 2457 002e 7B68     		ldr	r3, [r7, #4]
 2458 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2459 0032 9A83     		strh	r2, [r3, #28]	@ movhi
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2460              		.loc 1 1336 0
 2461 0034 07F11407 		add	r7, r7, #20
 2462 0038 BD46     		mov	sp, r7
 2463 003a 80BC     		pop	{r7}
 2464 003c 7047     		bx	lr
 2465              		.cfi_endproc
 2466              	.LFE142:
 2468 003e 00BF     		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2469              		.align	2
 2470              		.global	TIM_OC1FastConfig
 2471              		.thumb
 2472              		.thumb_func
 2474              	TIM_OC1FastConfig:
 2475              	.LFB143:
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2476              		.loc 1 1348 0
 2477              		.cfi_startproc
 2478              		@ args = 0, pretend = 0, frame = 16
 2479              		@ frame_needed = 1, uses_anonymous_args = 0
 2480              		@ link register save eliminated.
 2481 0000 80B4     		push	{r7}
 2482              	.LCFI99:
 2483              		.cfi_def_cfa_offset 4
 2484              		.cfi_offset 7, -4
 2485 0002 85B0     		sub	sp, sp, #20
 2486              	.LCFI100:
 2487              		.cfi_def_cfa_offset 24
 2488 0004 00AF     		add	r7, sp, #0
 2489              	.LCFI101:
 2490              		.cfi_def_cfa_register 7
 2491 0006 7860     		str	r0, [r7, #4]
 2492 0008 0B46     		mov	r3, r1
 2493 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2494              		.loc 1 1349 0
 2495 000c 4FF00003 		mov	r3, #0
 2496 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2497              		.loc 1 1356 0
 2498 0012 7B68     		ldr	r3, [r7, #4]
 2499 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2500 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 2501              		.loc 1 1359 0
 2502 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2503 001a 23F00403 		bic	r3, r3, #4
 2504 001e FB81     		strh	r3, [r7, #14]	@ movhi
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 2505              		.loc 1 1362 0
 2506 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2507 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2508 0024 1343     		orrs	r3, r3, r2
 2509 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2510              		.loc 1 1365 0
 2511 0028 7B68     		ldr	r3, [r7, #4]
 2512 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2513 002c 1A83     		strh	r2, [r3, #24]	@ movhi
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2514              		.loc 1 1366 0
 2515 002e 07F11407 		add	r7, r7, #20
 2516 0032 BD46     		mov	sp, r7
 2517 0034 80BC     		pop	{r7}
 2518 0036 7047     		bx	lr
 2519              		.cfi_endproc
 2520              	.LFE143:
 2522              		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2523              		.align	2
 2524              		.global	TIM_OC2FastConfig
 2525              		.thumb
 2526              		.thumb_func
 2528              	TIM_OC2FastConfig:
 2529              	.LFB144:
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2530              		.loc 1 1379 0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 16
 2533              		@ frame_needed = 1, uses_anonymous_args = 0
 2534              		@ link register save eliminated.
 2535 0000 80B4     		push	{r7}
 2536              	.LCFI102:
 2537              		.cfi_def_cfa_offset 4
 2538              		.cfi_offset 7, -4
 2539 0002 85B0     		sub	sp, sp, #20
 2540              	.LCFI103:
 2541              		.cfi_def_cfa_offset 24
 2542 0004 00AF     		add	r7, sp, #0
 2543              	.LCFI104:
 2544              		.cfi_def_cfa_register 7
 2545 0006 7860     		str	r0, [r7, #4]
 2546 0008 0B46     		mov	r3, r1
 2547 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2548              		.loc 1 1380 0
 2549 000c 4FF00003 		mov	r3, #0
 2550 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2551              		.loc 1 1387 0
 2552 0012 7B68     		ldr	r3, [r7, #4]
 2553 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2554 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 2555              		.loc 1 1390 0
 2556 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2557 001a 23F48063 		bic	r3, r3, #1024
 2558 001e FB81     		strh	r3, [r7, #14]	@ movhi
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2559              		.loc 1 1393 0
 2560 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2561 0022 4FEA0323 		lsl	r3, r3, #8
 2562 0026 9AB2     		uxth	r2, r3
 2563 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2564 002a 1343     		orrs	r3, r3, r2
 2565 002c FB81     		strh	r3, [r7, #14]	@ movhi
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2566              		.loc 1 1396 0
 2567 002e 7B68     		ldr	r3, [r7, #4]
 2568 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2569 0032 1A83     		strh	r2, [r3, #24]	@ movhi
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2570              		.loc 1 1397 0
 2571 0034 07F11407 		add	r7, r7, #20
 2572 0038 BD46     		mov	sp, r7
 2573 003a 80BC     		pop	{r7}
 2574 003c 7047     		bx	lr
 2575              		.cfi_endproc
 2576              	.LFE144:
 2578 003e 00BF     		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2579              		.align	2
 2580              		.global	TIM_OC3FastConfig
 2581              		.thumb
 2582              		.thumb_func
 2584              	TIM_OC3FastConfig:
 2585              	.LFB145:
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2586              		.loc 1 1409 0
 2587              		.cfi_startproc
 2588              		@ args = 0, pretend = 0, frame = 16
 2589              		@ frame_needed = 1, uses_anonymous_args = 0
 2590              		@ link register save eliminated.
 2591 0000 80B4     		push	{r7}
 2592              	.LCFI105:
 2593              		.cfi_def_cfa_offset 4
 2594              		.cfi_offset 7, -4
 2595 0002 85B0     		sub	sp, sp, #20
 2596              	.LCFI106:
 2597              		.cfi_def_cfa_offset 24
 2598 0004 00AF     		add	r7, sp, #0
 2599              	.LCFI107:
 2600              		.cfi_def_cfa_register 7
 2601 0006 7860     		str	r0, [r7, #4]
 2602 0008 0B46     		mov	r3, r1
 2603 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2604              		.loc 1 1410 0
 2605 000c 4FF00003 		mov	r3, #0
 2606 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2607              		.loc 1 1417 0
 2608 0012 7B68     		ldr	r3, [r7, #4]
 2609 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2610 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 2611              		.loc 1 1420 0
 2612 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2613 001a 23F00403 		bic	r3, r3, #4
 2614 001e FB81     		strh	r3, [r7, #14]	@ movhi
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2615              		.loc 1 1423 0
 2616 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2617 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2618 0024 1343     		orrs	r3, r3, r2
 2619 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2620              		.loc 1 1426 0
 2621 0028 7B68     		ldr	r3, [r7, #4]
 2622 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2623 002c 9A83     		strh	r2, [r3, #28]	@ movhi
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2624              		.loc 1 1427 0
 2625 002e 07F11407 		add	r7, r7, #20
 2626 0032 BD46     		mov	sp, r7
 2627 0034 80BC     		pop	{r7}
 2628 0036 7047     		bx	lr
 2629              		.cfi_endproc
 2630              	.LFE145:
 2632              		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2633              		.align	2
 2634              		.global	TIM_OC4FastConfig
 2635              		.thumb
 2636              		.thumb_func
 2638              	TIM_OC4FastConfig:
 2639              	.LFB146:
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2640              		.loc 1 1439 0
 2641              		.cfi_startproc
 2642              		@ args = 0, pretend = 0, frame = 16
 2643              		@ frame_needed = 1, uses_anonymous_args = 0
 2644              		@ link register save eliminated.
 2645 0000 80B4     		push	{r7}
 2646              	.LCFI108:
 2647              		.cfi_def_cfa_offset 4
 2648              		.cfi_offset 7, -4
 2649 0002 85B0     		sub	sp, sp, #20
 2650              	.LCFI109:
 2651              		.cfi_def_cfa_offset 24
 2652 0004 00AF     		add	r7, sp, #0
 2653              	.LCFI110:
 2654              		.cfi_def_cfa_register 7
 2655 0006 7860     		str	r0, [r7, #4]
 2656 0008 0B46     		mov	r3, r1
 2657 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2658              		.loc 1 1440 0
 2659 000c 4FF00003 		mov	r3, #0
 2660 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2661              		.loc 1 1447 0
 2662 0012 7B68     		ldr	r3, [r7, #4]
 2663 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2664 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 2665              		.loc 1 1450 0
 2666 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2667 001a 23F48063 		bic	r3, r3, #1024
 2668 001e FB81     		strh	r3, [r7, #14]	@ movhi
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2669              		.loc 1 1453 0
 2670 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2671 0022 4FEA0323 		lsl	r3, r3, #8
 2672 0026 9AB2     		uxth	r2, r3
 2673 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2674 002a 1343     		orrs	r3, r3, r2
 2675 002c FB81     		strh	r3, [r7, #14]	@ movhi
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2676              		.loc 1 1456 0
 2677 002e 7B68     		ldr	r3, [r7, #4]
 2678 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2679 0032 9A83     		strh	r2, [r3, #28]	@ movhi
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2680              		.loc 1 1457 0
 2681 0034 07F11407 		add	r7, r7, #20
 2682 0038 BD46     		mov	sp, r7
 2683 003a 80BC     		pop	{r7}
 2684 003c 7047     		bx	lr
 2685              		.cfi_endproc
 2686              	.LFE146:
 2688 003e 00BF     		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2689              		.align	2
 2690              		.global	TIM_ClearOC1Ref
 2691              		.thumb
 2692              		.thumb_func
 2694              	TIM_ClearOC1Ref:
 2695              	.LFB147:
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2696              		.loc 1 1469 0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 16
 2699              		@ frame_needed = 1, uses_anonymous_args = 0
 2700              		@ link register save eliminated.
 2701 0000 80B4     		push	{r7}
 2702              	.LCFI111:
 2703              		.cfi_def_cfa_offset 4
 2704              		.cfi_offset 7, -4
 2705 0002 85B0     		sub	sp, sp, #20
 2706              	.LCFI112:
 2707              		.cfi_def_cfa_offset 24
 2708 0004 00AF     		add	r7, sp, #0
 2709              	.LCFI113:
 2710              		.cfi_def_cfa_register 7
 2711 0006 7860     		str	r0, [r7, #4]
 2712 0008 0B46     		mov	r3, r1
 2713 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2714              		.loc 1 1470 0
 2715 000c 4FF00003 		mov	r3, #0
 2716 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2717              		.loc 1 1476 0
 2718 0012 7B68     		ldr	r3, [r7, #4]
 2719 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2720 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 2721              		.loc 1 1479 0
 2722 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2723 001a 23F08003 		bic	r3, r3, #128
 2724 001e FB81     		strh	r3, [r7, #14]	@ movhi
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2725              		.loc 1 1482 0
 2726 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2727 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2728 0024 1343     		orrs	r3, r3, r2
 2729 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2730              		.loc 1 1485 0
 2731 0028 7B68     		ldr	r3, [r7, #4]
 2732 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2733 002c 1A83     		strh	r2, [r3, #24]	@ movhi
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2734              		.loc 1 1486 0
 2735 002e 07F11407 		add	r7, r7, #20
 2736 0032 BD46     		mov	sp, r7
 2737 0034 80BC     		pop	{r7}
 2738 0036 7047     		bx	lr
 2739              		.cfi_endproc
 2740              	.LFE147:
 2742              		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2743              		.align	2
 2744              		.global	TIM_ClearOC2Ref
 2745              		.thumb
 2746              		.thumb_func
 2748              	TIM_ClearOC2Ref:
 2749              	.LFB148:
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2750              		.loc 1 1499 0
 2751              		.cfi_startproc
 2752              		@ args = 0, pretend = 0, frame = 16
 2753              		@ frame_needed = 1, uses_anonymous_args = 0
 2754              		@ link register save eliminated.
 2755 0000 80B4     		push	{r7}
 2756              	.LCFI114:
 2757              		.cfi_def_cfa_offset 4
 2758              		.cfi_offset 7, -4
 2759 0002 85B0     		sub	sp, sp, #20
 2760              	.LCFI115:
 2761              		.cfi_def_cfa_offset 24
 2762 0004 00AF     		add	r7, sp, #0
 2763              	.LCFI116:
 2764              		.cfi_def_cfa_register 7
 2765 0006 7860     		str	r0, [r7, #4]
 2766 0008 0B46     		mov	r3, r1
 2767 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2768              		.loc 1 1500 0
 2769 000c 4FF00003 		mov	r3, #0
 2770 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2771              		.loc 1 1506 0
 2772 0012 7B68     		ldr	r3, [r7, #4]
 2773 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2774 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2775              		.loc 1 1509 0
 2776 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2777 001a 4FEA4343 		lsl	r3, r3, #17
 2778 001e 4FEA5343 		lsr	r3, r3, #17
 2779 0022 FB81     		strh	r3, [r7, #14]	@ movhi
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2780              		.loc 1 1512 0
 2781 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2782 0026 4FEA0323 		lsl	r3, r3, #8
 2783 002a 9AB2     		uxth	r2, r3
 2784 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2785 002e 1343     		orrs	r3, r3, r2
 2786 0030 FB81     		strh	r3, [r7, #14]	@ movhi
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2787              		.loc 1 1515 0
 2788 0032 7B68     		ldr	r3, [r7, #4]
 2789 0034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2790 0036 1A83     		strh	r2, [r3, #24]	@ movhi
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2791              		.loc 1 1516 0
 2792 0038 07F11407 		add	r7, r7, #20
 2793 003c BD46     		mov	sp, r7
 2794 003e 80BC     		pop	{r7}
 2795 0040 7047     		bx	lr
 2796              		.cfi_endproc
 2797              	.LFE148:
 2799 0042 00BF     		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2800              		.align	2
 2801              		.global	TIM_ClearOC3Ref
 2802              		.thumb
 2803              		.thumb_func
 2805              	TIM_ClearOC3Ref:
 2806              	.LFB149:
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2807              		.loc 1 1528 0
 2808              		.cfi_startproc
 2809              		@ args = 0, pretend = 0, frame = 16
 2810              		@ frame_needed = 1, uses_anonymous_args = 0
 2811              		@ link register save eliminated.
 2812 0000 80B4     		push	{r7}
 2813              	.LCFI117:
 2814              		.cfi_def_cfa_offset 4
 2815              		.cfi_offset 7, -4
 2816 0002 85B0     		sub	sp, sp, #20
 2817              	.LCFI118:
 2818              		.cfi_def_cfa_offset 24
 2819 0004 00AF     		add	r7, sp, #0
 2820              	.LCFI119:
 2821              		.cfi_def_cfa_register 7
 2822 0006 7860     		str	r0, [r7, #4]
 2823 0008 0B46     		mov	r3, r1
 2824 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2825              		.loc 1 1529 0
 2826 000c 4FF00003 		mov	r3, #0
 2827 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2828              		.loc 1 1535 0
 2829 0012 7B68     		ldr	r3, [r7, #4]
 2830 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2831 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2832              		.loc 1 1538 0
 2833 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2834 001a 23F08003 		bic	r3, r3, #128
 2835 001e FB81     		strh	r3, [r7, #14]	@ movhi
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2836              		.loc 1 1541 0
 2837 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2838 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2839 0024 1343     		orrs	r3, r3, r2
 2840 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2841              		.loc 1 1544 0
 2842 0028 7B68     		ldr	r3, [r7, #4]
 2843 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2844 002c 9A83     		strh	r2, [r3, #28]	@ movhi
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2845              		.loc 1 1545 0
 2846 002e 07F11407 		add	r7, r7, #20
 2847 0032 BD46     		mov	sp, r7
 2848 0034 80BC     		pop	{r7}
 2849 0036 7047     		bx	lr
 2850              		.cfi_endproc
 2851              	.LFE149:
 2853              		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2854              		.align	2
 2855              		.global	TIM_ClearOC4Ref
 2856              		.thumb
 2857              		.thumb_func
 2859              	TIM_ClearOC4Ref:
 2860              	.LFB150:
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2861              		.loc 1 1557 0
 2862              		.cfi_startproc
 2863              		@ args = 0, pretend = 0, frame = 16
 2864              		@ frame_needed = 1, uses_anonymous_args = 0
 2865              		@ link register save eliminated.
 2866 0000 80B4     		push	{r7}
 2867              	.LCFI120:
 2868              		.cfi_def_cfa_offset 4
 2869              		.cfi_offset 7, -4
 2870 0002 85B0     		sub	sp, sp, #20
 2871              	.LCFI121:
 2872              		.cfi_def_cfa_offset 24
 2873 0004 00AF     		add	r7, sp, #0
 2874              	.LCFI122:
 2875              		.cfi_def_cfa_register 7
 2876 0006 7860     		str	r0, [r7, #4]
 2877 0008 0B46     		mov	r3, r1
 2878 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2879              		.loc 1 1558 0
 2880 000c 4FF00003 		mov	r3, #0
 2881 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2882              		.loc 1 1564 0
 2883 0012 7B68     		ldr	r3, [r7, #4]
 2884 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2885 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2886              		.loc 1 1567 0
 2887 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2888 001a 4FEA4343 		lsl	r3, r3, #17
 2889 001e 4FEA5343 		lsr	r3, r3, #17
 2890 0022 FB81     		strh	r3, [r7, #14]	@ movhi
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2891              		.loc 1 1570 0
 2892 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2893 0026 4FEA0323 		lsl	r3, r3, #8
 2894 002a 9AB2     		uxth	r2, r3
 2895 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2896 002e 1343     		orrs	r3, r3, r2
 2897 0030 FB81     		strh	r3, [r7, #14]	@ movhi
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2898              		.loc 1 1573 0
 2899 0032 7B68     		ldr	r3, [r7, #4]
 2900 0034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2901 0036 9A83     		strh	r2, [r3, #28]	@ movhi
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2902              		.loc 1 1574 0
 2903 0038 07F11407 		add	r7, r7, #20
 2904 003c BD46     		mov	sp, r7
 2905 003e 80BC     		pop	{r7}
 2906 0040 7047     		bx	lr
 2907              		.cfi_endproc
 2908              	.LFE150:
 2910 0042 00BF     		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2911              		.align	2
 2912              		.global	TIM_OC1PolarityConfig
 2913              		.thumb
 2914              		.thumb_func
 2916              	TIM_OC1PolarityConfig:
 2917              	.LFB151:
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2918              		.loc 1 1586 0
 2919              		.cfi_startproc
 2920              		@ args = 0, pretend = 0, frame = 16
 2921              		@ frame_needed = 1, uses_anonymous_args = 0
 2922              		@ link register save eliminated.
 2923 0000 80B4     		push	{r7}
 2924              	.LCFI123:
 2925              		.cfi_def_cfa_offset 4
 2926              		.cfi_offset 7, -4
 2927 0002 85B0     		sub	sp, sp, #20
 2928              	.LCFI124:
 2929              		.cfi_def_cfa_offset 24
 2930 0004 00AF     		add	r7, sp, #0
 2931              	.LCFI125:
 2932              		.cfi_def_cfa_register 7
 2933 0006 7860     		str	r0, [r7, #4]
 2934 0008 0B46     		mov	r3, r1
 2935 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2936              		.loc 1 1587 0
 2937 000c 4FF00003 		mov	r3, #0
 2938 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2939              		.loc 1 1593 0
 2940 0012 7B68     		ldr	r3, [r7, #4]
 2941 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2942 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2943              		.loc 1 1596 0
 2944 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2945 001a 23F00203 		bic	r3, r3, #2
 2946 001e FB81     		strh	r3, [r7, #14]	@ movhi
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2947              		.loc 1 1597 0
 2948 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2949 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2950 0024 1343     		orrs	r3, r3, r2
 2951 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2952              		.loc 1 1600 0
 2953 0028 7B68     		ldr	r3, [r7, #4]
 2954 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2955 002c 1A84     		strh	r2, [r3, #32]	@ movhi
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2956              		.loc 1 1601 0
 2957 002e 07F11407 		add	r7, r7, #20
 2958 0032 BD46     		mov	sp, r7
 2959 0034 80BC     		pop	{r7}
 2960 0036 7047     		bx	lr
 2961              		.cfi_endproc
 2962              	.LFE151:
 2964              		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2965              		.align	2
 2966              		.global	TIM_OC1NPolarityConfig
 2967              		.thumb
 2968              		.thumb_func
 2970              	TIM_OC1NPolarityConfig:
 2971              	.LFB152:
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2972              		.loc 1 1613 0
 2973              		.cfi_startproc
 2974              		@ args = 0, pretend = 0, frame = 16
 2975              		@ frame_needed = 1, uses_anonymous_args = 0
 2976              		@ link register save eliminated.
 2977 0000 80B4     		push	{r7}
 2978              	.LCFI126:
 2979              		.cfi_def_cfa_offset 4
 2980              		.cfi_offset 7, -4
 2981 0002 85B0     		sub	sp, sp, #20
 2982              	.LCFI127:
 2983              		.cfi_def_cfa_offset 24
 2984 0004 00AF     		add	r7, sp, #0
 2985              	.LCFI128:
 2986              		.cfi_def_cfa_register 7
 2987 0006 7860     		str	r0, [r7, #4]
 2988 0008 0B46     		mov	r3, r1
 2989 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2990              		.loc 1 1614 0
 2991 000c 4FF00003 		mov	r3, #0
 2992 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2993              		.loc 1 1619 0
 2994 0012 7B68     		ldr	r3, [r7, #4]
 2995 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2996 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 2997              		.loc 1 1622 0
 2998 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2999 001a 23F00803 		bic	r3, r3, #8
 3000 001e FB81     		strh	r3, [r7, #14]	@ movhi
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 3001              		.loc 1 1623 0
 3002 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3003 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3004 0024 1343     		orrs	r3, r3, r2
 3005 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3006              		.loc 1 1626 0
 3007 0028 7B68     		ldr	r3, [r7, #4]
 3008 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 3009 002c 1A84     		strh	r2, [r3, #32]	@ movhi
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3010              		.loc 1 1627 0
 3011 002e 07F11407 		add	r7, r7, #20
 3012 0032 BD46     		mov	sp, r7
 3013 0034 80BC     		pop	{r7}
 3014 0036 7047     		bx	lr
 3015              		.cfi_endproc
 3016              	.LFE152:
 3018              		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 3019              		.align	2
 3020              		.global	TIM_OC2PolarityConfig
 3021              		.thumb
 3022              		.thumb_func
 3024              	TIM_OC2PolarityConfig:
 3025              	.LFB153:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3026              		.loc 1 1640 0
 3027              		.cfi_startproc
 3028              		@ args = 0, pretend = 0, frame = 16
 3029              		@ frame_needed = 1, uses_anonymous_args = 0
 3030              		@ link register save eliminated.
 3031 0000 80B4     		push	{r7}
 3032              	.LCFI129:
 3033              		.cfi_def_cfa_offset 4
 3034              		.cfi_offset 7, -4
 3035 0002 85B0     		sub	sp, sp, #20
 3036              	.LCFI130:
 3037              		.cfi_def_cfa_offset 24
 3038 0004 00AF     		add	r7, sp, #0
 3039              	.LCFI131:
 3040              		.cfi_def_cfa_register 7
 3041 0006 7860     		str	r0, [r7, #4]
 3042 0008 0B46     		mov	r3, r1
 3043 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3044              		.loc 1 1641 0
 3045 000c 4FF00003 		mov	r3, #0
 3046 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3047              		.loc 1 1647 0
 3048 0012 7B68     		ldr	r3, [r7, #4]
 3049 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3050 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 3051              		.loc 1 1650 0
 3052 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3053 001a 23F02003 		bic	r3, r3, #32
 3054 001e FB81     		strh	r3, [r7, #14]	@ movhi
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3055              		.loc 1 1651 0
 3056 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3057 0022 4FEA0313 		lsl	r3, r3, #4
 3058 0026 9AB2     		uxth	r2, r3
 3059 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3060 002a 1343     		orrs	r3, r3, r2
 3061 002c FB81     		strh	r3, [r7, #14]	@ movhi
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3062              		.loc 1 1654 0
 3063 002e 7B68     		ldr	r3, [r7, #4]
 3064 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3065 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3066              		.loc 1 1655 0
 3067 0034 07F11407 		add	r7, r7, #20
 3068 0038 BD46     		mov	sp, r7
 3069 003a 80BC     		pop	{r7}
 3070 003c 7047     		bx	lr
 3071              		.cfi_endproc
 3072              	.LFE153:
 3074 003e 00BF     		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 3075              		.align	2
 3076              		.global	TIM_OC2NPolarityConfig
 3077              		.thumb
 3078              		.thumb_func
 3080              	TIM_OC2NPolarityConfig:
 3081              	.LFB154:
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3082              		.loc 1 1667 0
 3083              		.cfi_startproc
 3084              		@ args = 0, pretend = 0, frame = 16
 3085              		@ frame_needed = 1, uses_anonymous_args = 0
 3086              		@ link register save eliminated.
 3087 0000 80B4     		push	{r7}
 3088              	.LCFI132:
 3089              		.cfi_def_cfa_offset 4
 3090              		.cfi_offset 7, -4
 3091 0002 85B0     		sub	sp, sp, #20
 3092              	.LCFI133:
 3093              		.cfi_def_cfa_offset 24
 3094 0004 00AF     		add	r7, sp, #0
 3095              	.LCFI134:
 3096              		.cfi_def_cfa_register 7
 3097 0006 7860     		str	r0, [r7, #4]
 3098 0008 0B46     		mov	r3, r1
 3099 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3100              		.loc 1 1668 0
 3101 000c 4FF00003 		mov	r3, #0
 3102 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3103              		.loc 1 1674 0
 3104 0012 7B68     		ldr	r3, [r7, #4]
 3105 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3106 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 3107              		.loc 1 1677 0
 3108 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3109 001a 23F08003 		bic	r3, r3, #128
 3110 001e FB81     		strh	r3, [r7, #14]	@ movhi
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3111              		.loc 1 1678 0
 3112 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3113 0022 4FEA0313 		lsl	r3, r3, #4
 3114 0026 9AB2     		uxth	r2, r3
 3115 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3116 002a 1343     		orrs	r3, r3, r2
 3117 002c FB81     		strh	r3, [r7, #14]	@ movhi
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3118              		.loc 1 1681 0
 3119 002e 7B68     		ldr	r3, [r7, #4]
 3120 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3121 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3122              		.loc 1 1682 0
 3123 0034 07F11407 		add	r7, r7, #20
 3124 0038 BD46     		mov	sp, r7
 3125 003a 80BC     		pop	{r7}
 3126 003c 7047     		bx	lr
 3127              		.cfi_endproc
 3128              	.LFE154:
 3130 003e 00BF     		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 3131              		.align	2
 3132              		.global	TIM_OC3PolarityConfig
 3133              		.thumb
 3134              		.thumb_func
 3136              	TIM_OC3PolarityConfig:
 3137              	.LFB155:
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3138              		.loc 1 1694 0
 3139              		.cfi_startproc
 3140              		@ args = 0, pretend = 0, frame = 16
 3141              		@ frame_needed = 1, uses_anonymous_args = 0
 3142              		@ link register save eliminated.
 3143 0000 80B4     		push	{r7}
 3144              	.LCFI135:
 3145              		.cfi_def_cfa_offset 4
 3146              		.cfi_offset 7, -4
 3147 0002 85B0     		sub	sp, sp, #20
 3148              	.LCFI136:
 3149              		.cfi_def_cfa_offset 24
 3150 0004 00AF     		add	r7, sp, #0
 3151              	.LCFI137:
 3152              		.cfi_def_cfa_register 7
 3153 0006 7860     		str	r0, [r7, #4]
 3154 0008 0B46     		mov	r3, r1
 3155 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3156              		.loc 1 1695 0
 3157 000c 4FF00003 		mov	r3, #0
 3158 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3159              		.loc 1 1701 0
 3160 0012 7B68     		ldr	r3, [r7, #4]
 3161 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3162 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 3163              		.loc 1 1704 0
 3164 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3165 001a 23F40073 		bic	r3, r3, #512
 3166 001e FB81     		strh	r3, [r7, #14]	@ movhi
1705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3167              		.loc 1 1705 0
 3168 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3169 0022 4FEA0323 		lsl	r3, r3, #8
 3170 0026 9AB2     		uxth	r2, r3
 3171 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3172 002a 1343     		orrs	r3, r3, r2
 3173 002c FB81     		strh	r3, [r7, #14]	@ movhi
1706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3174              		.loc 1 1708 0
 3175 002e 7B68     		ldr	r3, [r7, #4]
 3176 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3177 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3178              		.loc 1 1709 0
 3179 0034 07F11407 		add	r7, r7, #20
 3180 0038 BD46     		mov	sp, r7
 3181 003a 80BC     		pop	{r7}
 3182 003c 7047     		bx	lr
 3183              		.cfi_endproc
 3184              	.LFE155:
 3186 003e 00BF     		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 3187              		.align	2
 3188              		.global	TIM_OC3NPolarityConfig
 3189              		.thumb
 3190              		.thumb_func
 3192              	TIM_OC3NPolarityConfig:
 3193              	.LFB156:
1710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3194              		.loc 1 1721 0
 3195              		.cfi_startproc
 3196              		@ args = 0, pretend = 0, frame = 16
 3197              		@ frame_needed = 1, uses_anonymous_args = 0
 3198              		@ link register save eliminated.
 3199 0000 80B4     		push	{r7}
 3200              	.LCFI138:
 3201              		.cfi_def_cfa_offset 4
 3202              		.cfi_offset 7, -4
 3203 0002 85B0     		sub	sp, sp, #20
 3204              	.LCFI139:
 3205              		.cfi_def_cfa_offset 24
 3206 0004 00AF     		add	r7, sp, #0
 3207              	.LCFI140:
 3208              		.cfi_def_cfa_register 7
 3209 0006 7860     		str	r0, [r7, #4]
 3210 0008 0B46     		mov	r3, r1
 3211 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3212              		.loc 1 1722 0
 3213 000c 4FF00003 		mov	r3, #0
 3214 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3215              		.loc 1 1728 0
 3216 0012 7B68     		ldr	r3, [r7, #4]
 3217 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3218 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 3219              		.loc 1 1731 0
 3220 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3221 001a 23F40063 		bic	r3, r3, #2048
 3222 001e FB81     		strh	r3, [r7, #14]	@ movhi
1732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3223              		.loc 1 1732 0
 3224 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3225 0022 4FEA0323 		lsl	r3, r3, #8
 3226 0026 9AB2     		uxth	r2, r3
 3227 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3228 002a 1343     		orrs	r3, r3, r2
 3229 002c FB81     		strh	r3, [r7, #14]	@ movhi
1733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3230              		.loc 1 1735 0
 3231 002e 7B68     		ldr	r3, [r7, #4]
 3232 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3233 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3234              		.loc 1 1736 0
 3235 0034 07F11407 		add	r7, r7, #20
 3236 0038 BD46     		mov	sp, r7
 3237 003a 80BC     		pop	{r7}
 3238 003c 7047     		bx	lr
 3239              		.cfi_endproc
 3240              	.LFE156:
 3242 003e 00BF     		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 3243              		.align	2
 3244              		.global	TIM_OC4PolarityConfig
 3245              		.thumb
 3246              		.thumb_func
 3248              	TIM_OC4PolarityConfig:
 3249              	.LFB157:
1737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3250              		.loc 1 1748 0
 3251              		.cfi_startproc
 3252              		@ args = 0, pretend = 0, frame = 16
 3253              		@ frame_needed = 1, uses_anonymous_args = 0
 3254              		@ link register save eliminated.
 3255 0000 80B4     		push	{r7}
 3256              	.LCFI141:
 3257              		.cfi_def_cfa_offset 4
 3258              		.cfi_offset 7, -4
 3259 0002 85B0     		sub	sp, sp, #20
 3260              	.LCFI142:
 3261              		.cfi_def_cfa_offset 24
 3262 0004 00AF     		add	r7, sp, #0
 3263              	.LCFI143:
 3264              		.cfi_def_cfa_register 7
 3265 0006 7860     		str	r0, [r7, #4]
 3266 0008 0B46     		mov	r3, r1
 3267 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3268              		.loc 1 1749 0
 3269 000c 4FF00003 		mov	r3, #0
 3270 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3271              		.loc 1 1755 0
 3272 0012 7B68     		ldr	r3, [r7, #4]
 3273 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3274 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 3275              		.loc 1 1758 0
 3276 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3277 001a 23F40053 		bic	r3, r3, #8192
 3278 001e FB81     		strh	r3, [r7, #14]	@ movhi
1759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3279              		.loc 1 1759 0
 3280 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3281 0022 4FEA0333 		lsl	r3, r3, #12
 3282 0026 9AB2     		uxth	r2, r3
 3283 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3284 002a 1343     		orrs	r3, r3, r2
 3285 002c FB81     		strh	r3, [r7, #14]	@ movhi
1760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3286              		.loc 1 1762 0
 3287 002e 7B68     		ldr	r3, [r7, #4]
 3288 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3289 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3290              		.loc 1 1763 0
 3291 0034 07F11407 		add	r7, r7, #20
 3292 0038 BD46     		mov	sp, r7
 3293 003a 80BC     		pop	{r7}
 3294 003c 7047     		bx	lr
 3295              		.cfi_endproc
 3296              	.LFE157:
 3298 003e 00BF     		.section	.text.TIM_CCxCmd,"ax",%progbits
 3299              		.align	2
 3300              		.global	TIM_CCxCmd
 3301              		.thumb
 3302              		.thumb_func
 3304              	TIM_CCxCmd:
 3305              	.LFB158:
1764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3306              		.loc 1 1779 0
 3307              		.cfi_startproc
 3308              		@ args = 0, pretend = 0, frame = 16
 3309              		@ frame_needed = 1, uses_anonymous_args = 0
 3310              		@ link register save eliminated.
 3311 0000 80B4     		push	{r7}
 3312              	.LCFI144:
 3313              		.cfi_def_cfa_offset 4
 3314              		.cfi_offset 7, -4
 3315 0002 85B0     		sub	sp, sp, #20
 3316              	.LCFI145:
 3317              		.cfi_def_cfa_offset 24
 3318 0004 00AF     		add	r7, sp, #0
 3319              	.LCFI146:
 3320              		.cfi_def_cfa_register 7
 3321 0006 7860     		str	r0, [r7, #4]
 3322 0008 1346     		mov	r3, r2
 3323 000a 0A46     		mov	r2, r1	@ movhi
 3324 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3325 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3326              		.loc 1 1780 0
 3327 0010 4FF00003 		mov	r3, #0
 3328 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 3329              		.loc 1 1787 0
 3330 0016 7B88     		ldrh	r3, [r7, #2]
 3331 0018 4FF00102 		mov	r2, #1
 3332 001c 02FA03F3 		lsl	r3, r2, r3
 3333 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 3334              		.loc 1 1790 0
 3335 0022 7B68     		ldr	r3, [r7, #4]
 3336 0024 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3337 0026 9AB2     		uxth	r2, r3
 3338 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3339 002a 6FEA0303 		mvn	r3, r3
 3340 002e 9BB2     		uxth	r3, r3
 3341 0030 1340     		ands	r3, r3, r2
 3342 0032 9AB2     		uxth	r2, r3
 3343 0034 7B68     		ldr	r3, [r7, #4]
 3344 0036 1A84     		strh	r2, [r3, #32]	@ movhi
1791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 3345              		.loc 1 1793 0
 3346 0038 7B68     		ldr	r3, [r7, #4]
 3347 003a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3348 003c 9AB2     		uxth	r2, r3
 3349 003e 3988     		ldrh	r1, [r7, #0]
 3350 0040 7B88     		ldrh	r3, [r7, #2]
 3351 0042 01FA03F3 		lsl	r3, r1, r3
 3352 0046 9BB2     		uxth	r3, r3
 3353 0048 1343     		orrs	r3, r3, r2
 3354 004a 9AB2     		uxth	r2, r3
 3355 004c 7B68     		ldr	r3, [r7, #4]
 3356 004e 1A84     		strh	r2, [r3, #32]	@ movhi
1794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3357              		.loc 1 1794 0
 3358 0050 07F11407 		add	r7, r7, #20
 3359 0054 BD46     		mov	sp, r7
 3360 0056 80BC     		pop	{r7}
 3361 0058 7047     		bx	lr
 3362              		.cfi_endproc
 3363              	.LFE158:
 3365 005a 00BF     		.section	.text.TIM_CCxNCmd,"ax",%progbits
 3366              		.align	2
 3367              		.global	TIM_CCxNCmd
 3368              		.thumb
 3369              		.thumb_func
 3371              	TIM_CCxNCmd:
 3372              	.LFB159:
1795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3373              		.loc 1 1809 0
 3374              		.cfi_startproc
 3375              		@ args = 0, pretend = 0, frame = 16
 3376              		@ frame_needed = 1, uses_anonymous_args = 0
 3377              		@ link register save eliminated.
 3378 0000 80B4     		push	{r7}
 3379              	.LCFI147:
 3380              		.cfi_def_cfa_offset 4
 3381              		.cfi_offset 7, -4
 3382 0002 85B0     		sub	sp, sp, #20
 3383              	.LCFI148:
 3384              		.cfi_def_cfa_offset 24
 3385 0004 00AF     		add	r7, sp, #0
 3386              	.LCFI149:
 3387              		.cfi_def_cfa_register 7
 3388 0006 7860     		str	r0, [r7, #4]
 3389 0008 1346     		mov	r3, r2
 3390 000a 0A46     		mov	r2, r1	@ movhi
 3391 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3392 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3393              		.loc 1 1810 0
 3394 0010 4FF00003 		mov	r3, #0
 3395 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 3396              		.loc 1 1817 0
 3397 0016 7B88     		ldrh	r3, [r7, #2]
 3398 0018 4FF00402 		mov	r2, #4
 3399 001c 02FA03F3 		lsl	r3, r2, r3
 3400 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 3401              		.loc 1 1820 0
 3402 0022 7B68     		ldr	r3, [r7, #4]
 3403 0024 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3404 0026 9AB2     		uxth	r2, r3
 3405 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3406 002a 6FEA0303 		mvn	r3, r3
 3407 002e 9BB2     		uxth	r3, r3
 3408 0030 1340     		ands	r3, r3, r2
 3409 0032 9AB2     		uxth	r2, r3
 3410 0034 7B68     		ldr	r3, [r7, #4]
 3411 0036 1A84     		strh	r2, [r3, #32]	@ movhi
1821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 3412              		.loc 1 1823 0
 3413 0038 7B68     		ldr	r3, [r7, #4]
 3414 003a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3415 003c 9AB2     		uxth	r2, r3
 3416 003e 3988     		ldrh	r1, [r7, #0]
 3417 0040 7B88     		ldrh	r3, [r7, #2]
 3418 0042 01FA03F3 		lsl	r3, r1, r3
 3419 0046 9BB2     		uxth	r3, r3
 3420 0048 1343     		orrs	r3, r3, r2
 3421 004a 9AB2     		uxth	r2, r3
 3422 004c 7B68     		ldr	r3, [r7, #4]
 3423 004e 1A84     		strh	r2, [r3, #32]	@ movhi
1824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3424              		.loc 1 1824 0
 3425 0050 07F11407 		add	r7, r7, #20
 3426 0054 BD46     		mov	sp, r7
 3427 0056 80BC     		pop	{r7}
 3428 0058 7047     		bx	lr
 3429              		.cfi_endproc
 3430              	.LFE159:
 3432 005a 00BF     		.section	.text.TIM_ICInit,"ax",%progbits
 3433              		.align	2
 3434              		.global	TIM_ICInit
 3435              		.thumb
 3436              		.thumb_func
 3438              	TIM_ICInit:
 3439              	.LFB160:
1825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3440              		.loc 1 1891 0
 3441              		.cfi_startproc
 3442              		@ args = 0, pretend = 0, frame = 8
 3443              		@ frame_needed = 1, uses_anonymous_args = 0
 3444 0000 80B5     		push	{r7, lr}
 3445              	.LCFI150:
 3446              		.cfi_def_cfa_offset 8
 3447              		.cfi_offset 14, -4
 3448              		.cfi_offset 7, -8
 3449 0002 82B0     		sub	sp, sp, #8
 3450              	.LCFI151:
 3451              		.cfi_def_cfa_offset 16
 3452 0004 00AF     		add	r7, sp, #0
 3453              	.LCFI152:
 3454              		.cfi_def_cfa_register 7
 3455 0006 7860     		str	r0, [r7, #4]
 3456 0008 3960     		str	r1, [r7, #0]
1892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3457              		.loc 1 1899 0
 3458 000a 3B68     		ldr	r3, [r7, #0]
 3459 000c 1B88     		ldrh	r3, [r3, #0]
 3460 000e 002B     		cmp	r3, #0
 3461 0010 0FD1     		bne	.L90
1900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3462              		.loc 1 1902 0
 3463 0012 3B68     		ldr	r3, [r7, #0]
 3464 0014 5988     		ldrh	r1, [r3, #2]
1903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3465              		.loc 1 1903 0
 3466 0016 3B68     		ldr	r3, [r7, #0]
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3467              		.loc 1 1902 0
 3468 0018 9A88     		ldrh	r2, [r3, #4]
1904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3469              		.loc 1 1904 0
 3470 001a 3B68     		ldr	r3, [r7, #0]
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3471              		.loc 1 1902 0
 3472 001c 1B89     		ldrh	r3, [r3, #8]
 3473 001e 7868     		ldr	r0, [r7, #4]
 3474 0020 FFF7FEFF 		bl	TI1_Config
1905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3475              		.loc 1 1906 0
 3476 0024 3B68     		ldr	r3, [r7, #0]
 3477 0026 DB88     		ldrh	r3, [r3, #6]
 3478 0028 7868     		ldr	r0, [r7, #4]
 3479 002a 1946     		mov	r1, r3
 3480 002c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3481 0030 36E0     		b	.L89
 3482              	.L90:
1907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 3483              		.loc 1 1908 0
 3484 0032 3B68     		ldr	r3, [r7, #0]
 3485 0034 1B88     		ldrh	r3, [r3, #0]
 3486 0036 042B     		cmp	r3, #4
 3487 0038 0FD1     		bne	.L92
1909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3488              		.loc 1 1911 0
 3489 003a 3B68     		ldr	r3, [r7, #0]
 3490 003c 5988     		ldrh	r1, [r3, #2]
1912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3491              		.loc 1 1912 0
 3492 003e 3B68     		ldr	r3, [r7, #0]
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3493              		.loc 1 1911 0
 3494 0040 9A88     		ldrh	r2, [r3, #4]
1913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3495              		.loc 1 1913 0
 3496 0042 3B68     		ldr	r3, [r7, #0]
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3497              		.loc 1 1911 0
 3498 0044 1B89     		ldrh	r3, [r3, #8]
 3499 0046 7868     		ldr	r0, [r7, #4]
 3500 0048 FFF7FEFF 		bl	TI2_Config
1914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3501              		.loc 1 1915 0
 3502 004c 3B68     		ldr	r3, [r7, #0]
 3503 004e DB88     		ldrh	r3, [r3, #6]
 3504 0050 7868     		ldr	r0, [r7, #4]
 3505 0052 1946     		mov	r1, r3
 3506 0054 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3507 0058 22E0     		b	.L89
 3508              	.L92:
1916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3509              		.loc 1 1917 0
 3510 005a 3B68     		ldr	r3, [r7, #0]
 3511 005c 1B88     		ldrh	r3, [r3, #0]
 3512 005e 082B     		cmp	r3, #8
 3513 0060 0FD1     		bne	.L93
1918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3514              		.loc 1 1920 0
 3515 0062 3B68     		ldr	r3, [r7, #0]
 3516 0064 5988     		ldrh	r1, [r3, #2]
1921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3517              		.loc 1 1921 0
 3518 0066 3B68     		ldr	r3, [r7, #0]
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3519              		.loc 1 1920 0
 3520 0068 9A88     		ldrh	r2, [r3, #4]
1922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3521              		.loc 1 1922 0
 3522 006a 3B68     		ldr	r3, [r7, #0]
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3523              		.loc 1 1920 0
 3524 006c 1B89     		ldrh	r3, [r3, #8]
 3525 006e 7868     		ldr	r0, [r7, #4]
 3526 0070 FFF7FEFF 		bl	TI3_Config
1923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3527              		.loc 1 1924 0
 3528 0074 3B68     		ldr	r3, [r7, #0]
 3529 0076 DB88     		ldrh	r3, [r3, #6]
 3530 0078 7868     		ldr	r0, [r7, #4]
 3531 007a 1946     		mov	r1, r3
 3532 007c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3533 0080 0EE0     		b	.L89
 3534              	.L93:
1925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3535              		.loc 1 1929 0
 3536 0082 3B68     		ldr	r3, [r7, #0]
 3537 0084 5988     		ldrh	r1, [r3, #2]
1930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3538              		.loc 1 1930 0
 3539 0086 3B68     		ldr	r3, [r7, #0]
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3540              		.loc 1 1929 0
 3541 0088 9A88     		ldrh	r2, [r3, #4]
1931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3542              		.loc 1 1931 0
 3543 008a 3B68     		ldr	r3, [r7, #0]
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3544              		.loc 1 1929 0
 3545 008c 1B89     		ldrh	r3, [r3, #8]
 3546 008e 7868     		ldr	r0, [r7, #4]
 3547 0090 FFF7FEFF 		bl	TI4_Config
1932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3548              		.loc 1 1933 0
 3549 0094 3B68     		ldr	r3, [r7, #0]
 3550 0096 DB88     		ldrh	r3, [r3, #6]
 3551 0098 7868     		ldr	r0, [r7, #4]
 3552 009a 1946     		mov	r1, r3
 3553 009c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3554              	.L89:
1934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3555              		.loc 1 1935 0
 3556 00a0 07F10807 		add	r7, r7, #8
 3557 00a4 BD46     		mov	sp, r7
 3558 00a6 80BD     		pop	{r7, pc}
 3559              		.cfi_endproc
 3560              	.LFE160:
 3562              		.section	.text.TIM_ICStructInit,"ax",%progbits
 3563              		.align	2
 3564              		.global	TIM_ICStructInit
 3565              		.thumb
 3566              		.thumb_func
 3568              	TIM_ICStructInit:
 3569              	.LFB161:
1936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3570              		.loc 1 1944 0
 3571              		.cfi_startproc
 3572              		@ args = 0, pretend = 0, frame = 8
 3573              		@ frame_needed = 1, uses_anonymous_args = 0
 3574              		@ link register save eliminated.
 3575 0000 80B4     		push	{r7}
 3576              	.LCFI153:
 3577              		.cfi_def_cfa_offset 4
 3578              		.cfi_offset 7, -4
 3579 0002 83B0     		sub	sp, sp, #12
 3580              	.LCFI154:
 3581              		.cfi_def_cfa_offset 16
 3582 0004 00AF     		add	r7, sp, #0
 3583              	.LCFI155:
 3584              		.cfi_def_cfa_register 7
 3585 0006 7860     		str	r0, [r7, #4]
1945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 3586              		.loc 1 1946 0
 3587 0008 7B68     		ldr	r3, [r7, #4]
 3588 000a 4FF00002 		mov	r2, #0
 3589 000e 1A80     		strh	r2, [r3, #0]	@ movhi
1947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 3590              		.loc 1 1947 0
 3591 0010 7B68     		ldr	r3, [r7, #4]
 3592 0012 4FF00002 		mov	r2, #0
 3593 0016 5A80     		strh	r2, [r3, #2]	@ movhi
1948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 3594              		.loc 1 1948 0
 3595 0018 7B68     		ldr	r3, [r7, #4]
 3596 001a 4FF00102 		mov	r2, #1
 3597 001e 9A80     		strh	r2, [r3, #4]	@ movhi
1949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 3598              		.loc 1 1949 0
 3599 0020 7B68     		ldr	r3, [r7, #4]
 3600 0022 4FF00002 		mov	r2, #0
 3601 0026 DA80     		strh	r2, [r3, #6]	@ movhi
1950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 3602              		.loc 1 1950 0
 3603 0028 7B68     		ldr	r3, [r7, #4]
 3604 002a 4FF00002 		mov	r2, #0
 3605 002e 1A81     		strh	r2, [r3, #8]	@ movhi
1951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3606              		.loc 1 1951 0
 3607 0030 07F10C07 		add	r7, r7, #12
 3608 0034 BD46     		mov	sp, r7
 3609 0036 80BC     		pop	{r7}
 3610 0038 7047     		bx	lr
 3611              		.cfi_endproc
 3612              	.LFE161:
 3614 003a 00BF     		.section	.text.TIM_PWMIConfig,"ax",%progbits
 3615              		.align	2
 3616              		.global	TIM_PWMIConfig
 3617              		.thumb
 3618              		.thumb_func
 3620              	TIM_PWMIConfig:
 3621              	.LFB162:
1952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3622              		.loc 1 1963 0
 3623              		.cfi_startproc
 3624              		@ args = 0, pretend = 0, frame = 16
 3625              		@ frame_needed = 1, uses_anonymous_args = 0
 3626 0000 80B5     		push	{r7, lr}
 3627              	.LCFI156:
 3628              		.cfi_def_cfa_offset 8
 3629              		.cfi_offset 14, -4
 3630              		.cfi_offset 7, -8
 3631 0002 84B0     		sub	sp, sp, #16
 3632              	.LCFI157:
 3633              		.cfi_def_cfa_offset 24
 3634 0004 00AF     		add	r7, sp, #0
 3635              	.LCFI158:
 3636              		.cfi_def_cfa_register 7
 3637 0006 7860     		str	r0, [r7, #4]
 3638 0008 3960     		str	r1, [r7, #0]
1964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3639              		.loc 1 1964 0
 3640 000a 4FF00003 		mov	r3, #0
 3641 000e FB81     		strh	r3, [r7, #14]	@ movhi
1965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 3642              		.loc 1 1965 0
 3643 0010 4FF00103 		mov	r3, #1
 3644 0014 BB81     		strh	r3, [r7, #12]	@ movhi
1966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 3645              		.loc 1 1971 0
 3646 0016 3B68     		ldr	r3, [r7, #0]
 3647 0018 5B88     		ldrh	r3, [r3, #2]
 3648 001a 002B     		cmp	r3, #0
 3649 001c 03D1     		bne	.L96
1972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 3650              		.loc 1 1973 0
 3651 001e 4FF00203 		mov	r3, #2
 3652 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 3653 0024 02E0     		b	.L97
 3654              	.L96:
1974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 3655              		.loc 1 1977 0
 3656 0026 4FF00003 		mov	r3, #0
 3657 002a FB81     		strh	r3, [r7, #14]	@ movhi
 3658              	.L97:
1978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 3659              		.loc 1 1980 0
 3660 002c 3B68     		ldr	r3, [r7, #0]
 3661 002e 9B88     		ldrh	r3, [r3, #4]
 3662 0030 012B     		cmp	r3, #1
 3663 0032 03D1     		bne	.L98
1981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 3664              		.loc 1 1982 0
 3665 0034 4FF00203 		mov	r3, #2
 3666 0038 BB81     		strh	r3, [r7, #12]	@ movhi
 3667 003a 02E0     		b	.L99
 3668              	.L98:
1983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 3669              		.loc 1 1986 0
 3670 003c 4FF00103 		mov	r3, #1
 3671 0040 BB81     		strh	r3, [r7, #12]	@ movhi
 3672              	.L99:
1987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3673              		.loc 1 1988 0
 3674 0042 3B68     		ldr	r3, [r7, #0]
 3675 0044 1B88     		ldrh	r3, [r3, #0]
 3676 0046 002B     		cmp	r3, #0
 3677 0048 1CD1     		bne	.L100
1989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3678              		.loc 1 1991 0
 3679 004a 3B68     		ldr	r3, [r7, #0]
 3680 004c 5988     		ldrh	r1, [r3, #2]
 3681 004e 3B68     		ldr	r3, [r7, #0]
 3682 0050 9A88     		ldrh	r2, [r3, #4]
1992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3683              		.loc 1 1992 0
 3684 0052 3B68     		ldr	r3, [r7, #0]
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3685              		.loc 1 1991 0
 3686 0054 1B89     		ldrh	r3, [r3, #8]
 3687 0056 7868     		ldr	r0, [r7, #4]
 3688 0058 FFF7FEFF 		bl	TI1_Config
1993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3689              		.loc 1 1994 0
 3690 005c 3B68     		ldr	r3, [r7, #0]
 3691 005e DB88     		ldrh	r3, [r3, #6]
 3692 0060 7868     		ldr	r0, [r7, #4]
 3693 0062 1946     		mov	r1, r3
 3694 0064 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3695              		.loc 1 1996 0
 3696 0068 3B68     		ldr	r3, [r7, #0]
 3697 006a 1B89     		ldrh	r3, [r3, #8]
 3698 006c F989     		ldrh	r1, [r7, #14]
 3699 006e BA89     		ldrh	r2, [r7, #12]
 3700 0070 7868     		ldr	r0, [r7, #4]
 3701 0072 FFF7FEFF 		bl	TI2_Config
1997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3702              		.loc 1 1998 0
 3703 0076 3B68     		ldr	r3, [r7, #0]
 3704 0078 DB88     		ldrh	r3, [r3, #6]
 3705 007a 7868     		ldr	r0, [r7, #4]
 3706 007c 1946     		mov	r1, r3
 3707 007e FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3708 0082 1BE0     		b	.L95
 3709              	.L100:
1999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3710              		.loc 1 2003 0
 3711 0084 3B68     		ldr	r3, [r7, #0]
 3712 0086 5988     		ldrh	r1, [r3, #2]
 3713 0088 3B68     		ldr	r3, [r7, #0]
 3714 008a 9A88     		ldrh	r2, [r3, #4]
2004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3715              		.loc 1 2004 0
 3716 008c 3B68     		ldr	r3, [r7, #0]
2003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3717              		.loc 1 2003 0
 3718 008e 1B89     		ldrh	r3, [r3, #8]
 3719 0090 7868     		ldr	r0, [r7, #4]
 3720 0092 FFF7FEFF 		bl	TI2_Config
2005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3721              		.loc 1 2006 0
 3722 0096 3B68     		ldr	r3, [r7, #0]
 3723 0098 DB88     		ldrh	r3, [r3, #6]
 3724 009a 7868     		ldr	r0, [r7, #4]
 3725 009c 1946     		mov	r1, r3
 3726 009e FFF7FEFF 		bl	TIM_SetIC2Prescaler
2007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3727              		.loc 1 2008 0
 3728 00a2 3B68     		ldr	r3, [r7, #0]
 3729 00a4 1B89     		ldrh	r3, [r3, #8]
 3730 00a6 F989     		ldrh	r1, [r7, #14]
 3731 00a8 BA89     		ldrh	r2, [r7, #12]
 3732 00aa 7868     		ldr	r0, [r7, #4]
 3733 00ac FFF7FEFF 		bl	TI1_Config
2009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3734              		.loc 1 2010 0
 3735 00b0 3B68     		ldr	r3, [r7, #0]
 3736 00b2 DB88     		ldrh	r3, [r3, #6]
 3737 00b4 7868     		ldr	r0, [r7, #4]
 3738 00b6 1946     		mov	r1, r3
 3739 00b8 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3740              	.L95:
2011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3741              		.loc 1 2012 0
 3742 00bc 07F11007 		add	r7, r7, #16
 3743 00c0 BD46     		mov	sp, r7
 3744 00c2 80BD     		pop	{r7, pc}
 3745              		.cfi_endproc
 3746              	.LFE162:
 3748              		.section	.text.TIM_GetCapture1,"ax",%progbits
 3749              		.align	2
 3750              		.global	TIM_GetCapture1
 3751              		.thumb
 3752              		.thumb_func
 3754              	TIM_GetCapture1:
 3755              	.LFB163:
2013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3756              		.loc 1 2020 0
 3757              		.cfi_startproc
 3758              		@ args = 0, pretend = 0, frame = 8
 3759              		@ frame_needed = 1, uses_anonymous_args = 0
 3760              		@ link register save eliminated.
 3761 0000 80B4     		push	{r7}
 3762              	.LCFI159:
 3763              		.cfi_def_cfa_offset 4
 3764              		.cfi_offset 7, -4
 3765 0002 83B0     		sub	sp, sp, #12
 3766              	.LCFI160:
 3767              		.cfi_def_cfa_offset 16
 3768 0004 00AF     		add	r7, sp, #0
 3769              	.LCFI161:
 3770              		.cfi_def_cfa_register 7
 3771 0006 7860     		str	r0, [r7, #4]
2021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 3772              		.loc 1 2025 0
 3773 0008 7B68     		ldr	r3, [r7, #4]
 3774 000a 5B6B     		ldr	r3, [r3, #52]
2026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3775              		.loc 1 2026 0
 3776 000c 1846     		mov	r0, r3
 3777 000e 07F10C07 		add	r7, r7, #12
 3778 0012 BD46     		mov	sp, r7
 3779 0014 80BC     		pop	{r7}
 3780 0016 7047     		bx	lr
 3781              		.cfi_endproc
 3782              	.LFE163:
 3784              		.section	.text.TIM_GetCapture2,"ax",%progbits
 3785              		.align	2
 3786              		.global	TIM_GetCapture2
 3787              		.thumb
 3788              		.thumb_func
 3790              	TIM_GetCapture2:
 3791              	.LFB164:
2027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3792              		.loc 1 2035 0
 3793              		.cfi_startproc
 3794              		@ args = 0, pretend = 0, frame = 8
 3795              		@ frame_needed = 1, uses_anonymous_args = 0
 3796              		@ link register save eliminated.
 3797 0000 80B4     		push	{r7}
 3798              	.LCFI162:
 3799              		.cfi_def_cfa_offset 4
 3800              		.cfi_offset 7, -4
 3801 0002 83B0     		sub	sp, sp, #12
 3802              	.LCFI163:
 3803              		.cfi_def_cfa_offset 16
 3804 0004 00AF     		add	r7, sp, #0
 3805              	.LCFI164:
 3806              		.cfi_def_cfa_register 7
 3807 0006 7860     		str	r0, [r7, #4]
2036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 3808              		.loc 1 2040 0
 3809 0008 7B68     		ldr	r3, [r7, #4]
 3810 000a 9B6B     		ldr	r3, [r3, #56]
2041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3811              		.loc 1 2041 0
 3812 000c 1846     		mov	r0, r3
 3813 000e 07F10C07 		add	r7, r7, #12
 3814 0012 BD46     		mov	sp, r7
 3815 0014 80BC     		pop	{r7}
 3816 0016 7047     		bx	lr
 3817              		.cfi_endproc
 3818              	.LFE164:
 3820              		.section	.text.TIM_GetCapture3,"ax",%progbits
 3821              		.align	2
 3822              		.global	TIM_GetCapture3
 3823              		.thumb
 3824              		.thumb_func
 3826              	TIM_GetCapture3:
 3827              	.LFB165:
2042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3828              		.loc 1 2049 0
 3829              		.cfi_startproc
 3830              		@ args = 0, pretend = 0, frame = 8
 3831              		@ frame_needed = 1, uses_anonymous_args = 0
 3832              		@ link register save eliminated.
 3833 0000 80B4     		push	{r7}
 3834              	.LCFI165:
 3835              		.cfi_def_cfa_offset 4
 3836              		.cfi_offset 7, -4
 3837 0002 83B0     		sub	sp, sp, #12
 3838              	.LCFI166:
 3839              		.cfi_def_cfa_offset 16
 3840 0004 00AF     		add	r7, sp, #0
 3841              	.LCFI167:
 3842              		.cfi_def_cfa_register 7
 3843 0006 7860     		str	r0, [r7, #4]
2050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 3844              		.loc 1 2054 0
 3845 0008 7B68     		ldr	r3, [r7, #4]
 3846 000a DB6B     		ldr	r3, [r3, #60]
2055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3847              		.loc 1 2055 0
 3848 000c 1846     		mov	r0, r3
 3849 000e 07F10C07 		add	r7, r7, #12
 3850 0012 BD46     		mov	sp, r7
 3851 0014 80BC     		pop	{r7}
 3852 0016 7047     		bx	lr
 3853              		.cfi_endproc
 3854              	.LFE165:
 3856              		.section	.text.TIM_GetCapture4,"ax",%progbits
 3857              		.align	2
 3858              		.global	TIM_GetCapture4
 3859              		.thumb
 3860              		.thumb_func
 3862              	TIM_GetCapture4:
 3863              	.LFB166:
2056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3864              		.loc 1 2063 0
 3865              		.cfi_startproc
 3866              		@ args = 0, pretend = 0, frame = 8
 3867              		@ frame_needed = 1, uses_anonymous_args = 0
 3868              		@ link register save eliminated.
 3869 0000 80B4     		push	{r7}
 3870              	.LCFI168:
 3871              		.cfi_def_cfa_offset 4
 3872              		.cfi_offset 7, -4
 3873 0002 83B0     		sub	sp, sp, #12
 3874              	.LCFI169:
 3875              		.cfi_def_cfa_offset 16
 3876 0004 00AF     		add	r7, sp, #0
 3877              	.LCFI170:
 3878              		.cfi_def_cfa_register 7
 3879 0006 7860     		str	r0, [r7, #4]
2064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 3880              		.loc 1 2068 0
 3881 0008 7B68     		ldr	r3, [r7, #4]
 3882 000a 1B6C     		ldr	r3, [r3, #64]
2069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3883              		.loc 1 2069 0
 3884 000c 1846     		mov	r0, r3
 3885 000e 07F10C07 		add	r7, r7, #12
 3886 0012 BD46     		mov	sp, r7
 3887 0014 80BC     		pop	{r7}
 3888 0016 7047     		bx	lr
 3889              		.cfi_endproc
 3890              	.LFE166:
 3892              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 3893              		.align	2
 3894              		.global	TIM_SetIC1Prescaler
 3895              		.thumb
 3896              		.thumb_func
 3898              	TIM_SetIC1Prescaler:
 3899              	.LFB167:
2070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3900              		.loc 1 2083 0
 3901              		.cfi_startproc
 3902              		@ args = 0, pretend = 0, frame = 8
 3903              		@ frame_needed = 1, uses_anonymous_args = 0
 3904              		@ link register save eliminated.
 3905 0000 80B4     		push	{r7}
 3906              	.LCFI171:
 3907              		.cfi_def_cfa_offset 4
 3908              		.cfi_offset 7, -4
 3909 0002 83B0     		sub	sp, sp, #12
 3910              	.LCFI172:
 3911              		.cfi_def_cfa_offset 16
 3912 0004 00AF     		add	r7, sp, #0
 3913              	.LCFI173:
 3914              		.cfi_def_cfa_register 7
 3915 0006 7860     		str	r0, [r7, #4]
 3916 0008 0B46     		mov	r3, r1
 3917 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 3918              		.loc 1 2089 0
 3919 000c 7B68     		ldr	r3, [r7, #4]
 3920 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3921 0010 9BB2     		uxth	r3, r3
 3922 0012 23F00C03 		bic	r3, r3, #12
 3923 0016 9AB2     		uxth	r2, r3
 3924 0018 7B68     		ldr	r3, [r7, #4]
 3925 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 3926              		.loc 1 2092 0
 3927 001c 7B68     		ldr	r3, [r7, #4]
 3928 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3929 0020 9AB2     		uxth	r2, r3
 3930 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3931 0024 1343     		orrs	r3, r3, r2
 3932 0026 9AB2     		uxth	r2, r3
 3933 0028 7B68     		ldr	r3, [r7, #4]
 3934 002a 1A83     		strh	r2, [r3, #24]	@ movhi
2093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3935              		.loc 1 2093 0
 3936 002c 07F10C07 		add	r7, r7, #12
 3937 0030 BD46     		mov	sp, r7
 3938 0032 80BC     		pop	{r7}
 3939 0034 7047     		bx	lr
 3940              		.cfi_endproc
 3941              	.LFE167:
 3943 0036 00BF     		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 3944              		.align	2
 3945              		.global	TIM_SetIC2Prescaler
 3946              		.thumb
 3947              		.thumb_func
 3949              	TIM_SetIC2Prescaler:
 3950              	.LFB168:
2094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3951              		.loc 1 2108 0
 3952              		.cfi_startproc
 3953              		@ args = 0, pretend = 0, frame = 8
 3954              		@ frame_needed = 1, uses_anonymous_args = 0
 3955              		@ link register save eliminated.
 3956 0000 80B4     		push	{r7}
 3957              	.LCFI174:
 3958              		.cfi_def_cfa_offset 4
 3959              		.cfi_offset 7, -4
 3960 0002 83B0     		sub	sp, sp, #12
 3961              	.LCFI175:
 3962              		.cfi_def_cfa_offset 16
 3963 0004 00AF     		add	r7, sp, #0
 3964              	.LCFI176:
 3965              		.cfi_def_cfa_register 7
 3966 0006 7860     		str	r0, [r7, #4]
 3967 0008 0B46     		mov	r3, r1
 3968 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 3969              		.loc 1 2114 0
 3970 000c 7B68     		ldr	r3, [r7, #4]
 3971 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3972 0010 9BB2     		uxth	r3, r3
 3973 0012 23F44063 		bic	r3, r3, #3072
 3974 0016 9AB2     		uxth	r2, r3
 3975 0018 7B68     		ldr	r3, [r7, #4]
 3976 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 3977              		.loc 1 2117 0
 3978 001c 7B68     		ldr	r3, [r7, #4]
 3979 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3980 0020 9AB2     		uxth	r2, r3
 3981 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3982 0024 4FEA0323 		lsl	r3, r3, #8
 3983 0028 9BB2     		uxth	r3, r3
 3984 002a 1343     		orrs	r3, r3, r2
 3985 002c 9AB2     		uxth	r2, r3
 3986 002e 7B68     		ldr	r3, [r7, #4]
 3987 0030 1A83     		strh	r2, [r3, #24]	@ movhi
2118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3988              		.loc 1 2118 0
 3989 0032 07F10C07 		add	r7, r7, #12
 3990 0036 BD46     		mov	sp, r7
 3991 0038 80BC     		pop	{r7}
 3992 003a 7047     		bx	lr
 3993              		.cfi_endproc
 3994              	.LFE168:
 3996              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 3997              		.align	2
 3998              		.global	TIM_SetIC3Prescaler
 3999              		.thumb
 4000              		.thumb_func
 4002              	TIM_SetIC3Prescaler:
 4003              	.LFB169:
2119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4004              		.loc 1 2132 0
 4005              		.cfi_startproc
 4006              		@ args = 0, pretend = 0, frame = 8
 4007              		@ frame_needed = 1, uses_anonymous_args = 0
 4008              		@ link register save eliminated.
 4009 0000 80B4     		push	{r7}
 4010              	.LCFI177:
 4011              		.cfi_def_cfa_offset 4
 4012              		.cfi_offset 7, -4
 4013 0002 83B0     		sub	sp, sp, #12
 4014              	.LCFI178:
 4015              		.cfi_def_cfa_offset 16
 4016 0004 00AF     		add	r7, sp, #0
 4017              	.LCFI179:
 4018              		.cfi_def_cfa_register 7
 4019 0006 7860     		str	r0, [r7, #4]
 4020 0008 0B46     		mov	r3, r1
 4021 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 4022              		.loc 1 2138 0
 4023 000c 7B68     		ldr	r3, [r7, #4]
 4024 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4025 0010 9BB2     		uxth	r3, r3
 4026 0012 23F00C03 		bic	r3, r3, #12
 4027 0016 9AB2     		uxth	r2, r3
 4028 0018 7B68     		ldr	r3, [r7, #4]
 4029 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 4030              		.loc 1 2141 0
 4031 001c 7B68     		ldr	r3, [r7, #4]
 4032 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4033 0020 9AB2     		uxth	r2, r3
 4034 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4035 0024 1343     		orrs	r3, r3, r2
 4036 0026 9AB2     		uxth	r2, r3
 4037 0028 7B68     		ldr	r3, [r7, #4]
 4038 002a 9A83     		strh	r2, [r3, #28]	@ movhi
2142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4039              		.loc 1 2142 0
 4040 002c 07F10C07 		add	r7, r7, #12
 4041 0030 BD46     		mov	sp, r7
 4042 0032 80BC     		pop	{r7}
 4043 0034 7047     		bx	lr
 4044              		.cfi_endproc
 4045              	.LFE169:
 4047 0036 00BF     		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 4048              		.align	2
 4049              		.global	TIM_SetIC4Prescaler
 4050              		.thumb
 4051              		.thumb_func
 4053              	TIM_SetIC4Prescaler:
 4054              	.LFB170:
2143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4055              		.loc 1 2156 0
 4056              		.cfi_startproc
 4057              		@ args = 0, pretend = 0, frame = 8
 4058              		@ frame_needed = 1, uses_anonymous_args = 0
 4059              		@ link register save eliminated.
 4060 0000 80B4     		push	{r7}
 4061              	.LCFI180:
 4062              		.cfi_def_cfa_offset 4
 4063              		.cfi_offset 7, -4
 4064 0002 83B0     		sub	sp, sp, #12
 4065              	.LCFI181:
 4066              		.cfi_def_cfa_offset 16
 4067 0004 00AF     		add	r7, sp, #0
 4068              	.LCFI182:
 4069              		.cfi_def_cfa_register 7
 4070 0006 7860     		str	r0, [r7, #4]
 4071 0008 0B46     		mov	r3, r1
 4072 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 4073              		.loc 1 2162 0
 4074 000c 7B68     		ldr	r3, [r7, #4]
 4075 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4076 0010 9BB2     		uxth	r3, r3
 4077 0012 23F44063 		bic	r3, r3, #3072
 4078 0016 9AB2     		uxth	r2, r3
 4079 0018 7B68     		ldr	r3, [r7, #4]
 4080 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 4081              		.loc 1 2165 0
 4082 001c 7B68     		ldr	r3, [r7, #4]
 4083 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4084 0020 9AB2     		uxth	r2, r3
 4085 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4086 0024 4FEA0323 		lsl	r3, r3, #8
 4087 0028 9BB2     		uxth	r3, r3
 4088 002a 1343     		orrs	r3, r3, r2
 4089 002c 9AB2     		uxth	r2, r3
 4090 002e 7B68     		ldr	r3, [r7, #4]
 4091 0030 9A83     		strh	r2, [r3, #28]	@ movhi
2166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4092              		.loc 1 2166 0
 4093 0032 07F10C07 		add	r7, r7, #12
 4094 0036 BD46     		mov	sp, r7
 4095 0038 80BC     		pop	{r7}
 4096 003a 7047     		bx	lr
 4097              		.cfi_endproc
 4098              	.LFE170:
 4100              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 4101              		.align	2
 4102              		.global	TIM_BDTRConfig
 4103              		.thumb
 4104              		.thumb_func
 4106              	TIM_BDTRConfig:
 4107              	.LFB171:
2167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4108              		.loc 1 2209 0
 4109              		.cfi_startproc
 4110              		@ args = 0, pretend = 0, frame = 8
 4111              		@ frame_needed = 1, uses_anonymous_args = 0
 4112              		@ link register save eliminated.
 4113 0000 80B4     		push	{r7}
 4114              	.LCFI183:
 4115              		.cfi_def_cfa_offset 4
 4116              		.cfi_offset 7, -4
 4117 0002 83B0     		sub	sp, sp, #12
 4118              	.LCFI184:
 4119              		.cfi_def_cfa_offset 16
 4120 0004 00AF     		add	r7, sp, #0
 4121              	.LCFI185:
 4122              		.cfi_def_cfa_register 7
 4123 0006 7860     		str	r0, [r7, #4]
 4124 0008 3960     		str	r1, [r7, #0]
2210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4125              		.loc 1 2221 0
 4126 000a 3B68     		ldr	r3, [r7, #0]
 4127 000c 1A88     		ldrh	r2, [r3, #0]
 4128 000e 3B68     		ldr	r3, [r7, #0]
 4129 0010 5B88     		ldrh	r3, [r3, #2]
 4130 0012 1343     		orrs	r3, r3, r2
 4131 0014 9AB2     		uxth	r2, r3
2222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4132              		.loc 1 2222 0
 4133 0016 3B68     		ldr	r3, [r7, #0]
 4134 0018 9B88     		ldrh	r3, [r3, #4]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4135              		.loc 1 2221 0
 4136 001a 1343     		orrs	r3, r3, r2
 4137 001c 9AB2     		uxth	r2, r3
 4138              		.loc 1 2222 0
 4139 001e 3B68     		ldr	r3, [r7, #0]
 4140 0020 DB88     		ldrh	r3, [r3, #6]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4141              		.loc 1 2221 0
 4142 0022 1343     		orrs	r3, r3, r2
 4143 0024 9AB2     		uxth	r2, r3
2223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4144              		.loc 1 2223 0
 4145 0026 3B68     		ldr	r3, [r7, #0]
 4146 0028 1B89     		ldrh	r3, [r3, #8]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4147              		.loc 1 2221 0
 4148 002a 1343     		orrs	r3, r3, r2
 4149 002c 9AB2     		uxth	r2, r3
 4150              		.loc 1 2223 0
 4151 002e 3B68     		ldr	r3, [r7, #0]
 4152 0030 5B89     		ldrh	r3, [r3, #10]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4153              		.loc 1 2221 0
 4154 0032 1343     		orrs	r3, r3, r2
 4155 0034 9AB2     		uxth	r2, r3
2224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 4156              		.loc 1 2224 0
 4157 0036 3B68     		ldr	r3, [r7, #0]
 4158 0038 9B89     		ldrh	r3, [r3, #12]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4159              		.loc 1 2221 0
 4160 003a 1343     		orrs	r3, r3, r2
 4161 003c 9AB2     		uxth	r2, r3
 4162 003e 7B68     		ldr	r3, [r7, #4]
 4163 0040 A3F84420 		strh	r2, [r3, #68]	@ movhi
2225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4164              		.loc 1 2225 0
 4165 0044 07F10C07 		add	r7, r7, #12
 4166 0048 BD46     		mov	sp, r7
 4167 004a 80BC     		pop	{r7}
 4168 004c 7047     		bx	lr
 4169              		.cfi_endproc
 4170              	.LFE171:
 4172 004e 00BF     		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 4173              		.align	2
 4174              		.global	TIM_BDTRStructInit
 4175              		.thumb
 4176              		.thumb_func
 4178              	TIM_BDTRStructInit:
 4179              	.LFB172:
2226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4180              		.loc 1 2234 0
 4181              		.cfi_startproc
 4182              		@ args = 0, pretend = 0, frame = 8
 4183              		@ frame_needed = 1, uses_anonymous_args = 0
 4184              		@ link register save eliminated.
 4185 0000 80B4     		push	{r7}
 4186              	.LCFI186:
 4187              		.cfi_def_cfa_offset 4
 4188              		.cfi_offset 7, -4
 4189 0002 83B0     		sub	sp, sp, #12
 4190              	.LCFI187:
 4191              		.cfi_def_cfa_offset 16
 4192 0004 00AF     		add	r7, sp, #0
 4193              	.LCFI188:
 4194              		.cfi_def_cfa_register 7
 4195 0006 7860     		str	r0, [r7, #4]
2235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 4196              		.loc 1 2236 0
 4197 0008 7B68     		ldr	r3, [r7, #4]
 4198 000a 4FF00002 		mov	r2, #0
 4199 000e 1A80     		strh	r2, [r3, #0]	@ movhi
2237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 4200              		.loc 1 2237 0
 4201 0010 7B68     		ldr	r3, [r7, #4]
 4202 0012 4FF00002 		mov	r2, #0
 4203 0016 5A80     		strh	r2, [r3, #2]	@ movhi
2238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 4204              		.loc 1 2238 0
 4205 0018 7B68     		ldr	r3, [r7, #4]
 4206 001a 4FF00002 		mov	r2, #0
 4207 001e 9A80     		strh	r2, [r3, #4]	@ movhi
2239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 4208              		.loc 1 2239 0
 4209 0020 7B68     		ldr	r3, [r7, #4]
 4210 0022 4FF00002 		mov	r2, #0
 4211 0026 DA80     		strh	r2, [r3, #6]	@ movhi
2240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 4212              		.loc 1 2240 0
 4213 0028 7B68     		ldr	r3, [r7, #4]
 4214 002a 4FF00002 		mov	r2, #0
 4215 002e 1A81     		strh	r2, [r3, #8]	@ movhi
2241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 4216              		.loc 1 2241 0
 4217 0030 7B68     		ldr	r3, [r7, #4]
 4218 0032 4FF00002 		mov	r2, #0
 4219 0036 5A81     		strh	r2, [r3, #10]	@ movhi
2242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 4220              		.loc 1 2242 0
 4221 0038 7B68     		ldr	r3, [r7, #4]
 4222 003a 4FF00002 		mov	r2, #0
 4223 003e 9A81     		strh	r2, [r3, #12]	@ movhi
2243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4224              		.loc 1 2243 0
 4225 0040 07F10C07 		add	r7, r7, #12
 4226 0044 BD46     		mov	sp, r7
 4227 0046 80BC     		pop	{r7}
 4228 0048 7047     		bx	lr
 4229              		.cfi_endproc
 4230              	.LFE172:
 4232 004a 00BF     		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 4233              		.align	2
 4234              		.global	TIM_CtrlPWMOutputs
 4235              		.thumb
 4236              		.thumb_func
 4238              	TIM_CtrlPWMOutputs:
 4239              	.LFB173:
2244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4240              		.loc 1 2253 0
 4241              		.cfi_startproc
 4242              		@ args = 0, pretend = 0, frame = 8
 4243              		@ frame_needed = 1, uses_anonymous_args = 0
 4244              		@ link register save eliminated.
 4245 0000 80B4     		push	{r7}
 4246              	.LCFI189:
 4247              		.cfi_def_cfa_offset 4
 4248              		.cfi_offset 7, -4
 4249 0002 83B0     		sub	sp, sp, #12
 4250              	.LCFI190:
 4251              		.cfi_def_cfa_offset 16
 4252 0004 00AF     		add	r7, sp, #0
 4253              	.LCFI191:
 4254              		.cfi_def_cfa_register 7
 4255 0006 7860     		str	r0, [r7, #4]
 4256 0008 0B46     		mov	r3, r1
 4257 000a FB70     		strb	r3, [r7, #3]
2254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4258              		.loc 1 2258 0
 4259 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4260 000e 002B     		cmp	r3, #0
 4261 0010 0CD0     		beq	.L113
2259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 4262              		.loc 1 2261 0
 4263 0012 7B68     		ldr	r3, [r7, #4]
 4264 0014 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4265 0018 9BB2     		uxth	r3, r3
 4266 001a 6FEA4343 		mvn	r3, r3, lsl #17
 4267 001e 6FEA5343 		mvn	r3, r3, lsr #17
 4268 0022 9AB2     		uxth	r2, r3
 4269 0024 7B68     		ldr	r3, [r7, #4]
 4270 0026 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4271 002a 0BE0     		b	.L112
 4272              	.L113:
2262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 4273              		.loc 1 2266 0
 4274 002c 7B68     		ldr	r3, [r7, #4]
 4275 002e B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4276 0032 9BB2     		uxth	r3, r3
 4277 0034 4FEA4343 		lsl	r3, r3, #17
 4278 0038 4FEA5343 		lsr	r3, r3, #17
 4279 003c 9AB2     		uxth	r2, r3
 4280 003e 7B68     		ldr	r3, [r7, #4]
 4281 0040 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4282              	.L112:
2267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4283              		.loc 1 2268 0
 4284 0044 07F10C07 		add	r7, r7, #12
 4285 0048 BD46     		mov	sp, r7
 4286 004a 80BC     		pop	{r7}
 4287 004c 7047     		bx	lr
 4288              		.cfi_endproc
 4289              	.LFE173:
 4291 004e 00BF     		.section	.text.TIM_SelectCOM,"ax",%progbits
 4292              		.align	2
 4293              		.global	TIM_SelectCOM
 4294              		.thumb
 4295              		.thumb_func
 4297              	TIM_SelectCOM:
 4298              	.LFB174:
2269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4299              		.loc 1 2278 0
 4300              		.cfi_startproc
 4301              		@ args = 0, pretend = 0, frame = 8
 4302              		@ frame_needed = 1, uses_anonymous_args = 0
 4303              		@ link register save eliminated.
 4304 0000 80B4     		push	{r7}
 4305              	.LCFI192:
 4306              		.cfi_def_cfa_offset 4
 4307              		.cfi_offset 7, -4
 4308 0002 83B0     		sub	sp, sp, #12
 4309              	.LCFI193:
 4310              		.cfi_def_cfa_offset 16
 4311 0004 00AF     		add	r7, sp, #0
 4312              	.LCFI194:
 4313              		.cfi_def_cfa_register 7
 4314 0006 7860     		str	r0, [r7, #4]
 4315 0008 0B46     		mov	r3, r1
 4316 000a FB70     		strb	r3, [r7, #3]
2279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4317              		.loc 1 2283 0
 4318 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4319 000e 002B     		cmp	r3, #0
 4320 0010 08D0     		beq	.L116
2284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 4321              		.loc 1 2286 0
 4322 0012 7B68     		ldr	r3, [r7, #4]
 4323 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4324 0016 9BB2     		uxth	r3, r3
 4325 0018 43F00403 		orr	r3, r3, #4
 4326 001c 9AB2     		uxth	r2, r3
 4327 001e 7B68     		ldr	r3, [r7, #4]
 4328 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4329 0022 07E0     		b	.L115
 4330              	.L116:
2287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 4331              		.loc 1 2291 0
 4332 0024 7B68     		ldr	r3, [r7, #4]
 4333 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4334 0028 9BB2     		uxth	r3, r3
 4335 002a 23F00403 		bic	r3, r3, #4
 4336 002e 9AB2     		uxth	r2, r3
 4337 0030 7B68     		ldr	r3, [r7, #4]
 4338 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4339              	.L115:
2292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4340              		.loc 1 2293 0
 4341 0034 07F10C07 		add	r7, r7, #12
 4342 0038 BD46     		mov	sp, r7
 4343 003a 80BC     		pop	{r7}
 4344 003c 7047     		bx	lr
 4345              		.cfi_endproc
 4346              	.LFE174:
 4348 003e 00BF     		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 4349              		.align	2
 4350              		.global	TIM_CCPreloadControl
 4351              		.thumb
 4352              		.thumb_func
 4354              	TIM_CCPreloadControl:
 4355              	.LFB175:
2294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4356              		.loc 1 2303 0
 4357              		.cfi_startproc
 4358              		@ args = 0, pretend = 0, frame = 8
 4359              		@ frame_needed = 1, uses_anonymous_args = 0
 4360              		@ link register save eliminated.
 4361 0000 80B4     		push	{r7}
 4362              	.LCFI195:
 4363              		.cfi_def_cfa_offset 4
 4364              		.cfi_offset 7, -4
 4365 0002 83B0     		sub	sp, sp, #12
 4366              	.LCFI196:
 4367              		.cfi_def_cfa_offset 16
 4368 0004 00AF     		add	r7, sp, #0
 4369              	.LCFI197:
 4370              		.cfi_def_cfa_register 7
 4371 0006 7860     		str	r0, [r7, #4]
 4372 0008 0B46     		mov	r3, r1
 4373 000a FB70     		strb	r3, [r7, #3]
2304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4374              		.loc 1 2307 0
 4375 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4376 000e 002B     		cmp	r3, #0
 4377 0010 08D0     		beq	.L119
2308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 4378              		.loc 1 2310 0
 4379 0012 7B68     		ldr	r3, [r7, #4]
 4380 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4381 0016 9BB2     		uxth	r3, r3
 4382 0018 43F00103 		orr	r3, r3, #1
 4383 001c 9AB2     		uxth	r2, r3
 4384 001e 7B68     		ldr	r3, [r7, #4]
 4385 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4386 0022 07E0     		b	.L118
 4387              	.L119:
2311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 4388              		.loc 1 2315 0
 4389 0024 7B68     		ldr	r3, [r7, #4]
 4390 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4391 0028 9BB2     		uxth	r3, r3
 4392 002a 23F00103 		bic	r3, r3, #1
 4393 002e 9AB2     		uxth	r2, r3
 4394 0030 7B68     		ldr	r3, [r7, #4]
 4395 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4396              	.L118:
2316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4397              		.loc 1 2317 0
 4398 0034 07F10C07 		add	r7, r7, #12
 4399 0038 BD46     		mov	sp, r7
 4400 003a 80BC     		pop	{r7}
 4401 003c 7047     		bx	lr
 4402              		.cfi_endproc
 4403              	.LFE175:
 4405 003e 00BF     		.section	.text.TIM_ITConfig,"ax",%progbits
 4406              		.align	2
 4407              		.global	TIM_ITConfig
 4408              		.thumb
 4409              		.thumb_func
 4411              	TIM_ITConfig:
 4412              	.LFB176:
2318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4413              		.loc 1 2360 0
 4414              		.cfi_startproc
 4415              		@ args = 0, pretend = 0, frame = 8
 4416              		@ frame_needed = 1, uses_anonymous_args = 0
 4417              		@ link register save eliminated.
 4418 0000 80B4     		push	{r7}
 4419              	.LCFI198:
 4420              		.cfi_def_cfa_offset 4
 4421              		.cfi_offset 7, -4
 4422 0002 83B0     		sub	sp, sp, #12
 4423              	.LCFI199:
 4424              		.cfi_def_cfa_offset 16
 4425 0004 00AF     		add	r7, sp, #0
 4426              	.LCFI200:
 4427              		.cfi_def_cfa_register 7
 4428 0006 7860     		str	r0, [r7, #4]
 4429 0008 1346     		mov	r3, r2
 4430 000a 0A46     		mov	r2, r1	@ movhi
 4431 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4432 000e 7B70     		strb	r3, [r7, #1]
2361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4433              		.loc 1 2366 0
 4434 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4435 0012 002B     		cmp	r3, #0
 4436 0014 08D0     		beq	.L122
2367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 4437              		.loc 1 2369 0
 4438 0016 7B68     		ldr	r3, [r7, #4]
 4439 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4440 001a 9AB2     		uxth	r2, r3
 4441 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4442 001e 1343     		orrs	r3, r3, r2
 4443 0020 9AB2     		uxth	r2, r3
 4444 0022 7B68     		ldr	r3, [r7, #4]
 4445 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 4446 0026 0AE0     		b	.L121
 4447              	.L122:
2370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 4448              		.loc 1 2374 0
 4449 0028 7B68     		ldr	r3, [r7, #4]
 4450 002a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4451 002c 9AB2     		uxth	r2, r3
 4452 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4453 0030 6FEA0303 		mvn	r3, r3
 4454 0034 9BB2     		uxth	r3, r3
 4455 0036 1340     		ands	r3, r3, r2
 4456 0038 9AB2     		uxth	r2, r3
 4457 003a 7B68     		ldr	r3, [r7, #4]
 4458 003c 9A81     		strh	r2, [r3, #12]	@ movhi
 4459              	.L121:
2375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4460              		.loc 1 2376 0
 4461 003e 07F10C07 		add	r7, r7, #12
 4462 0042 BD46     		mov	sp, r7
 4463 0044 80BC     		pop	{r7}
 4464 0046 7047     		bx	lr
 4465              		.cfi_endproc
 4466              	.LFE176:
 4468              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 4469              		.align	2
 4470              		.global	TIM_GenerateEvent
 4471              		.thumb
 4472              		.thumb_func
 4474              	TIM_GenerateEvent:
 4475              	.LFB177:
2377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4476              		.loc 1 2398 0
 4477              		.cfi_startproc
 4478              		@ args = 0, pretend = 0, frame = 8
 4479              		@ frame_needed = 1, uses_anonymous_args = 0
 4480              		@ link register save eliminated.
 4481 0000 80B4     		push	{r7}
 4482              	.LCFI201:
 4483              		.cfi_def_cfa_offset 4
 4484              		.cfi_offset 7, -4
 4485 0002 83B0     		sub	sp, sp, #12
 4486              	.LCFI202:
 4487              		.cfi_def_cfa_offset 16
 4488 0004 00AF     		add	r7, sp, #0
 4489              	.LCFI203:
 4490              		.cfi_def_cfa_register 7
 4491 0006 7860     		str	r0, [r7, #4]
 4492 0008 0B46     		mov	r3, r1
 4493 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 4494              		.loc 1 2404 0
 4495 000c 7B68     		ldr	r3, [r7, #4]
 4496 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4497 0010 9A82     		strh	r2, [r3, #20]	@ movhi
2405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4498              		.loc 1 2405 0
 4499 0012 07F10C07 		add	r7, r7, #12
 4500 0016 BD46     		mov	sp, r7
 4501 0018 80BC     		pop	{r7}
 4502 001a 7047     		bx	lr
 4503              		.cfi_endproc
 4504              	.LFE177:
 4506              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 4507              		.align	2
 4508              		.global	TIM_GetFlagStatus
 4509              		.thumb
 4510              		.thumb_func
 4512              	TIM_GetFlagStatus:
 4513              	.LFB178:
2406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4514              		.loc 1 2431 0
 4515              		.cfi_startproc
 4516              		@ args = 0, pretend = 0, frame = 16
 4517              		@ frame_needed = 1, uses_anonymous_args = 0
 4518              		@ link register save eliminated.
 4519 0000 80B4     		push	{r7}
 4520              	.LCFI204:
 4521              		.cfi_def_cfa_offset 4
 4522              		.cfi_offset 7, -4
 4523 0002 85B0     		sub	sp, sp, #20
 4524              	.LCFI205:
 4525              		.cfi_def_cfa_offset 24
 4526 0004 00AF     		add	r7, sp, #0
 4527              	.LCFI206:
 4528              		.cfi_def_cfa_register 7
 4529 0006 7860     		str	r0, [r7, #4]
 4530 0008 0B46     		mov	r3, r1
 4531 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4532              		.loc 1 2432 0
 4533 000c 4FF00003 		mov	r3, #0
 4534 0010 FB73     		strb	r3, [r7, #15]
2433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 4535              		.loc 1 2438 0
 4536 0012 7B68     		ldr	r3, [r7, #4]
 4537 0014 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4538 0016 9AB2     		uxth	r2, r3
 4539 0018 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4540 001a 1340     		ands	r3, r3, r2
 4541 001c 9BB2     		uxth	r3, r3
 4542 001e 002B     		cmp	r3, #0
 4543 0020 03D0     		beq	.L126
2439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4544              		.loc 1 2440 0
 4545 0022 4FF00103 		mov	r3, #1
 4546 0026 FB73     		strb	r3, [r7, #15]
 4547 0028 02E0     		b	.L127
 4548              	.L126:
2441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4549              		.loc 1 2444 0
 4550 002a 4FF00003 		mov	r3, #0
 4551 002e FB73     		strb	r3, [r7, #15]
 4552              	.L127:
2445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4553              		.loc 1 2446 0
 4554 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4555              		.loc 1 2447 0
 4556 0032 1846     		mov	r0, r3
 4557 0034 07F11407 		add	r7, r7, #20
 4558 0038 BD46     		mov	sp, r7
 4559 003a 80BC     		pop	{r7}
 4560 003c 7047     		bx	lr
 4561              		.cfi_endproc
 4562              	.LFE178:
 4564 003e 00BF     		.section	.text.TIM_ClearFlag,"ax",%progbits
 4565              		.align	2
 4566              		.global	TIM_ClearFlag
 4567              		.thumb
 4568              		.thumb_func
 4570              	TIM_ClearFlag:
 4571              	.LFB179:
2448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4572              		.loc 1 2473 0
 4573              		.cfi_startproc
 4574              		@ args = 0, pretend = 0, frame = 8
 4575              		@ frame_needed = 1, uses_anonymous_args = 0
 4576              		@ link register save eliminated.
 4577 0000 80B4     		push	{r7}
 4578              	.LCFI207:
 4579              		.cfi_def_cfa_offset 4
 4580              		.cfi_offset 7, -4
 4581 0002 83B0     		sub	sp, sp, #12
 4582              	.LCFI208:
 4583              		.cfi_def_cfa_offset 16
 4584 0004 00AF     		add	r7, sp, #0
 4585              	.LCFI209:
 4586              		.cfi_def_cfa_register 7
 4587 0006 7860     		str	r0, [r7, #4]
 4588 0008 0B46     		mov	r3, r1
 4589 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 4590              		.loc 1 2478 0
 4591 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4592 000e 6FEA0303 		mvn	r3, r3
 4593 0012 9AB2     		uxth	r2, r3
 4594 0014 7B68     		ldr	r3, [r7, #4]
 4595 0016 1A82     		strh	r2, [r3, #16]	@ movhi
2479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4596              		.loc 1 2479 0
 4597 0018 07F10C07 		add	r7, r7, #12
 4598 001c BD46     		mov	sp, r7
 4599 001e 80BC     		pop	{r7}
 4600 0020 7047     		bx	lr
 4601              		.cfi_endproc
 4602              	.LFE179:
 4604 0022 00BF     		.section	.text.TIM_GetITStatus,"ax",%progbits
 4605              		.align	2
 4606              		.global	TIM_GetITStatus
 4607              		.thumb
 4608              		.thumb_func
 4610              	TIM_GetITStatus:
 4611              	.LFB180:
2480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4612              		.loc 1 2501 0
 4613              		.cfi_startproc
 4614              		@ args = 0, pretend = 0, frame = 16
 4615              		@ frame_needed = 1, uses_anonymous_args = 0
 4616              		@ link register save eliminated.
 4617 0000 80B4     		push	{r7}
 4618              	.LCFI210:
 4619              		.cfi_def_cfa_offset 4
 4620              		.cfi_offset 7, -4
 4621 0002 85B0     		sub	sp, sp, #20
 4622              	.LCFI211:
 4623              		.cfi_def_cfa_offset 24
 4624 0004 00AF     		add	r7, sp, #0
 4625              	.LCFI212:
 4626              		.cfi_def_cfa_register 7
 4627 0006 7860     		str	r0, [r7, #4]
 4628 0008 0B46     		mov	r3, r1
 4629 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4630              		.loc 1 2502 0
 4631 000c 4FF00003 		mov	r3, #0
 4632 0010 FB73     		strb	r3, [r7, #15]
2503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 4633              		.loc 1 2503 0
 4634 0012 4FF00003 		mov	r3, #0
 4635 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 4636 0018 4FF00003 		mov	r3, #0
 4637 001c 7B81     		strh	r3, [r7, #10]	@ movhi
2504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 4638              		.loc 1 2508 0
 4639 001e 7B68     		ldr	r3, [r7, #4]
 4640 0020 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4641 0022 9AB2     		uxth	r2, r3
 4642 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4643 0026 1340     		ands	r3, r3, r2
 4644 0028 BB81     		strh	r3, [r7, #12]	@ movhi
2509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 4645              		.loc 1 2510 0
 4646 002a 7B68     		ldr	r3, [r7, #4]
 4647 002c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4648 002e 9AB2     		uxth	r2, r3
 4649 0030 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4650 0032 1340     		ands	r3, r3, r2
 4651 0034 7B81     		strh	r3, [r7, #10]	@ movhi
2511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4652              		.loc 1 2511 0
 4653 0036 BB89     		ldrh	r3, [r7, #12]
 4654 0038 002B     		cmp	r3, #0
 4655 003a 06D0     		beq	.L130
 4656              		.loc 1 2511 0 is_stmt 0 discriminator 1
 4657 003c 7B89     		ldrh	r3, [r7, #10]
 4658 003e 002B     		cmp	r3, #0
 4659 0040 03D0     		beq	.L130
2512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4660              		.loc 1 2513 0 is_stmt 1
 4661 0042 4FF00103 		mov	r3, #1
 4662 0046 FB73     		strb	r3, [r7, #15]
 4663 0048 02E0     		b	.L131
 4664              	.L130:
2514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4665              		.loc 1 2517 0
 4666 004a 4FF00003 		mov	r3, #0
 4667 004e FB73     		strb	r3, [r7, #15]
 4668              	.L131:
2518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4669              		.loc 1 2519 0
 4670 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4671              		.loc 1 2520 0
 4672 0052 1846     		mov	r0, r3
 4673 0054 07F11407 		add	r7, r7, #20
 4674 0058 BD46     		mov	sp, r7
 4675 005a 80BC     		pop	{r7}
 4676 005c 7047     		bx	lr
 4677              		.cfi_endproc
 4678              	.LFE180:
 4680 005e 00BF     		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 4681              		.align	2
 4682              		.global	TIM_ClearITPendingBit
 4683              		.thumb
 4684              		.thumb_func
 4686              	TIM_ClearITPendingBit:
 4687              	.LFB181:
2521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4688              		.loc 1 2542 0
 4689              		.cfi_startproc
 4690              		@ args = 0, pretend = 0, frame = 8
 4691              		@ frame_needed = 1, uses_anonymous_args = 0
 4692              		@ link register save eliminated.
 4693 0000 80B4     		push	{r7}
 4694              	.LCFI213:
 4695              		.cfi_def_cfa_offset 4
 4696              		.cfi_offset 7, -4
 4697 0002 83B0     		sub	sp, sp, #12
 4698              	.LCFI214:
 4699              		.cfi_def_cfa_offset 16
 4700 0004 00AF     		add	r7, sp, #0
 4701              	.LCFI215:
 4702              		.cfi_def_cfa_register 7
 4703 0006 7860     		str	r0, [r7, #4]
 4704 0008 0B46     		mov	r3, r1
 4705 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 4706              		.loc 1 2547 0
 4707 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4708 000e 6FEA0303 		mvn	r3, r3
 4709 0012 9AB2     		uxth	r2, r3
 4710 0014 7B68     		ldr	r3, [r7, #4]
 4711 0016 1A82     		strh	r2, [r3, #16]	@ movhi
2548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4712              		.loc 1 2548 0
 4713 0018 07F10C07 		add	r7, r7, #12
 4714 001c BD46     		mov	sp, r7
 4715 001e 80BC     		pop	{r7}
 4716 0020 7047     		bx	lr
 4717              		.cfi_endproc
 4718              	.LFE181:
 4720 0022 00BF     		.section	.text.TIM_DMAConfig,"ax",%progbits
 4721              		.align	2
 4722              		.global	TIM_DMAConfig
 4723              		.thumb
 4724              		.thumb_func
 4726              	TIM_DMAConfig:
 4727              	.LFB182:
2549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4728              		.loc 1 2579 0
 4729              		.cfi_startproc
 4730              		@ args = 0, pretend = 0, frame = 8
 4731              		@ frame_needed = 1, uses_anonymous_args = 0
 4732              		@ link register save eliminated.
 4733 0000 80B4     		push	{r7}
 4734              	.LCFI216:
 4735              		.cfi_def_cfa_offset 4
 4736              		.cfi_offset 7, -4
 4737 0002 83B0     		sub	sp, sp, #12
 4738              	.LCFI217:
 4739              		.cfi_def_cfa_offset 16
 4740 0004 00AF     		add	r7, sp, #0
 4741              	.LCFI218:
 4742              		.cfi_def_cfa_register 7
 4743 0006 7860     		str	r0, [r7, #4]
 4744 0008 1346     		mov	r3, r2
 4745 000a 0A46     		mov	r2, r1	@ movhi
 4746 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4747 000e 3B80     		strh	r3, [r7, #0]	@ movhi
2580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 4748              		.loc 1 2586 0
 4749 0010 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4750 0012 3B88     		ldrh	r3, [r7, #0]	@ movhi
 4751 0014 1343     		orrs	r3, r3, r2
 4752 0016 9AB2     		uxth	r2, r3
 4753 0018 7B68     		ldr	r3, [r7, #4]
 4754 001a A3F84820 		strh	r2, [r3, #72]	@ movhi
2587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4755              		.loc 1 2587 0
 4756 001e 07F10C07 		add	r7, r7, #12
 4757 0022 BD46     		mov	sp, r7
 4758 0024 80BC     		pop	{r7}
 4759 0026 7047     		bx	lr
 4760              		.cfi_endproc
 4761              	.LFE182:
 4763              		.section	.text.TIM_DMACmd,"ax",%progbits
 4764              		.align	2
 4765              		.global	TIM_DMACmd
 4766              		.thumb
 4767              		.thumb_func
 4769              	TIM_DMACmd:
 4770              	.LFB183:
2588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4771              		.loc 1 2606 0
 4772              		.cfi_startproc
 4773              		@ args = 0, pretend = 0, frame = 8
 4774              		@ frame_needed = 1, uses_anonymous_args = 0
 4775              		@ link register save eliminated.
 4776 0000 80B4     		push	{r7}
 4777              	.LCFI219:
 4778              		.cfi_def_cfa_offset 4
 4779              		.cfi_offset 7, -4
 4780 0002 83B0     		sub	sp, sp, #12
 4781              	.LCFI220:
 4782              		.cfi_def_cfa_offset 16
 4783 0004 00AF     		add	r7, sp, #0
 4784              	.LCFI221:
 4785              		.cfi_def_cfa_register 7
 4786 0006 7860     		str	r0, [r7, #4]
 4787 0008 1346     		mov	r3, r2
 4788 000a 0A46     		mov	r2, r1	@ movhi
 4789 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4790 000e 7B70     		strb	r3, [r7, #1]
2607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4791              		.loc 1 2612 0
 4792 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4793 0012 002B     		cmp	r3, #0
 4794 0014 08D0     		beq	.L135
2613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 4795              		.loc 1 2615 0
 4796 0016 7B68     		ldr	r3, [r7, #4]
 4797 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4798 001a 9AB2     		uxth	r2, r3
 4799 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4800 001e 1343     		orrs	r3, r3, r2
 4801 0020 9AB2     		uxth	r2, r3
 4802 0022 7B68     		ldr	r3, [r7, #4]
 4803 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 4804 0026 0AE0     		b	.L134
 4805              	.L135:
2616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 4806              		.loc 1 2620 0
 4807 0028 7B68     		ldr	r3, [r7, #4]
 4808 002a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4809 002c 9AB2     		uxth	r2, r3
 4810 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4811 0030 6FEA0303 		mvn	r3, r3
 4812 0034 9BB2     		uxth	r3, r3
 4813 0036 1340     		ands	r3, r3, r2
 4814 0038 9AB2     		uxth	r2, r3
 4815 003a 7B68     		ldr	r3, [r7, #4]
 4816 003c 9A81     		strh	r2, [r3, #12]	@ movhi
 4817              	.L134:
2621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4818              		.loc 1 2622 0
 4819 003e 07F10C07 		add	r7, r7, #12
 4820 0042 BD46     		mov	sp, r7
 4821 0044 80BC     		pop	{r7}
 4822 0046 7047     		bx	lr
 4823              		.cfi_endproc
 4824              	.LFE183:
 4826              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 4827              		.align	2
 4828              		.global	TIM_SelectCCDMA
 4829              		.thumb
 4830              		.thumb_func
 4832              	TIM_SelectCCDMA:
 4833              	.LFB184:
2623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4834              		.loc 1 2632 0
 4835              		.cfi_startproc
 4836              		@ args = 0, pretend = 0, frame = 8
 4837              		@ frame_needed = 1, uses_anonymous_args = 0
 4838              		@ link register save eliminated.
 4839 0000 80B4     		push	{r7}
 4840              	.LCFI222:
 4841              		.cfi_def_cfa_offset 4
 4842              		.cfi_offset 7, -4
 4843 0002 83B0     		sub	sp, sp, #12
 4844              	.LCFI223:
 4845              		.cfi_def_cfa_offset 16
 4846 0004 00AF     		add	r7, sp, #0
 4847              	.LCFI224:
 4848              		.cfi_def_cfa_register 7
 4849 0006 7860     		str	r0, [r7, #4]
 4850 0008 0B46     		mov	r3, r1
 4851 000a FB70     		strb	r3, [r7, #3]
2633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4852              		.loc 1 2637 0
 4853 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4854 000e 002B     		cmp	r3, #0
 4855 0010 08D0     		beq	.L138
2638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 4856              		.loc 1 2640 0
 4857 0012 7B68     		ldr	r3, [r7, #4]
 4858 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4859 0016 9BB2     		uxth	r3, r3
 4860 0018 43F00803 		orr	r3, r3, #8
 4861 001c 9AB2     		uxth	r2, r3
 4862 001e 7B68     		ldr	r3, [r7, #4]
 4863 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4864 0022 07E0     		b	.L137
 4865              	.L138:
2641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 4866              		.loc 1 2645 0
 4867 0024 7B68     		ldr	r3, [r7, #4]
 4868 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4869 0028 9BB2     		uxth	r3, r3
 4870 002a 23F00803 		bic	r3, r3, #8
 4871 002e 9AB2     		uxth	r2, r3
 4872 0030 7B68     		ldr	r3, [r7, #4]
 4873 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4874              	.L137:
2646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4875              		.loc 1 2647 0
 4876 0034 07F10C07 		add	r7, r7, #12
 4877 0038 BD46     		mov	sp, r7
 4878 003a 80BC     		pop	{r7}
 4879 003c 7047     		bx	lr
 4880              		.cfi_endproc
 4881              	.LFE184:
 4883 003e 00BF     		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 4884              		.align	2
 4885              		.global	TIM_InternalClockConfig
 4886              		.thumb
 4887              		.thumb_func
 4889              	TIM_InternalClockConfig:
 4890              	.LFB185:
2648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4891              		.loc 1 2671 0
 4892              		.cfi_startproc
 4893              		@ args = 0, pretend = 0, frame = 8
 4894              		@ frame_needed = 1, uses_anonymous_args = 0
 4895              		@ link register save eliminated.
 4896 0000 80B4     		push	{r7}
 4897              	.LCFI225:
 4898              		.cfi_def_cfa_offset 4
 4899              		.cfi_offset 7, -4
 4900 0002 83B0     		sub	sp, sp, #12
 4901              	.LCFI226:
 4902              		.cfi_def_cfa_offset 16
 4903 0004 00AF     		add	r7, sp, #0
 4904              	.LCFI227:
 4905              		.cfi_def_cfa_register 7
 4906 0006 7860     		str	r0, [r7, #4]
2672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 4907              		.loc 1 2676 0
 4908 0008 7B68     		ldr	r3, [r7, #4]
 4909 000a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4910 000c 9BB2     		uxth	r3, r3
 4911 000e 23F00703 		bic	r3, r3, #7
 4912 0012 9AB2     		uxth	r2, r3
 4913 0014 7B68     		ldr	r3, [r7, #4]
 4914 0016 1A81     		strh	r2, [r3, #8]	@ movhi
2677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4915              		.loc 1 2677 0
 4916 0018 07F10C07 		add	r7, r7, #12
 4917 001c BD46     		mov	sp, r7
 4918 001e 80BC     		pop	{r7}
 4919 0020 7047     		bx	lr
 4920              		.cfi_endproc
 4921              	.LFE185:
 4923 0022 00BF     		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 4924              		.align	2
 4925              		.global	TIM_ITRxExternalClockConfig
 4926              		.thumb
 4927              		.thumb_func
 4929              	TIM_ITRxExternalClockConfig:
 4930              	.LFB186:
2678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4931              		.loc 1 2692 0
 4932              		.cfi_startproc
 4933              		@ args = 0, pretend = 0, frame = 8
 4934              		@ frame_needed = 1, uses_anonymous_args = 0
 4935 0000 80B5     		push	{r7, lr}
 4936              	.LCFI228:
 4937              		.cfi_def_cfa_offset 8
 4938              		.cfi_offset 14, -4
 4939              		.cfi_offset 7, -8
 4940 0002 82B0     		sub	sp, sp, #8
 4941              	.LCFI229:
 4942              		.cfi_def_cfa_offset 16
 4943 0004 00AF     		add	r7, sp, #0
 4944              	.LCFI230:
 4945              		.cfi_def_cfa_register 7
 4946 0006 7860     		str	r0, [r7, #4]
 4947 0008 0B46     		mov	r3, r1
 4948 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 4949              		.loc 1 2698 0
 4950 000c 7B88     		ldrh	r3, [r7, #2]
 4951 000e 7868     		ldr	r0, [r7, #4]
 4952 0010 1946     		mov	r1, r3
 4953 0012 FFF7FEFF 		bl	TIM_SelectInputTrigger
2699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4954              		.loc 1 2701 0
 4955 0016 7B68     		ldr	r3, [r7, #4]
 4956 0018 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4957 001a 9BB2     		uxth	r3, r3
 4958 001c 43F00703 		orr	r3, r3, #7
 4959 0020 9AB2     		uxth	r2, r3
 4960 0022 7B68     		ldr	r3, [r7, #4]
 4961 0024 1A81     		strh	r2, [r3, #8]	@ movhi
2702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4962              		.loc 1 2702 0
 4963 0026 07F10807 		add	r7, r7, #8
 4964 002a BD46     		mov	sp, r7
 4965 002c 80BD     		pop	{r7, pc}
 4966              		.cfi_endproc
 4967              	.LFE186:
 4969 002e 00BF     		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 4970              		.align	2
 4971              		.global	TIM_TIxExternalClockConfig
 4972              		.thumb
 4973              		.thumb_func
 4975              	TIM_TIxExternalClockConfig:
 4976              	.LFB187:
2703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4977              		.loc 1 2723 0
 4978              		.cfi_startproc
 4979              		@ args = 0, pretend = 0, frame = 16
 4980              		@ frame_needed = 1, uses_anonymous_args = 0
 4981 0000 80B5     		push	{r7, lr}
 4982              	.LCFI231:
 4983              		.cfi_def_cfa_offset 8
 4984              		.cfi_offset 14, -4
 4985              		.cfi_offset 7, -8
 4986 0002 84B0     		sub	sp, sp, #16
 4987              	.LCFI232:
 4988              		.cfi_def_cfa_offset 24
 4989 0004 00AF     		add	r7, sp, #0
 4990              	.LCFI233:
 4991              		.cfi_def_cfa_register 7
 4992 0006 F860     		str	r0, [r7, #12]
 4993 0008 7981     		strh	r1, [r7, #10]	@ movhi
 4994 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 4995 000c FB80     		strh	r3, [r7, #6]	@ movhi
2724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 4996              		.loc 1 2730 0
 4997 000e 7B89     		ldrh	r3, [r7, #10]
 4998 0010 602B     		cmp	r3, #96
 4999 0012 08D1     		bne	.L143
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 5000              		.loc 1 2732 0
 5001 0014 3A89     		ldrh	r2, [r7, #8]
 5002 0016 FB88     		ldrh	r3, [r7, #6]
 5003 0018 F868     		ldr	r0, [r7, #12]
 5004 001a 1146     		mov	r1, r2
 5005 001c 4FF00102 		mov	r2, #1
 5006 0020 FFF7FEFF 		bl	TI2_Config
 5007 0024 07E0     		b	.L144
 5008              	.L143:
2733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 5009              		.loc 1 2736 0
 5010 0026 3A89     		ldrh	r2, [r7, #8]
 5011 0028 FB88     		ldrh	r3, [r7, #6]
 5012 002a F868     		ldr	r0, [r7, #12]
 5013 002c 1146     		mov	r1, r2
 5014 002e 4FF00102 		mov	r2, #1
 5015 0032 FFF7FEFF 		bl	TI1_Config
 5016              	.L144:
2737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 5017              		.loc 1 2739 0
 5018 0036 7B89     		ldrh	r3, [r7, #10]
 5019 0038 F868     		ldr	r0, [r7, #12]
 5020 003a 1946     		mov	r1, r3
 5021 003c FFF7FEFF 		bl	TIM_SelectInputTrigger
2740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 5022              		.loc 1 2741 0
 5023 0040 FB68     		ldr	r3, [r7, #12]
 5024 0042 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5025 0044 9BB2     		uxth	r3, r3
 5026 0046 43F00703 		orr	r3, r3, #7
 5027 004a 9AB2     		uxth	r2, r3
 5028 004c FB68     		ldr	r3, [r7, #12]
 5029 004e 1A81     		strh	r2, [r3, #8]	@ movhi
2742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5030              		.loc 1 2742 0
 5031 0050 07F11007 		add	r7, r7, #16
 5032 0054 BD46     		mov	sp, r7
 5033 0056 80BD     		pop	{r7, pc}
 5034              		.cfi_endproc
 5035              	.LFE187:
 5037              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 5038              		.align	2
 5039              		.global	TIM_ETRClockMode1Config
 5040              		.thumb
 5041              		.thumb_func
 5043              	TIM_ETRClockMode1Config:
 5044              	.LFB188:
2743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5045              		.loc 1 2763 0
 5046              		.cfi_startproc
 5047              		@ args = 0, pretend = 0, frame = 24
 5048              		@ frame_needed = 1, uses_anonymous_args = 0
 5049 0000 80B5     		push	{r7, lr}
 5050              	.LCFI234:
 5051              		.cfi_def_cfa_offset 8
 5052              		.cfi_offset 14, -4
 5053              		.cfi_offset 7, -8
 5054 0002 86B0     		sub	sp, sp, #24
 5055              	.LCFI235:
 5056              		.cfi_def_cfa_offset 32
 5057 0004 00AF     		add	r7, sp, #0
 5058              	.LCFI236:
 5059              		.cfi_def_cfa_register 7
 5060 0006 F860     		str	r0, [r7, #12]
 5061 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5062 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5063 000c FB80     		strh	r3, [r7, #6]	@ movhi
2764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5064              		.loc 1 2764 0
 5065 000e 4FF00003 		mov	r3, #0
 5066 0012 FB82     		strh	r3, [r7, #22]	@ movhi
2765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5067              		.loc 1 2772 0
 5068 0014 7989     		ldrh	r1, [r7, #10]
 5069 0016 3A89     		ldrh	r2, [r7, #8]
 5070 0018 FB88     		ldrh	r3, [r7, #6]
 5071 001a F868     		ldr	r0, [r7, #12]
 5072 001c FFF7FEFF 		bl	TIM_ETRConfig
2773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5073              		.loc 1 2775 0
 5074 0020 FB68     		ldr	r3, [r7, #12]
 5075 0022 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5076 0024 FB82     		strh	r3, [r7, #22]	@ movhi
2776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5077              		.loc 1 2778 0
 5078 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5079 0028 23F00703 		bic	r3, r3, #7
 5080 002c FB82     		strh	r3, [r7, #22]	@ movhi
2779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 5081              		.loc 1 2781 0
 5082 002e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5083 0030 43F00703 		orr	r3, r3, #7
 5084 0034 FB82     		strh	r3, [r7, #22]	@ movhi
2782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5085              		.loc 1 2784 0
 5086 0036 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5087 0038 23F07003 		bic	r3, r3, #112
 5088 003c FB82     		strh	r3, [r7, #22]	@ movhi
2785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 5089              		.loc 1 2785 0
 5090 003e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5091 0040 43F07003 		orr	r3, r3, #112
 5092 0044 FB82     		strh	r3, [r7, #22]	@ movhi
2786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5093              		.loc 1 2788 0
 5094 0046 FB68     		ldr	r3, [r7, #12]
 5095 0048 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5096 004a 1A81     		strh	r2, [r3, #8]	@ movhi
2789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5097              		.loc 1 2789 0
 5098 004c 07F11807 		add	r7, r7, #24
 5099 0050 BD46     		mov	sp, r7
 5100 0052 80BD     		pop	{r7, pc}
 5101              		.cfi_endproc
 5102              	.LFE188:
 5104              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 5105              		.align	2
 5106              		.global	TIM_ETRClockMode2Config
 5107              		.thumb
 5108              		.thumb_func
 5110              	TIM_ETRClockMode2Config:
 5111              	.LFB189:
2790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5112              		.loc 1 2810 0
 5113              		.cfi_startproc
 5114              		@ args = 0, pretend = 0, frame = 16
 5115              		@ frame_needed = 1, uses_anonymous_args = 0
 5116 0000 80B5     		push	{r7, lr}
 5117              	.LCFI237:
 5118              		.cfi_def_cfa_offset 8
 5119              		.cfi_offset 14, -4
 5120              		.cfi_offset 7, -8
 5121 0002 84B0     		sub	sp, sp, #16
 5122              	.LCFI238:
 5123              		.cfi_def_cfa_offset 24
 5124 0004 00AF     		add	r7, sp, #0
 5125              	.LCFI239:
 5126              		.cfi_def_cfa_register 7
 5127 0006 F860     		str	r0, [r7, #12]
 5128 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5129 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5130 000c FB80     		strh	r3, [r7, #6]	@ movhi
2811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5131              		.loc 1 2818 0
 5132 000e 7989     		ldrh	r1, [r7, #10]
 5133 0010 3A89     		ldrh	r2, [r7, #8]
 5134 0012 FB88     		ldrh	r3, [r7, #6]
 5135 0014 F868     		ldr	r0, [r7, #12]
 5136 0016 FFF7FEFF 		bl	TIM_ETRConfig
2819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 5137              		.loc 1 2821 0
 5138 001a FB68     		ldr	r3, [r7, #12]
 5139 001c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5140 001e 9BB2     		uxth	r3, r3
 5141 0020 43F48043 		orr	r3, r3, #16384
 5142 0024 9AB2     		uxth	r2, r3
 5143 0026 FB68     		ldr	r3, [r7, #12]
 5144 0028 1A81     		strh	r2, [r3, #8]	@ movhi
2822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5145              		.loc 1 2822 0
 5146 002a 07F11007 		add	r7, r7, #16
 5147 002e BD46     		mov	sp, r7
 5148 0030 80BD     		pop	{r7, pc}
 5149              		.cfi_endproc
 5150              	.LFE189:
 5152 0032 00BF     		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 5153              		.align	2
 5154              		.global	TIM_SelectInputTrigger
 5155              		.thumb
 5156              		.thumb_func
 5158              	TIM_SelectInputTrigger:
 5159              	.LFB190:
2823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5160              		.loc 1 2877 0
 5161              		.cfi_startproc
 5162              		@ args = 0, pretend = 0, frame = 16
 5163              		@ frame_needed = 1, uses_anonymous_args = 0
 5164              		@ link register save eliminated.
 5165 0000 80B4     		push	{r7}
 5166              	.LCFI240:
 5167              		.cfi_def_cfa_offset 4
 5168              		.cfi_offset 7, -4
 5169 0002 85B0     		sub	sp, sp, #20
 5170              	.LCFI241:
 5171              		.cfi_def_cfa_offset 24
 5172 0004 00AF     		add	r7, sp, #0
 5173              	.LCFI242:
 5174              		.cfi_def_cfa_register 7
 5175 0006 7860     		str	r0, [r7, #4]
 5176 0008 0B46     		mov	r3, r1
 5177 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5178              		.loc 1 2878 0
 5179 000c 4FF00003 		mov	r3, #0
 5180 0010 FB81     		strh	r3, [r7, #14]	@ movhi
2879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5181              		.loc 1 2885 0
 5182 0012 7B68     		ldr	r3, [r7, #4]
 5183 0014 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5184 0016 FB81     		strh	r3, [r7, #14]	@ movhi
2886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5185              		.loc 1 2888 0
 5186 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5187 001a 23F07003 		bic	r3, r3, #112
 5188 001e FB81     		strh	r3, [r7, #14]	@ movhi
2889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 5189              		.loc 1 2891 0
 5190 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5191 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5192 0024 1343     		orrs	r3, r3, r2
 5193 0026 FB81     		strh	r3, [r7, #14]	@ movhi
2892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5194              		.loc 1 2894 0
 5195 0028 7B68     		ldr	r3, [r7, #4]
 5196 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 5197 002c 1A81     		strh	r2, [r3, #8]	@ movhi
2895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5198              		.loc 1 2895 0
 5199 002e 07F11407 		add	r7, r7, #20
 5200 0032 BD46     		mov	sp, r7
 5201 0034 80BC     		pop	{r7}
 5202 0036 7047     		bx	lr
 5203              		.cfi_endproc
 5204              	.LFE190:
 5206              		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 5207              		.align	2
 5208              		.global	TIM_SelectOutputTrigger
 5209              		.thumb
 5210              		.thumb_func
 5212              	TIM_SelectOutputTrigger:
 5213              	.LFB191:
2896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5214              		.loc 1 2920 0
 5215              		.cfi_startproc
 5216              		@ args = 0, pretend = 0, frame = 8
 5217              		@ frame_needed = 1, uses_anonymous_args = 0
 5218              		@ link register save eliminated.
 5219 0000 80B4     		push	{r7}
 5220              	.LCFI243:
 5221              		.cfi_def_cfa_offset 4
 5222              		.cfi_offset 7, -4
 5223 0002 83B0     		sub	sp, sp, #12
 5224              	.LCFI244:
 5225              		.cfi_def_cfa_offset 16
 5226 0004 00AF     		add	r7, sp, #0
 5227              	.LCFI245:
 5228              		.cfi_def_cfa_register 7
 5229 0006 7860     		str	r0, [r7, #4]
 5230 0008 0B46     		mov	r3, r1
 5231 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 5232              		.loc 1 2926 0
 5233 000c 7B68     		ldr	r3, [r7, #4]
 5234 000e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5235 0010 9BB2     		uxth	r3, r3
 5236 0012 23F07003 		bic	r3, r3, #112
 5237 0016 9AB2     		uxth	r2, r3
 5238 0018 7B68     		ldr	r3, [r7, #4]
 5239 001a 9A80     		strh	r2, [r3, #4]	@ movhi
2927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 5240              		.loc 1 2928 0
 5241 001c 7B68     		ldr	r3, [r7, #4]
 5242 001e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5243 0020 9AB2     		uxth	r2, r3
 5244 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5245 0024 1343     		orrs	r3, r3, r2
 5246 0026 9AB2     		uxth	r2, r3
 5247 0028 7B68     		ldr	r3, [r7, #4]
 5248 002a 9A80     		strh	r2, [r3, #4]	@ movhi
2929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5249              		.loc 1 2929 0
 5250 002c 07F10C07 		add	r7, r7, #12
 5251 0030 BD46     		mov	sp, r7
 5252 0032 80BC     		pop	{r7}
 5253 0034 7047     		bx	lr
 5254              		.cfi_endproc
 5255              	.LFE191:
 5257 0036 00BF     		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 5258              		.align	2
 5259              		.global	TIM_SelectSlaveMode
 5260              		.thumb
 5261              		.thumb_func
 5263              	TIM_SelectSlaveMode:
 5264              	.LFB192:
2930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5265              		.loc 1 2944 0
 5266              		.cfi_startproc
 5267              		@ args = 0, pretend = 0, frame = 8
 5268              		@ frame_needed = 1, uses_anonymous_args = 0
 5269              		@ link register save eliminated.
 5270 0000 80B4     		push	{r7}
 5271              	.LCFI246:
 5272              		.cfi_def_cfa_offset 4
 5273              		.cfi_offset 7, -4
 5274 0002 83B0     		sub	sp, sp, #12
 5275              	.LCFI247:
 5276              		.cfi_def_cfa_offset 16
 5277 0004 00AF     		add	r7, sp, #0
 5278              	.LCFI248:
 5279              		.cfi_def_cfa_register 7
 5280 0006 7860     		str	r0, [r7, #4]
 5281 0008 0B46     		mov	r3, r1
 5282 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 5283              		.loc 1 2950 0
 5284 000c 7B68     		ldr	r3, [r7, #4]
 5285 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5286 0010 9BB2     		uxth	r3, r3
 5287 0012 23F00703 		bic	r3, r3, #7
 5288 0016 9AB2     		uxth	r2, r3
 5289 0018 7B68     		ldr	r3, [r7, #4]
 5290 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 5291              		.loc 1 2953 0
 5292 001c 7B68     		ldr	r3, [r7, #4]
 5293 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5294 0020 9AB2     		uxth	r2, r3
 5295 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5296 0024 1343     		orrs	r3, r3, r2
 5297 0026 9AB2     		uxth	r2, r3
 5298 0028 7B68     		ldr	r3, [r7, #4]
 5299 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5300              		.loc 1 2954 0
 5301 002c 07F10C07 		add	r7, r7, #12
 5302 0030 BD46     		mov	sp, r7
 5303 0032 80BC     		pop	{r7}
 5304 0034 7047     		bx	lr
 5305              		.cfi_endproc
 5306              	.LFE192:
 5308 0036 00BF     		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 5309              		.align	2
 5310              		.global	TIM_SelectMasterSlaveMode
 5311              		.thumb
 5312              		.thumb_func
 5314              	TIM_SelectMasterSlaveMode:
 5315              	.LFB193:
2955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5316              		.loc 1 2967 0
 5317              		.cfi_startproc
 5318              		@ args = 0, pretend = 0, frame = 8
 5319              		@ frame_needed = 1, uses_anonymous_args = 0
 5320              		@ link register save eliminated.
 5321 0000 80B4     		push	{r7}
 5322              	.LCFI249:
 5323              		.cfi_def_cfa_offset 4
 5324              		.cfi_offset 7, -4
 5325 0002 83B0     		sub	sp, sp, #12
 5326              	.LCFI250:
 5327              		.cfi_def_cfa_offset 16
 5328 0004 00AF     		add	r7, sp, #0
 5329              	.LCFI251:
 5330              		.cfi_def_cfa_register 7
 5331 0006 7860     		str	r0, [r7, #4]
 5332 0008 0B46     		mov	r3, r1
 5333 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 5334              		.loc 1 2973 0
 5335 000c 7B68     		ldr	r3, [r7, #4]
 5336 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5337 0010 9BB2     		uxth	r3, r3
 5338 0012 23F08003 		bic	r3, r3, #128
 5339 0016 9AB2     		uxth	r2, r3
 5340 0018 7B68     		ldr	r3, [r7, #4]
 5341 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 5342              		.loc 1 2976 0
 5343 001c 7B68     		ldr	r3, [r7, #4]
 5344 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5345 0020 9AB2     		uxth	r2, r3
 5346 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5347 0024 1343     		orrs	r3, r3, r2
 5348 0026 9AB2     		uxth	r2, r3
 5349 0028 7B68     		ldr	r3, [r7, #4]
 5350 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5351              		.loc 1 2977 0
 5352 002c 07F10C07 		add	r7, r7, #12
 5353 0030 BD46     		mov	sp, r7
 5354 0032 80BC     		pop	{r7}
 5355 0034 7047     		bx	lr
 5356              		.cfi_endproc
 5357              	.LFE193:
 5359 0036 00BF     		.section	.text.TIM_ETRConfig,"ax",%progbits
 5360              		.align	2
 5361              		.global	TIM_ETRConfig
 5362              		.thumb
 5363              		.thumb_func
 5365              	TIM_ETRConfig:
 5366              	.LFB194:
2978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5367              		.loc 1 2998 0
 5368              		.cfi_startproc
 5369              		@ args = 0, pretend = 0, frame = 24
 5370              		@ frame_needed = 1, uses_anonymous_args = 0
 5371              		@ link register save eliminated.
 5372 0000 80B4     		push	{r7}
 5373              	.LCFI252:
 5374              		.cfi_def_cfa_offset 4
 5375              		.cfi_offset 7, -4
 5376 0002 87B0     		sub	sp, sp, #28
 5377              	.LCFI253:
 5378              		.cfi_def_cfa_offset 32
 5379 0004 00AF     		add	r7, sp, #0
 5380              	.LCFI254:
 5381              		.cfi_def_cfa_register 7
 5382 0006 F860     		str	r0, [r7, #12]
 5383 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5384 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5385 000c FB80     		strh	r3, [r7, #6]	@ movhi
2999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5386              		.loc 1 2999 0
 5387 000e 4FF00003 		mov	r3, #0
 5388 0012 FB82     		strh	r3, [r7, #22]	@ movhi
3000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5389              		.loc 1 3007 0
 5390 0014 FB68     		ldr	r3, [r7, #12]
 5391 0016 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5392 0018 FB82     		strh	r3, [r7, #22]	@ movhi
3008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 5393              		.loc 1 3010 0
 5394 001a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5395 001c DBB2     		uxtb	r3, r3
 5396 001e FB82     		strh	r3, [r7, #22]	@ movhi
3011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 5397              		.loc 1 3013 0
 5398 0020 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5399 0022 4FEA0323 		lsl	r3, r3, #8
 5400 0026 9AB2     		uxth	r2, r3
 5401 0028 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5402 002a 1343     		orrs	r3, r3, r2
 5403 002c 9AB2     		uxth	r2, r3
 5404 002e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5405 0030 1343     		orrs	r3, r3, r2
 5406 0032 9AB2     		uxth	r2, r3
 5407 0034 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5408 0036 1343     		orrs	r3, r3, r2
 5409 0038 FB82     		strh	r3, [r7, #22]	@ movhi
3014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5410              		.loc 1 3016 0
 5411 003a FB68     		ldr	r3, [r7, #12]
 5412 003c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5413 003e 1A81     		strh	r2, [r3, #8]	@ movhi
3017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5414              		.loc 1 3017 0
 5415 0040 07F11C07 		add	r7, r7, #28
 5416 0044 BD46     		mov	sp, r7
 5417 0046 80BC     		pop	{r7}
 5418 0048 7047     		bx	lr
 5419              		.cfi_endproc
 5420              	.LFE194:
 5422 004a 00BF     		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 5423              		.align	2
 5424              		.global	TIM_EncoderInterfaceConfig
 5425              		.thumb
 5426              		.thumb_func
 5428              	TIM_EncoderInterfaceConfig:
 5429              	.LFB195:
3018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5430              		.loc 1 3056 0
 5431              		.cfi_startproc
 5432              		@ args = 0, pretend = 0, frame = 24
 5433              		@ frame_needed = 1, uses_anonymous_args = 0
 5434              		@ link register save eliminated.
 5435 0000 80B4     		push	{r7}
 5436              	.LCFI255:
 5437              		.cfi_def_cfa_offset 4
 5438              		.cfi_offset 7, -4
 5439 0002 87B0     		sub	sp, sp, #28
 5440              	.LCFI256:
 5441              		.cfi_def_cfa_offset 32
 5442 0004 00AF     		add	r7, sp, #0
 5443              	.LCFI257:
 5444              		.cfi_def_cfa_register 7
 5445 0006 F860     		str	r0, [r7, #12]
 5446 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5447 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5448 000c FB80     		strh	r3, [r7, #6]	@ movhi
3057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5449              		.loc 1 3057 0
 5450 000e 4FF00003 		mov	r3, #0
 5451 0012 FB82     		strh	r3, [r7, #22]	@ movhi
3058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5452              		.loc 1 3058 0
 5453 0014 4FF00003 		mov	r3, #0
 5454 0018 BB82     		strh	r3, [r7, #20]	@ movhi
3059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 5455              		.loc 1 3059 0
 5456 001a 4FF00003 		mov	r3, #0
 5457 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5458              		.loc 1 3068 0
 5459 0020 FB68     		ldr	r3, [r7, #12]
 5460 0022 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5461 0024 FB82     		strh	r3, [r7, #22]	@ movhi
3069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5462              		.loc 1 3071 0
 5463 0026 FB68     		ldr	r3, [r7, #12]
 5464 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5465 002a BB82     		strh	r3, [r7, #20]	@ movhi
3072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5466              		.loc 1 3074 0
 5467 002c FB68     		ldr	r3, [r7, #12]
 5468 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5469 0030 7B82     		strh	r3, [r7, #18]	@ movhi
3075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5470              		.loc 1 3077 0
 5471 0032 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5472 0034 23F00703 		bic	r3, r3, #7
 5473 0038 FB82     		strh	r3, [r7, #22]	@ movhi
3078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 5474              		.loc 1 3078 0
 5475 003a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5476 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5477 003e 1343     		orrs	r3, r3, r2
 5478 0040 FB82     		strh	r3, [r7, #22]	@ movhi
3079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 5479              		.loc 1 3081 0
 5480 0042 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5481 0044 23F44073 		bic	r3, r3, #768
 5482 0048 23F00303 		bic	r3, r3, #3
 5483 004c BB82     		strh	r3, [r7, #20]	@ movhi
3082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 5484              		.loc 1 3082 0
 5485 004e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5486 0050 43F48073 		orr	r3, r3, #256
 5487 0054 43F00103 		orr	r3, r3, #1
 5488 0058 BB82     		strh	r3, [r7, #20]	@ movhi
3083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 5489              		.loc 1 3085 0
 5490 005a 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5491 005c 23F02203 		bic	r3, r3, #34
 5492 0060 7B82     		strh	r3, [r7, #18]	@ movhi
3086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 5493              		.loc 1 3086 0
 5494 0062 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5495 0064 4FEA0313 		lsl	r3, r3, #4
 5496 0068 9AB2     		uxth	r2, r3
 5497 006a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5498 006c 1343     		orrs	r3, r3, r2
 5499 006e 9AB2     		uxth	r2, r3
 5500 0070 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5501 0072 1343     		orrs	r3, r3, r2
 5502 0074 7B82     		strh	r3, [r7, #18]	@ movhi
3087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5503              		.loc 1 3089 0
 5504 0076 FB68     		ldr	r3, [r7, #12]
 5505 0078 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5506 007a 1A81     		strh	r2, [r3, #8]	@ movhi
3090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5507              		.loc 1 3092 0
 5508 007c FB68     		ldr	r3, [r7, #12]
 5509 007e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5510 0080 1A83     		strh	r2, [r3, #24]	@ movhi
3093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5511              		.loc 1 3095 0
 5512 0082 FB68     		ldr	r3, [r7, #12]
 5513 0084 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5514 0086 1A84     		strh	r2, [r3, #32]	@ movhi
3096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5515              		.loc 1 3096 0
 5516 0088 07F11C07 		add	r7, r7, #28
 5517 008c BD46     		mov	sp, r7
 5518 008e 80BC     		pop	{r7}
 5519 0090 7047     		bx	lr
 5520              		.cfi_endproc
 5521              	.LFE195:
 5523 0092 00BF     		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 5524              		.align	2
 5525              		.global	TIM_SelectHallSensor
 5526              		.thumb
 5527              		.thumb_func
 5529              	TIM_SelectHallSensor:
 5530              	.LFB196:
3097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5531              		.loc 1 3107 0
 5532              		.cfi_startproc
 5533              		@ args = 0, pretend = 0, frame = 8
 5534              		@ frame_needed = 1, uses_anonymous_args = 0
 5535              		@ link register save eliminated.
 5536 0000 80B4     		push	{r7}
 5537              	.LCFI258:
 5538              		.cfi_def_cfa_offset 4
 5539              		.cfi_offset 7, -4
 5540 0002 83B0     		sub	sp, sp, #12
 5541              	.LCFI259:
 5542              		.cfi_def_cfa_offset 16
 5543 0004 00AF     		add	r7, sp, #0
 5544              	.LCFI260:
 5545              		.cfi_def_cfa_register 7
 5546 0006 7860     		str	r0, [r7, #4]
 5547 0008 0B46     		mov	r3, r1
 5548 000a FB70     		strb	r3, [r7, #3]
3108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 5549              		.loc 1 3112 0
 5550 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5551 000e 002B     		cmp	r3, #0
 5552 0010 08D0     		beq	.L154
3113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 5553              		.loc 1 3115 0
 5554 0012 7B68     		ldr	r3, [r7, #4]
 5555 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5556 0016 9BB2     		uxth	r3, r3
 5557 0018 43F08003 		orr	r3, r3, #128
 5558 001c 9AB2     		uxth	r2, r3
 5559 001e 7B68     		ldr	r3, [r7, #4]
 5560 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 5561 0022 07E0     		b	.L153
 5562              	.L154:
3116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 5563              		.loc 1 3120 0
 5564 0024 7B68     		ldr	r3, [r7, #4]
 5565 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5566 0028 9BB2     		uxth	r3, r3
 5567 002a 23F08003 		bic	r3, r3, #128
 5568 002e 9AB2     		uxth	r2, r3
 5569 0030 7B68     		ldr	r3, [r7, #4]
 5570 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 5571              	.L153:
3121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5572              		.loc 1 3122 0
 5573 0034 07F10C07 		add	r7, r7, #12
 5574 0038 BD46     		mov	sp, r7
 5575 003a 80BC     		pop	{r7}
 5576 003c 7047     		bx	lr
 5577              		.cfi_endproc
 5578              	.LFE196:
 5580 003e 00BF     		.section	.text.TIM_RemapConfig,"ax",%progbits
 5581              		.align	2
 5582              		.global	TIM_RemapConfig
 5583              		.thumb
 5584              		.thumb_func
 5586              	TIM_RemapConfig:
 5587              	.LFB197:
3123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5588              		.loc 1 3158 0
 5589              		.cfi_startproc
 5590              		@ args = 0, pretend = 0, frame = 8
 5591              		@ frame_needed = 1, uses_anonymous_args = 0
 5592              		@ link register save eliminated.
 5593 0000 80B4     		push	{r7}
 5594              	.LCFI261:
 5595              		.cfi_def_cfa_offset 4
 5596              		.cfi_offset 7, -4
 5597 0002 83B0     		sub	sp, sp, #12
 5598              	.LCFI262:
 5599              		.cfi_def_cfa_offset 16
 5600 0004 00AF     		add	r7, sp, #0
 5601              	.LCFI263:
 5602              		.cfi_def_cfa_register 7
 5603 0006 7860     		str	r0, [r7, #4]
 5604 0008 0B46     		mov	r3, r1
 5605 000a 7B80     		strh	r3, [r7, #2]	@ movhi
3159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 5606              		.loc 1 3164 0
 5607 000c 7B68     		ldr	r3, [r7, #4]
 5608 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5609 0010 A3F85020 		strh	r2, [r3, #80]	@ movhi
3165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5610              		.loc 1 3165 0
 5611 0014 07F10C07 		add	r7, r7, #12
 5612 0018 BD46     		mov	sp, r7
 5613 001a 80BC     		pop	{r7}
 5614 001c 7047     		bx	lr
 5615              		.cfi_endproc
 5616              	.LFE197:
 5618 001e 00BF     		.section	.text.TI1_Config,"ax",%progbits
 5619              		.align	2
 5620              		.thumb
 5621              		.thumb_func
 5623              	TI1_Config:
 5624              	.LFB198:
3166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5625              		.loc 1 3190 0
 5626              		.cfi_startproc
 5627              		@ args = 0, pretend = 0, frame = 24
 5628              		@ frame_needed = 1, uses_anonymous_args = 0
 5629              		@ link register save eliminated.
 5630 0000 80B4     		push	{r7}
 5631              	.LCFI264:
 5632              		.cfi_def_cfa_offset 4
 5633              		.cfi_offset 7, -4
 5634 0002 87B0     		sub	sp, sp, #28
 5635              	.LCFI265:
 5636              		.cfi_def_cfa_offset 32
 5637 0004 00AF     		add	r7, sp, #0
 5638              	.LCFI266:
 5639              		.cfi_def_cfa_register 7
 5640 0006 F860     		str	r0, [r7, #12]
 5641 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5642 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5643 000c FB80     		strh	r3, [r7, #6]	@ movhi
3191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 5644              		.loc 1 3191 0
 5645 000e 4FF00003 		mov	r3, #0
 5646 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5647 0014 4FF00003 		mov	r3, #0
 5648 0018 BB82     		strh	r3, [r7, #20]	@ movhi
3192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 5649              		.loc 1 3194 0
 5650 001a FB68     		ldr	r3, [r7, #12]
 5651 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5652 001e 9BB2     		uxth	r3, r3
 5653 0020 23F00103 		bic	r3, r3, #1
 5654 0024 9AB2     		uxth	r2, r3
 5655 0026 FB68     		ldr	r3, [r7, #12]
 5656 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5657              		.loc 1 3195 0
 5658 002a FB68     		ldr	r3, [r7, #12]
 5659 002c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5660 002e FB82     		strh	r3, [r7, #22]	@ movhi
3196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5661              		.loc 1 3196 0
 5662 0030 FB68     		ldr	r3, [r7, #12]
 5663 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5664 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 5665              		.loc 1 3199 0
 5666 0036 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5667 0038 23F0F303 		bic	r3, r3, #243
 5668 003c FB82     		strh	r3, [r7, #22]	@ movhi
3200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5669              		.loc 1 3200 0
 5670 003e FB88     		ldrh	r3, [r7, #6]	@ movhi
 5671 0040 4FEA0313 		lsl	r3, r3, #4
 5672 0044 9AB2     		uxth	r2, r3
 5673 0046 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5674 0048 1343     		orrs	r3, r3, r2
 5675 004a 9AB2     		uxth	r2, r3
 5676 004c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5677 004e 1343     		orrs	r3, r3, r2
 5678 0050 FB82     		strh	r3, [r7, #22]	@ movhi
3201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 5679              		.loc 1 3203 0
 5680 0052 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5681 0054 23F00A03 		bic	r3, r3, #10
 5682 0058 BB82     		strh	r3, [r7, #20]	@ movhi
3204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 5683              		.loc 1 3204 0
 5684 005a 7A89     		ldrh	r2, [r7, #10]	@ movhi
 5685 005c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5686 005e 1343     		orrs	r3, r3, r2
 5687 0060 9BB2     		uxth	r3, r3
 5688 0062 43F00103 		orr	r3, r3, #1
 5689 0066 BB82     		strh	r3, [r7, #20]	@ movhi
3205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5690              		.loc 1 3207 0
 5691 0068 FB68     		ldr	r3, [r7, #12]
 5692 006a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5693 006c 1A83     		strh	r2, [r3, #24]	@ movhi
3208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5694              		.loc 1 3208 0
 5695 006e FB68     		ldr	r3, [r7, #12]
 5696 0070 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5697 0072 1A84     		strh	r2, [r3, #32]	@ movhi
3209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5698              		.loc 1 3209 0
 5699 0074 07F11C07 		add	r7, r7, #28
 5700 0078 BD46     		mov	sp, r7
 5701 007a 80BC     		pop	{r7}
 5702 007c 7047     		bx	lr
 5703              		.cfi_endproc
 5704              	.LFE198:
 5706 007e 00BF     		.section	.text.TI2_Config,"ax",%progbits
 5707              		.align	2
 5708              		.thumb
 5709              		.thumb_func
 5711              	TI2_Config:
 5712              	.LFB199:
3210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5713              		.loc 1 3231 0
 5714              		.cfi_startproc
 5715              		@ args = 0, pretend = 0, frame = 24
 5716              		@ frame_needed = 1, uses_anonymous_args = 0
 5717              		@ link register save eliminated.
 5718 0000 80B4     		push	{r7}
 5719              	.LCFI267:
 5720              		.cfi_def_cfa_offset 4
 5721              		.cfi_offset 7, -4
 5722 0002 87B0     		sub	sp, sp, #28
 5723              	.LCFI268:
 5724              		.cfi_def_cfa_offset 32
 5725 0004 00AF     		add	r7, sp, #0
 5726              	.LCFI269:
 5727              		.cfi_def_cfa_register 7
 5728 0006 F860     		str	r0, [r7, #12]
 5729 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5730 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5731 000c FB80     		strh	r3, [r7, #6]	@ movhi
3232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 5732              		.loc 1 3232 0
 5733 000e 4FF00003 		mov	r3, #0
 5734 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5735 0014 4FF00003 		mov	r3, #0
 5736 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 5737 001a 4FF00003 		mov	r3, #0
 5738 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 5739              		.loc 1 3235 0
 5740 0020 FB68     		ldr	r3, [r7, #12]
 5741 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5742 0024 9BB2     		uxth	r3, r3
 5743 0026 23F01003 		bic	r3, r3, #16
 5744 002a 9AB2     		uxth	r2, r3
 5745 002c FB68     		ldr	r3, [r7, #12]
 5746 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5747              		.loc 1 3236 0
 5748 0030 FB68     		ldr	r3, [r7, #12]
 5749 0032 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5750 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5751              		.loc 1 3237 0
 5752 0036 FB68     		ldr	r3, [r7, #12]
 5753 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5754 003a BB82     		strh	r3, [r7, #20]	@ movhi
3238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 5755              		.loc 1 3238 0
 5756 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5757 003e 4FEA0313 		lsl	r3, r3, #4
 5758 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5759              		.loc 1 3241 0
 5760 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5761 0046 23F44073 		bic	r3, r3, #768
 5762 004a 4FEA0353 		lsl	r3, r3, #20
 5763 004e 4FEA1353 		lsr	r3, r3, #20
 5764 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 5765              		.loc 1 3242 0
 5766 0054 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5767 0056 4FEA0333 		lsl	r3, r3, #12
 5768 005a 9AB2     		uxth	r2, r3
 5769 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5770 005e 1343     		orrs	r3, r3, r2
 5771 0060 FB82     		strh	r3, [r7, #22]	@ movhi
3243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 5772              		.loc 1 3243 0
 5773 0062 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5774 0064 4FEA0323 		lsl	r3, r3, #8
 5775 0068 9AB2     		uxth	r2, r3
 5776 006a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5777 006c 1343     		orrs	r3, r3, r2
 5778 006e FB82     		strh	r3, [r7, #22]	@ movhi
3244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 5779              		.loc 1 3246 0
 5780 0070 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5781 0072 23F0A003 		bic	r3, r3, #160
 5782 0076 BB82     		strh	r3, [r7, #20]	@ movhi
3247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 5783              		.loc 1 3247 0
 5784 0078 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5785 007a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5786 007c 1343     		orrs	r3, r3, r2
 5787 007e 9BB2     		uxth	r3, r3
 5788 0080 43F01003 		orr	r3, r3, #16
 5789 0084 BB82     		strh	r3, [r7, #20]	@ movhi
3248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 5790              		.loc 1 3250 0
 5791 0086 FB68     		ldr	r3, [r7, #12]
 5792 0088 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5793 008a 1A83     		strh	r2, [r3, #24]	@ movhi
3251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5794              		.loc 1 3251 0
 5795 008c FB68     		ldr	r3, [r7, #12]
 5796 008e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5797 0090 1A84     		strh	r2, [r3, #32]	@ movhi
3252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5798              		.loc 1 3252 0
 5799 0092 07F11C07 		add	r7, r7, #28
 5800 0096 BD46     		mov	sp, r7
 5801 0098 80BC     		pop	{r7}
 5802 009a 7047     		bx	lr
 5803              		.cfi_endproc
 5804              	.LFE199:
 5806              		.section	.text.TI3_Config,"ax",%progbits
 5807              		.align	2
 5808              		.thumb
 5809              		.thumb_func
 5811              	TI3_Config:
 5812              	.LFB200:
3253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5813              		.loc 1 3273 0
 5814              		.cfi_startproc
 5815              		@ args = 0, pretend = 0, frame = 24
 5816              		@ frame_needed = 1, uses_anonymous_args = 0
 5817              		@ link register save eliminated.
 5818 0000 80B4     		push	{r7}
 5819              	.LCFI270:
 5820              		.cfi_def_cfa_offset 4
 5821              		.cfi_offset 7, -4
 5822 0002 87B0     		sub	sp, sp, #28
 5823              	.LCFI271:
 5824              		.cfi_def_cfa_offset 32
 5825 0004 00AF     		add	r7, sp, #0
 5826              	.LCFI272:
 5827              		.cfi_def_cfa_register 7
 5828 0006 F860     		str	r0, [r7, #12]
 5829 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5830 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5831 000c FB80     		strh	r3, [r7, #6]	@ movhi
3274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5832              		.loc 1 3274 0
 5833 000e 4FF00003 		mov	r3, #0
 5834 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5835 0014 4FF00003 		mov	r3, #0
 5836 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 5837 001a 4FF00003 		mov	r3, #0
 5838 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 5839              		.loc 1 3277 0
 5840 0020 FB68     		ldr	r3, [r7, #12]
 5841 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5842 0024 9BB2     		uxth	r3, r3
 5843 0026 23F48073 		bic	r3, r3, #256
 5844 002a 9AB2     		uxth	r2, r3
 5845 002c FB68     		ldr	r3, [r7, #12]
 5846 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5847              		.loc 1 3278 0
 5848 0030 FB68     		ldr	r3, [r7, #12]
 5849 0032 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5850 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5851              		.loc 1 3279 0
 5852 0036 FB68     		ldr	r3, [r7, #12]
 5853 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5854 003a BB82     		strh	r3, [r7, #20]	@ movhi
3280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 5855              		.loc 1 3280 0
 5856 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5857 003e 4FEA0323 		lsl	r3, r3, #8
 5858 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 5859              		.loc 1 3283 0
 5860 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5861 0046 23F0F303 		bic	r3, r3, #243
 5862 004a FB82     		strh	r3, [r7, #22]	@ movhi
3284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5863              		.loc 1 3284 0
 5864 004c FB88     		ldrh	r3, [r7, #6]	@ movhi
 5865 004e 4FEA0313 		lsl	r3, r3, #4
 5866 0052 9AB2     		uxth	r2, r3
 5867 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5868 0056 1343     		orrs	r3, r3, r2
 5869 0058 9AB2     		uxth	r2, r3
 5870 005a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5871 005c 1343     		orrs	r3, r3, r2
 5872 005e FB82     		strh	r3, [r7, #22]	@ movhi
3285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 5873              		.loc 1 3287 0
 5874 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5875 0062 23F42063 		bic	r3, r3, #2560
 5876 0066 BB82     		strh	r3, [r7, #20]	@ movhi
3288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 5877              		.loc 1 3288 0
 5878 0068 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5879 006a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5880 006c 1343     		orrs	r3, r3, r2
 5881 006e 9BB2     		uxth	r3, r3
 5882 0070 43F48073 		orr	r3, r3, #256
 5883 0074 BB82     		strh	r3, [r7, #20]	@ movhi
3289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5884              		.loc 1 3291 0
 5885 0076 FB68     		ldr	r3, [r7, #12]
 5886 0078 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5887 007a 9A83     		strh	r2, [r3, #28]	@ movhi
3292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5888              		.loc 1 3292 0
 5889 007c FB68     		ldr	r3, [r7, #12]
 5890 007e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5891 0080 1A84     		strh	r2, [r3, #32]	@ movhi
3293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5892              		.loc 1 3293 0
 5893 0082 07F11C07 		add	r7, r7, #28
 5894 0086 BD46     		mov	sp, r7
 5895 0088 80BC     		pop	{r7}
 5896 008a 7047     		bx	lr
 5897              		.cfi_endproc
 5898              	.LFE200:
 5900              		.section	.text.TI4_Config,"ax",%progbits
 5901              		.align	2
 5902              		.thumb
 5903              		.thumb_func
 5905              	TI4_Config:
 5906              	.LFB201:
3294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5907              		.loc 1 3314 0
 5908              		.cfi_startproc
 5909              		@ args = 0, pretend = 0, frame = 24
 5910              		@ frame_needed = 1, uses_anonymous_args = 0
 5911              		@ link register save eliminated.
 5912 0000 80B4     		push	{r7}
 5913              	.LCFI273:
 5914              		.cfi_def_cfa_offset 4
 5915              		.cfi_offset 7, -4
 5916 0002 87B0     		sub	sp, sp, #28
 5917              	.LCFI274:
 5918              		.cfi_def_cfa_offset 32
 5919 0004 00AF     		add	r7, sp, #0
 5920              	.LCFI275:
 5921              		.cfi_def_cfa_register 7
 5922 0006 F860     		str	r0, [r7, #12]
 5923 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5924 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5925 000c FB80     		strh	r3, [r7, #6]	@ movhi
3315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5926              		.loc 1 3315 0
 5927 000e 4FF00003 		mov	r3, #0
 5928 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5929 0014 4FF00003 		mov	r3, #0
 5930 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 5931 001a 4FF00003 		mov	r3, #0
 5932 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 5933              		.loc 1 3318 0
 5934 0020 FB68     		ldr	r3, [r7, #12]
 5935 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5936 0024 9BB2     		uxth	r3, r3
 5937 0026 23F48053 		bic	r3, r3, #4096
 5938 002a 9AB2     		uxth	r2, r3
 5939 002c FB68     		ldr	r3, [r7, #12]
 5940 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5941              		.loc 1 3319 0
 5942 0030 FB68     		ldr	r3, [r7, #12]
 5943 0032 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5944 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5945              		.loc 1 3320 0
 5946 0036 FB68     		ldr	r3, [r7, #12]
 5947 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5948 003a BB82     		strh	r3, [r7, #20]	@ movhi
3321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 5949              		.loc 1 3321 0
 5950 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5951 003e 4FEA0333 		lsl	r3, r3, #12
 5952 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5953              		.loc 1 3324 0
 5954 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5955 0046 23F44073 		bic	r3, r3, #768
 5956 004a 4FEA0353 		lsl	r3, r3, #20
 5957 004e 4FEA1353 		lsr	r3, r3, #20
 5958 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 5959              		.loc 1 3325 0
 5960 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5961 0056 4FEA0323 		lsl	r3, r3, #8
 5962 005a 9AB2     		uxth	r2, r3
 5963 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5964 005e 1343     		orrs	r3, r3, r2
 5965 0060 FB82     		strh	r3, [r7, #22]	@ movhi
3326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 5966              		.loc 1 3326 0
 5967 0062 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5968 0064 4FEA0333 		lsl	r3, r3, #12
 5969 0068 9AB2     		uxth	r2, r3
 5970 006a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5971 006c 1343     		orrs	r3, r3, r2
 5972 006e FB82     		strh	r3, [r7, #22]	@ movhi
3327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 5973              		.loc 1 3329 0
 5974 0070 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5975 0072 23F40053 		bic	r3, r3, #8192
 5976 0076 4FEA4343 		lsl	r3, r3, #17
 5977 007a 4FEA5343 		lsr	r3, r3, #17
 5978 007e BB82     		strh	r3, [r7, #20]	@ movhi
3330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 5979              		.loc 1 3330 0
 5980 0080 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5981 0082 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5982 0084 1343     		orrs	r3, r3, r2
 5983 0086 9BB2     		uxth	r3, r3
 5984 0088 43F48053 		orr	r3, r3, #4096
 5985 008c BB82     		strh	r3, [r7, #20]	@ movhi
3331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5986              		.loc 1 3333 0
 5987 008e FB68     		ldr	r3, [r7, #12]
 5988 0090 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5989 0092 9A83     		strh	r2, [r3, #28]	@ movhi
3334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 5990              		.loc 1 3334 0
 5991 0094 FB68     		ldr	r3, [r7, #12]
 5992 0096 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5993 0098 1A84     		strh	r2, [r3, #32]	@ movhi
3335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5994              		.loc 1 3335 0
 5995 009a 07F11C07 		add	r7, r7, #28
 5996 009e BD46     		mov	sp, r7
 5997 00a0 80BC     		pop	{r7}
 5998 00a2 7047     		bx	lr
 5999              		.cfi_endproc
 6000              	.LFE201:
 6002              		.text
 6003              	.Letext0:
 6004              		.file 2 "/usr/local/csl/arm-2012.03/bin/../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/i
 6005              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 6006              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
 6007              		.file 5 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
     /tmp/ccBuwZtv.s:20     .text.TIM_DeInit:00000000 $t
     /tmp/ccBuwZtv.s:25     .text.TIM_DeInit:00000000 TIM_DeInit
     /tmp/ccBuwZtv.s:273    .text.TIM_TimeBaseInit:00000000 $t
     /tmp/ccBuwZtv.s:278    .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
     /tmp/ccBuwZtv.s:419    .text.TIM_TimeBaseStructInit:00000000 $t
     /tmp/ccBuwZtv.s:424    .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
     /tmp/ccBuwZtv.s:471    .text.TIM_PrescalerConfig:00000000 $t
     /tmp/ccBuwZtv.s:476    .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
     /tmp/ccBuwZtv.s:515    .text.TIM_CounterModeConfig:00000000 $t
     /tmp/ccBuwZtv.s:520    .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
     /tmp/ccBuwZtv.s:569    .text.TIM_SetCounter:00000000 $t
     /tmp/ccBuwZtv.s:574    .text.TIM_SetCounter:00000000 TIM_SetCounter
     /tmp/ccBuwZtv.s:606    .text.TIM_SetAutoreload:00000000 $t
     /tmp/ccBuwZtv.s:611    .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
     /tmp/ccBuwZtv.s:643    .text.TIM_GetCounter:00000000 $t
     /tmp/ccBuwZtv.s:648    .text.TIM_GetCounter:00000000 TIM_GetCounter
     /tmp/ccBuwZtv.s:679    .text.TIM_GetPrescaler:00000000 $t
     /tmp/ccBuwZtv.s:684    .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
     /tmp/ccBuwZtv.s:716    .text.TIM_UpdateDisableConfig:00000000 $t
     /tmp/ccBuwZtv.s:721    .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
     /tmp/ccBuwZtv.s:773    .text.TIM_UpdateRequestConfig:00000000 $t
     /tmp/ccBuwZtv.s:778    .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
     /tmp/ccBuwZtv.s:830    .text.TIM_ARRPreloadConfig:00000000 $t
     /tmp/ccBuwZtv.s:835    .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
     /tmp/ccBuwZtv.s:887    .text.TIM_SelectOnePulseMode:00000000 $t
     /tmp/ccBuwZtv.s:892    .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
     /tmp/ccBuwZtv.s:938    .text.TIM_SetClockDivision:00000000 $t
     /tmp/ccBuwZtv.s:943    .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
     /tmp/ccBuwZtv.s:989    .text.TIM_Cmd:00000000 $t
     /tmp/ccBuwZtv.s:994    .text.TIM_Cmd:00000000 TIM_Cmd
     /tmp/ccBuwZtv.s:1046   .text.TIM_OC1Init:00000000 $t
     /tmp/ccBuwZtv.s:1051   .text.TIM_OC1Init:00000000 TIM_OC1Init
     /tmp/ccBuwZtv.s:1207   .text.TIM_OC2Init:00000000 $t
     /tmp/ccBuwZtv.s:1212   .text.TIM_OC2Init:00000000 TIM_OC2Init
     /tmp/ccBuwZtv.s:1382   .text.TIM_OC3Init:00000000 $t
     /tmp/ccBuwZtv.s:1387   .text.TIM_OC3Init:00000000 TIM_OC3Init
     /tmp/ccBuwZtv.s:1555   .text.TIM_OC4Init:00000000 $t
     /tmp/ccBuwZtv.s:1560   .text.TIM_OC4Init:00000000 TIM_OC4Init
     /tmp/ccBuwZtv.s:1694   .text.TIM_OCStructInit:00000000 $t
     /tmp/ccBuwZtv.s:1699   .text.TIM_OCStructInit:00000000 TIM_OCStructInit
     /tmp/ccBuwZtv.s:1758   .text.TIM_SelectOCxM:00000000 $t
     /tmp/ccBuwZtv.s:1763   .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
     /tmp/ccBuwZtv.s:1881   .text.TIM_SetCompare1:00000000 $t
     /tmp/ccBuwZtv.s:1886   .text.TIM_SetCompare1:00000000 TIM_SetCompare1
     /tmp/ccBuwZtv.s:1918   .text.TIM_SetCompare2:00000000 $t
     /tmp/ccBuwZtv.s:1923   .text.TIM_SetCompare2:00000000 TIM_SetCompare2
     /tmp/ccBuwZtv.s:1955   .text.TIM_SetCompare3:00000000 $t
     /tmp/ccBuwZtv.s:1960   .text.TIM_SetCompare3:00000000 TIM_SetCompare3
     /tmp/ccBuwZtv.s:1992   .text.TIM_SetCompare4:00000000 $t
     /tmp/ccBuwZtv.s:1997   .text.TIM_SetCompare4:00000000 TIM_SetCompare4
     /tmp/ccBuwZtv.s:2029   .text.TIM_ForcedOC1Config:00000000 $t
     /tmp/ccBuwZtv.s:2034   .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
     /tmp/ccBuwZtv.s:2083   .text.TIM_ForcedOC2Config:00000000 $t
     /tmp/ccBuwZtv.s:2088   .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
     /tmp/ccBuwZtv.s:2139   .text.TIM_ForcedOC3Config:00000000 $t
     /tmp/ccBuwZtv.s:2144   .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
     /tmp/ccBuwZtv.s:2193   .text.TIM_ForcedOC4Config:00000000 $t
     /tmp/ccBuwZtv.s:2198   .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
     /tmp/ccBuwZtv.s:2249   .text.TIM_OC1PreloadConfig:00000000 $t
     /tmp/ccBuwZtv.s:2254   .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
     /tmp/ccBuwZtv.s:2303   .text.TIM_OC2PreloadConfig:00000000 $t
     /tmp/ccBuwZtv.s:2308   .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
     /tmp/ccBuwZtv.s:2359   .text.TIM_OC3PreloadConfig:00000000 $t
     /tmp/ccBuwZtv.s:2364   .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
     /tmp/ccBuwZtv.s:2413   .text.TIM_OC4PreloadConfig:00000000 $t
     /tmp/ccBuwZtv.s:2418   .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
     /tmp/ccBuwZtv.s:2469   .text.TIM_OC1FastConfig:00000000 $t
     /tmp/ccBuwZtv.s:2474   .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
     /tmp/ccBuwZtv.s:2523   .text.TIM_OC2FastConfig:00000000 $t
     /tmp/ccBuwZtv.s:2528   .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
     /tmp/ccBuwZtv.s:2579   .text.TIM_OC3FastConfig:00000000 $t
     /tmp/ccBuwZtv.s:2584   .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
     /tmp/ccBuwZtv.s:2633   .text.TIM_OC4FastConfig:00000000 $t
     /tmp/ccBuwZtv.s:2638   .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
     /tmp/ccBuwZtv.s:2689   .text.TIM_ClearOC1Ref:00000000 $t
     /tmp/ccBuwZtv.s:2694   .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
     /tmp/ccBuwZtv.s:2743   .text.TIM_ClearOC2Ref:00000000 $t
     /tmp/ccBuwZtv.s:2748   .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
     /tmp/ccBuwZtv.s:2800   .text.TIM_ClearOC3Ref:00000000 $t
     /tmp/ccBuwZtv.s:2805   .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
     /tmp/ccBuwZtv.s:2854   .text.TIM_ClearOC4Ref:00000000 $t
     /tmp/ccBuwZtv.s:2859   .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
     /tmp/ccBuwZtv.s:2911   .text.TIM_OC1PolarityConfig:00000000 $t
     /tmp/ccBuwZtv.s:2916   .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
     /tmp/ccBuwZtv.s:2965   .text.TIM_OC1NPolarityConfig:00000000 $t
     /tmp/ccBuwZtv.s:2970   .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
     /tmp/ccBuwZtv.s:3019   .text.TIM_OC2PolarityConfig:00000000 $t
     /tmp/ccBuwZtv.s:3024   .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
     /tmp/ccBuwZtv.s:3075   .text.TIM_OC2NPolarityConfig:00000000 $t
     /tmp/ccBuwZtv.s:3080   .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
     /tmp/ccBuwZtv.s:3131   .text.TIM_OC3PolarityConfig:00000000 $t
     /tmp/ccBuwZtv.s:3136   .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
     /tmp/ccBuwZtv.s:3187   .text.TIM_OC3NPolarityConfig:00000000 $t
     /tmp/ccBuwZtv.s:3192   .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
     /tmp/ccBuwZtv.s:3243   .text.TIM_OC4PolarityConfig:00000000 $t
     /tmp/ccBuwZtv.s:3248   .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
     /tmp/ccBuwZtv.s:3299   .text.TIM_CCxCmd:00000000 $t
     /tmp/ccBuwZtv.s:3304   .text.TIM_CCxCmd:00000000 TIM_CCxCmd
     /tmp/ccBuwZtv.s:3366   .text.TIM_CCxNCmd:00000000 $t
     /tmp/ccBuwZtv.s:3371   .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
     /tmp/ccBuwZtv.s:3433   .text.TIM_ICInit:00000000 $t
     /tmp/ccBuwZtv.s:3438   .text.TIM_ICInit:00000000 TIM_ICInit
     /tmp/ccBuwZtv.s:5623   .text.TI1_Config:00000000 TI1_Config
     /tmp/ccBuwZtv.s:3898   .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
     /tmp/ccBuwZtv.s:5711   .text.TI2_Config:00000000 TI2_Config
     /tmp/ccBuwZtv.s:3949   .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
     /tmp/ccBuwZtv.s:5811   .text.TI3_Config:00000000 TI3_Config
     /tmp/ccBuwZtv.s:4002   .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
     /tmp/ccBuwZtv.s:5905   .text.TI4_Config:00000000 TI4_Config
     /tmp/ccBuwZtv.s:4053   .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
     /tmp/ccBuwZtv.s:3563   .text.TIM_ICStructInit:00000000 $t
     /tmp/ccBuwZtv.s:3568   .text.TIM_ICStructInit:00000000 TIM_ICStructInit
     /tmp/ccBuwZtv.s:3615   .text.TIM_PWMIConfig:00000000 $t
     /tmp/ccBuwZtv.s:3620   .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
     /tmp/ccBuwZtv.s:3749   .text.TIM_GetCapture1:00000000 $t
     /tmp/ccBuwZtv.s:3754   .text.TIM_GetCapture1:00000000 TIM_GetCapture1
     /tmp/ccBuwZtv.s:3785   .text.TIM_GetCapture2:00000000 $t
     /tmp/ccBuwZtv.s:3790   .text.TIM_GetCapture2:00000000 TIM_GetCapture2
     /tmp/ccBuwZtv.s:3821   .text.TIM_GetCapture3:00000000 $t
     /tmp/ccBuwZtv.s:3826   .text.TIM_GetCapture3:00000000 TIM_GetCapture3
     /tmp/ccBuwZtv.s:3857   .text.TIM_GetCapture4:00000000 $t
     /tmp/ccBuwZtv.s:3862   .text.TIM_GetCapture4:00000000 TIM_GetCapture4
     /tmp/ccBuwZtv.s:3893   .text.TIM_SetIC1Prescaler:00000000 $t
     /tmp/ccBuwZtv.s:3944   .text.TIM_SetIC2Prescaler:00000000 $t
     /tmp/ccBuwZtv.s:3997   .text.TIM_SetIC3Prescaler:00000000 $t
     /tmp/ccBuwZtv.s:4048   .text.TIM_SetIC4Prescaler:00000000 $t
     /tmp/ccBuwZtv.s:4101   .text.TIM_BDTRConfig:00000000 $t
     /tmp/ccBuwZtv.s:4106   .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
     /tmp/ccBuwZtv.s:4173   .text.TIM_BDTRStructInit:00000000 $t
     /tmp/ccBuwZtv.s:4178   .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
     /tmp/ccBuwZtv.s:4233   .text.TIM_CtrlPWMOutputs:00000000 $t
     /tmp/ccBuwZtv.s:4238   .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
     /tmp/ccBuwZtv.s:4292   .text.TIM_SelectCOM:00000000 $t
     /tmp/ccBuwZtv.s:4297   .text.TIM_SelectCOM:00000000 TIM_SelectCOM
     /tmp/ccBuwZtv.s:4349   .text.TIM_CCPreloadControl:00000000 $t
     /tmp/ccBuwZtv.s:4354   .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
     /tmp/ccBuwZtv.s:4406   .text.TIM_ITConfig:00000000 $t
     /tmp/ccBuwZtv.s:4411   .text.TIM_ITConfig:00000000 TIM_ITConfig
     /tmp/ccBuwZtv.s:4469   .text.TIM_GenerateEvent:00000000 $t
     /tmp/ccBuwZtv.s:4474   .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
     /tmp/ccBuwZtv.s:4507   .text.TIM_GetFlagStatus:00000000 $t
     /tmp/ccBuwZtv.s:4512   .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
     /tmp/ccBuwZtv.s:4565   .text.TIM_ClearFlag:00000000 $t
     /tmp/ccBuwZtv.s:4570   .text.TIM_ClearFlag:00000000 TIM_ClearFlag
     /tmp/ccBuwZtv.s:4605   .text.TIM_GetITStatus:00000000 $t
     /tmp/ccBuwZtv.s:4610   .text.TIM_GetITStatus:00000000 TIM_GetITStatus
     /tmp/ccBuwZtv.s:4681   .text.TIM_ClearITPendingBit:00000000 $t
     /tmp/ccBuwZtv.s:4686   .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit
     /tmp/ccBuwZtv.s:4721   .text.TIM_DMAConfig:00000000 $t
     /tmp/ccBuwZtv.s:4726   .text.TIM_DMAConfig:00000000 TIM_DMAConfig
     /tmp/ccBuwZtv.s:4764   .text.TIM_DMACmd:00000000 $t
     /tmp/ccBuwZtv.s:4769   .text.TIM_DMACmd:00000000 TIM_DMACmd
     /tmp/ccBuwZtv.s:4827   .text.TIM_SelectCCDMA:00000000 $t
     /tmp/ccBuwZtv.s:4832   .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
     /tmp/ccBuwZtv.s:4884   .text.TIM_InternalClockConfig:00000000 $t
     /tmp/ccBuwZtv.s:4889   .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
     /tmp/ccBuwZtv.s:4924   .text.TIM_ITRxExternalClockConfig:00000000 $t
     /tmp/ccBuwZtv.s:4929   .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
     /tmp/ccBuwZtv.s:5158   .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
     /tmp/ccBuwZtv.s:4970   .text.TIM_TIxExternalClockConfig:00000000 $t
     /tmp/ccBuwZtv.s:4975   .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
     /tmp/ccBuwZtv.s:5038   .text.TIM_ETRClockMode1Config:00000000 $t
     /tmp/ccBuwZtv.s:5043   .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
     /tmp/ccBuwZtv.s:5365   .text.TIM_ETRConfig:00000000 TIM_ETRConfig
     /tmp/ccBuwZtv.s:5105   .text.TIM_ETRClockMode2Config:00000000 $t
     /tmp/ccBuwZtv.s:5110   .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
     /tmp/ccBuwZtv.s:5153   .text.TIM_SelectInputTrigger:00000000 $t
     /tmp/ccBuwZtv.s:5207   .text.TIM_SelectOutputTrigger:00000000 $t
     /tmp/ccBuwZtv.s:5212   .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
     /tmp/ccBuwZtv.s:5258   .text.TIM_SelectSlaveMode:00000000 $t
     /tmp/ccBuwZtv.s:5263   .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
     /tmp/ccBuwZtv.s:5309   .text.TIM_SelectMasterSlaveMode:00000000 $t
     /tmp/ccBuwZtv.s:5314   .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
     /tmp/ccBuwZtv.s:5360   .text.TIM_ETRConfig:00000000 $t
     /tmp/ccBuwZtv.s:5423   .text.TIM_EncoderInterfaceConfig:00000000 $t
     /tmp/ccBuwZtv.s:5428   .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
     /tmp/ccBuwZtv.s:5524   .text.TIM_SelectHallSensor:00000000 $t
     /tmp/ccBuwZtv.s:5529   .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
     /tmp/ccBuwZtv.s:5581   .text.TIM_RemapConfig:00000000 $t
     /tmp/ccBuwZtv.s:5586   .text.TIM_RemapConfig:00000000 TIM_RemapConfig
     /tmp/ccBuwZtv.s:5619   .text.TI1_Config:00000000 $t
     /tmp/ccBuwZtv.s:5707   .text.TI2_Config:00000000 $t
     /tmp/ccBuwZtv.s:5807   .text.TI3_Config:00000000 $t
     /tmp/ccBuwZtv.s:5901   .text.TI4_Config:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
