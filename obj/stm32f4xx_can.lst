   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	CAN_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  28              		.loc 1 163 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 7, -8
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
  44              		.loc 1 167 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 4FF4C843 		mov	r3, #25600
  47 000e C4F20003 		movt	r3, 16384
  48 0012 9A42     		cmp	r2, r3
  49 0014 0CD1     		bne	.L2
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
  50              		.loc 1 170 0
  51 0016 4FF00070 		mov	r0, #33554432
  52 001a 4FF00101 		mov	r1, #1
  53 001e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  54              		.loc 1 172 0
  55 0022 4FF00070 		mov	r0, #33554432
  56 0026 4FF00001 		mov	r1, #0
  57 002a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  58 002e 0BE0     		b	.L1
  59              	.L2:
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
  60              		.loc 1 177 0
  61 0030 4FF08060 		mov	r0, #67108864
  62 0034 4FF00101 		mov	r1, #1
  63 0038 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  64              		.loc 1 179 0
  65 003c 4FF08060 		mov	r0, #67108864
  66 0040 4FF00001 		mov	r1, #0
  67 0044 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  68              	.L1:
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  69              		.loc 1 181 0
  70 0048 07F10807 		add	r7, r7, #8
  71 004c BD46     		mov	sp, r7
  72 004e 80BD     		pop	{r7, pc}
  73              		.cfi_endproc
  74              	.LFE110:
  76              		.section	.text.CAN_Init,"ax",%progbits
  77              		.align	2
  78              		.global	CAN_Init
  79              		.thumb
  80              		.thumb_func
  82              	CAN_Init:
  83              	.LFB111:
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  84              		.loc 1 193 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              	.LCFI3:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 85B0     		sub	sp, sp, #20
  94              	.LCFI4:
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              	.LCFI5:
  98              		.cfi_def_cfa_register 7
  99 0006 7860     		str	r0, [r7, #4]
 100 0008 3960     		str	r1, [r7, #0]
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 101              		.loc 1 194 0
 102 000a 4FF00003 		mov	r3, #0
 103 000e FB73     		strb	r3, [r7, #15]
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 104              		.loc 1 195 0
 105 0010 4FF00003 		mov	r3, #0
 106 0014 BB60     		str	r3, [r7, #8]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 107              		.loc 1 211 0
 108 0016 7B68     		ldr	r3, [r7, #4]
 109 0018 1B68     		ldr	r3, [r3, #0]
 110 001a 23F00202 		bic	r2, r3, #2
 111 001e 7B68     		ldr	r3, [r7, #4]
 112 0020 1A60     		str	r2, [r3, #0]
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 113              		.loc 1 214 0
 114 0022 7B68     		ldr	r3, [r7, #4]
 115 0024 1B68     		ldr	r3, [r3, #0]
 116 0026 43F00102 		orr	r2, r3, #1
 117 002a 7B68     		ldr	r3, [r7, #4]
 118 002c 1A60     		str	r2, [r3, #0]
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 119              		.loc 1 217 0
 120 002e 03E0     		b	.L5
 121              	.L7:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 122              		.loc 1 219 0
 123 0030 BB68     		ldr	r3, [r7, #8]
 124 0032 03F10103 		add	r3, r3, #1
 125 0036 BB60     		str	r3, [r7, #8]
 126              	.L5:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 127              		.loc 1 217 0 discriminator 1
 128 0038 7B68     		ldr	r3, [r7, #4]
 129 003a 5B68     		ldr	r3, [r3, #4]
 130 003c 03F00103 		and	r3, r3, #1
 131 0040 002B     		cmp	r3, #0
 132 0042 04D1     		bne	.L6
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 133              		.loc 1 217 0 is_stmt 0 discriminator 2
 134 0044 BA68     		ldr	r2, [r7, #8]
 135 0046 4FF6FF73 		movw	r3, #65535
 136 004a 9A42     		cmp	r2, r3
 137 004c F0D1     		bne	.L7
 138              	.L6:
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 139              		.loc 1 223 0 is_stmt 1
 140 004e 7B68     		ldr	r3, [r7, #4]
 141 0050 5B68     		ldr	r3, [r3, #4]
 142 0052 03F00103 		and	r3, r3, #1
 143 0056 002B     		cmp	r3, #0
 144 0058 03D1     		bne	.L8
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 145              		.loc 1 225 0
 146 005a 4FF00003 		mov	r3, #0
 147 005e FB73     		strb	r3, [r7, #15]
 148 0060 A7E0     		b	.L9
 149              	.L8:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 150              		.loc 1 230 0
 151 0062 3B68     		ldr	r3, [r7, #0]
 152 0064 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 153 0066 012B     		cmp	r3, #1
 154 0068 06D1     		bne	.L10
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 155              		.loc 1 232 0
 156 006a 7B68     		ldr	r3, [r7, #4]
 157 006c 1B68     		ldr	r3, [r3, #0]
 158 006e 43F08002 		orr	r2, r3, #128
 159 0072 7B68     		ldr	r3, [r7, #4]
 160 0074 1A60     		str	r2, [r3, #0]
 161 0076 05E0     		b	.L11
 162              	.L10:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 163              		.loc 1 236 0
 164 0078 7B68     		ldr	r3, [r7, #4]
 165 007a 1B68     		ldr	r3, [r3, #0]
 166 007c 23F08002 		bic	r2, r3, #128
 167 0080 7B68     		ldr	r3, [r7, #4]
 168 0082 1A60     		str	r2, [r3, #0]
 169              	.L11:
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 170              		.loc 1 240 0
 171 0084 3B68     		ldr	r3, [r7, #0]
 172 0086 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 173 0088 012B     		cmp	r3, #1
 174 008a 06D1     		bne	.L12
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 175              		.loc 1 242 0
 176 008c 7B68     		ldr	r3, [r7, #4]
 177 008e 1B68     		ldr	r3, [r3, #0]
 178 0090 43F04002 		orr	r2, r3, #64
 179 0094 7B68     		ldr	r3, [r7, #4]
 180 0096 1A60     		str	r2, [r3, #0]
 181 0098 05E0     		b	.L13
 182              	.L12:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 183              		.loc 1 246 0
 184 009a 7B68     		ldr	r3, [r7, #4]
 185 009c 1B68     		ldr	r3, [r3, #0]
 186 009e 23F04002 		bic	r2, r3, #64
 187 00a2 7B68     		ldr	r3, [r7, #4]
 188 00a4 1A60     		str	r2, [r3, #0]
 189              	.L13:
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 190              		.loc 1 250 0
 191 00a6 3B68     		ldr	r3, [r7, #0]
 192 00a8 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 193 00aa 012B     		cmp	r3, #1
 194 00ac 06D1     		bne	.L14
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 195              		.loc 1 252 0
 196 00ae 7B68     		ldr	r3, [r7, #4]
 197 00b0 1B68     		ldr	r3, [r3, #0]
 198 00b2 43F02002 		orr	r2, r3, #32
 199 00b6 7B68     		ldr	r3, [r7, #4]
 200 00b8 1A60     		str	r2, [r3, #0]
 201 00ba 05E0     		b	.L15
 202              	.L14:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 203              		.loc 1 256 0
 204 00bc 7B68     		ldr	r3, [r7, #4]
 205 00be 1B68     		ldr	r3, [r3, #0]
 206 00c0 23F02002 		bic	r2, r3, #32
 207 00c4 7B68     		ldr	r3, [r7, #4]
 208 00c6 1A60     		str	r2, [r3, #0]
 209              	.L15:
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 210              		.loc 1 260 0
 211 00c8 3B68     		ldr	r3, [r7, #0]
 212 00ca 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 213 00cc 012B     		cmp	r3, #1
 214 00ce 06D1     		bne	.L16
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 215              		.loc 1 262 0
 216 00d0 7B68     		ldr	r3, [r7, #4]
 217 00d2 1B68     		ldr	r3, [r3, #0]
 218 00d4 43F01002 		orr	r2, r3, #16
 219 00d8 7B68     		ldr	r3, [r7, #4]
 220 00da 1A60     		str	r2, [r3, #0]
 221 00dc 05E0     		b	.L17
 222              	.L16:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 223              		.loc 1 266 0
 224 00de 7B68     		ldr	r3, [r7, #4]
 225 00e0 1B68     		ldr	r3, [r3, #0]
 226 00e2 23F01002 		bic	r2, r3, #16
 227 00e6 7B68     		ldr	r3, [r7, #4]
 228 00e8 1A60     		str	r2, [r3, #0]
 229              	.L17:
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 230              		.loc 1 270 0
 231 00ea 3B68     		ldr	r3, [r7, #0]
 232 00ec 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 233 00ee 012B     		cmp	r3, #1
 234 00f0 06D1     		bne	.L18
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 235              		.loc 1 272 0
 236 00f2 7B68     		ldr	r3, [r7, #4]
 237 00f4 1B68     		ldr	r3, [r3, #0]
 238 00f6 43F00802 		orr	r2, r3, #8
 239 00fa 7B68     		ldr	r3, [r7, #4]
 240 00fc 1A60     		str	r2, [r3, #0]
 241 00fe 05E0     		b	.L19
 242              	.L18:
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 243              		.loc 1 276 0
 244 0100 7B68     		ldr	r3, [r7, #4]
 245 0102 1B68     		ldr	r3, [r3, #0]
 246 0104 23F00802 		bic	r2, r3, #8
 247 0108 7B68     		ldr	r3, [r7, #4]
 248 010a 1A60     		str	r2, [r3, #0]
 249              	.L19:
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 250              		.loc 1 280 0
 251 010c 3B68     		ldr	r3, [r7, #0]
 252 010e DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 253 0110 012B     		cmp	r3, #1
 254 0112 06D1     		bne	.L20
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 255              		.loc 1 282 0
 256 0114 7B68     		ldr	r3, [r7, #4]
 257 0116 1B68     		ldr	r3, [r3, #0]
 258 0118 43F00402 		orr	r2, r3, #4
 259 011c 7B68     		ldr	r3, [r7, #4]
 260 011e 1A60     		str	r2, [r3, #0]
 261 0120 05E0     		b	.L21
 262              	.L20:
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 263              		.loc 1 286 0
 264 0122 7B68     		ldr	r3, [r7, #4]
 265 0124 1B68     		ldr	r3, [r3, #0]
 266 0126 23F00402 		bic	r2, r3, #4
 267 012a 7B68     		ldr	r3, [r7, #4]
 268 012c 1A60     		str	r2, [r3, #0]
 269              	.L21:
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 270              		.loc 1 290 0
 271 012e 3B68     		ldr	r3, [r7, #0]
 272 0130 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 273 0132 4FEA8372 		lsl	r2, r3, #30
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 274              		.loc 1 291 0
 275 0136 3B68     		ldr	r3, [r7, #0]
 276 0138 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 277 013a 4FEA0363 		lsl	r3, r3, #24
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 278              		.loc 1 290 0
 279 013e 1A43     		orrs	r2, r2, r3
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 280              		.loc 1 292 0
 281 0140 3B68     		ldr	r3, [r7, #0]
 282 0142 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 283 0144 4FEA0343 		lsl	r3, r3, #16
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 284              		.loc 1 291 0
 285 0148 1A43     		orrs	r2, r2, r3
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 286              		.loc 1 293 0
 287 014a 3B68     		ldr	r3, [r7, #0]
 288 014c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 289 014e 4FEA0353 		lsl	r3, r3, #20
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 290              		.loc 1 292 0
 291 0152 1A43     		orrs	r2, r2, r3
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 292              		.loc 1 294 0
 293 0154 3B68     		ldr	r3, [r7, #0]
 294 0156 1B88     		ldrh	r3, [r3, #0]
 295 0158 03F1FF33 		add	r3, r3, #-1
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 296              		.loc 1 293 0
 297 015c 1A43     		orrs	r2, r2, r3
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 298              		.loc 1 290 0
 299 015e 7B68     		ldr	r3, [r7, #4]
 300 0160 DA61     		str	r2, [r3, #28]
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 301              		.loc 1 297 0
 302 0162 7B68     		ldr	r3, [r7, #4]
 303 0164 1B68     		ldr	r3, [r3, #0]
 304 0166 23F00102 		bic	r2, r3, #1
 305 016a 7B68     		ldr	r3, [r7, #4]
 306 016c 1A60     		str	r2, [r3, #0]
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 307              		.loc 1 300 0
 308 016e 4FF00003 		mov	r3, #0
 309 0172 BB60     		str	r3, [r7, #8]
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 310              		.loc 1 302 0
 311 0174 03E0     		b	.L22
 312              	.L24:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 313              		.loc 1 304 0
 314 0176 BB68     		ldr	r3, [r7, #8]
 315 0178 03F10103 		add	r3, r3, #1
 316 017c BB60     		str	r3, [r7, #8]
 317              	.L22:
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 318              		.loc 1 302 0 discriminator 1
 319 017e 7B68     		ldr	r3, [r7, #4]
 320 0180 5B68     		ldr	r3, [r3, #4]
 321 0182 03F00103 		and	r3, r3, #1
 322 0186 DBB2     		uxtb	r3, r3
 323 0188 002B     		cmp	r3, #0
 324 018a 04D0     		beq	.L23
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 325              		.loc 1 302 0 is_stmt 0 discriminator 2
 326 018c BA68     		ldr	r2, [r7, #8]
 327 018e 4FF6FF73 		movw	r3, #65535
 328 0192 9A42     		cmp	r2, r3
 329 0194 EFD1     		bne	.L24
 330              	.L23:
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 331              		.loc 1 308 0 is_stmt 1
 332 0196 7B68     		ldr	r3, [r7, #4]
 333 0198 5B68     		ldr	r3, [r3, #4]
 334 019a 03F00103 		and	r3, r3, #1
 335 019e DBB2     		uxtb	r3, r3
 336 01a0 002B     		cmp	r3, #0
 337 01a2 03D0     		beq	.L25
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 338              		.loc 1 310 0
 339 01a4 4FF00003 		mov	r3, #0
 340 01a8 FB73     		strb	r3, [r7, #15]
 341 01aa 02E0     		b	.L9
 342              	.L25:
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 343              		.loc 1 314 0
 344 01ac 4FF00103 		mov	r3, #1
 345 01b0 FB73     		strb	r3, [r7, #15]
 346              	.L9:
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 347              		.loc 1 319 0
 348 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 349              		.loc 1 320 0
 350 01b4 1846     		mov	r0, r3
 351 01b6 07F11407 		add	r7, r7, #20
 352 01ba BD46     		mov	sp, r7
 353 01bc 80BC     		pop	{r7}
 354 01be 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE111:
 358              		.section	.text.CAN_FilterInit,"ax",%progbits
 359              		.align	2
 360              		.global	CAN_FilterInit
 361              		.thumb
 362              		.thumb_func
 364              	CAN_FilterInit:
 365              	.LFB112:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 366              		.loc 1 330 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 16
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              	.LCFI6:
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 7, -4
 375 0002 85B0     		sub	sp, sp, #20
 376              	.LCFI7:
 377              		.cfi_def_cfa_offset 24
 378 0004 00AF     		add	r7, sp, #0
 379              	.LCFI8:
 380              		.cfi_def_cfa_register 7
 381 0006 7860     		str	r0, [r7, #4]
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 382              		.loc 1 331 0
 383 0008 4FF00003 		mov	r3, #0
 384 000c FB60     		str	r3, [r7, #12]
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 385              		.loc 1 339 0
 386 000e 7B68     		ldr	r3, [r7, #4]
 387 0010 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 388 0012 4FF00102 		mov	r2, #1
 389 0016 02FA03F3 		lsl	r3, r2, r3
 390 001a FB60     		str	r3, [r7, #12]
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 391              		.loc 1 342 0
 392 001c 4FF4C843 		mov	r3, #25600
 393 0020 C4F20003 		movt	r3, 16384
 394 0024 4FF4C842 		mov	r2, #25600
 395 0028 C4F20002 		movt	r2, 16384
 396 002c D2F80022 		ldr	r2, [r2, #512]
 397 0030 42F00102 		orr	r2, r2, #1
 398 0034 C3F80022 		str	r2, [r3, #512]
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 399              		.loc 1 345 0
 400 0038 4FF4C843 		mov	r3, #25600
 401 003c C4F20003 		movt	r3, 16384
 402 0040 4FF4C842 		mov	r2, #25600
 403 0044 C4F20002 		movt	r2, 16384
 404 0048 D2F81C12 		ldr	r1, [r2, #540]
 405 004c FA68     		ldr	r2, [r7, #12]
 406 004e 6FEA0202 		mvn	r2, r2
 407 0052 0A40     		ands	r2, r2, r1
 408 0054 C3F81C22 		str	r2, [r3, #540]
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 409              		.loc 1 348 0
 410 0058 7B68     		ldr	r3, [r7, #4]
 411 005a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 412 005c 002B     		cmp	r3, #0
 413 005e 33D1     		bne	.L27
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 414              		.loc 1 351 0
 415 0060 4FF4C843 		mov	r3, #25600
 416 0064 C4F20003 		movt	r3, 16384
 417 0068 4FF4C842 		mov	r2, #25600
 418 006c C4F20002 		movt	r2, 16384
 419 0070 D2F80C12 		ldr	r1, [r2, #524]
 420 0074 FA68     		ldr	r2, [r7, #12]
 421 0076 6FEA0202 		mvn	r2, r2
 422 007a 0A40     		ands	r2, r2, r1
 423 007c C3F80C22 		str	r2, [r3, #524]
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 424              		.loc 1 355 0
 425 0080 4FF4C843 		mov	r3, #25600
 426 0084 C4F20003 		movt	r3, 16384
 427 0088 7A68     		ldr	r2, [r7, #4]
 428 008a 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 429              		.loc 1 356 0
 430 008c 7968     		ldr	r1, [r7, #4]
 431 008e C988     		ldrh	r1, [r1, #6]
 432 0090 4FEA0140 		lsl	r0, r1, #16
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 433              		.loc 1 357 0
 434 0094 7968     		ldr	r1, [r7, #4]
 435 0096 4988     		ldrh	r1, [r1, #2]
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 436              		.loc 1 356 0
 437 0098 0143     		orrs	r1, r1, r0
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 438              		.loc 1 355 0
 439 009a 02F14802 		add	r2, r2, #72
 440 009e 43F83210 		str	r1, [r3, r2, lsl #3]
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 441              		.loc 1 361 0
 442 00a2 4FF4C842 		mov	r2, #25600
 443 00a6 C4F20002 		movt	r2, 16384
 444 00aa 7B68     		ldr	r3, [r7, #4]
 445 00ac 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 446              		.loc 1 362 0
 447 00ae 7968     		ldr	r1, [r7, #4]
 448 00b0 8988     		ldrh	r1, [r1, #4]
 449 00b2 4FEA0140 		lsl	r0, r1, #16
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 450              		.loc 1 363 0
 451 00b6 7968     		ldr	r1, [r7, #4]
 452 00b8 0988     		ldrh	r1, [r1, #0]
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 453              		.loc 1 362 0
 454 00ba 0143     		orrs	r1, r1, r0
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 455              		.loc 1 361 0
 456 00bc 03F14803 		add	r3, r3, #72
 457 00c0 4FEAC303 		lsl	r3, r3, #3
 458 00c4 D318     		adds	r3, r2, r3
 459 00c6 5960     		str	r1, [r3, #4]
 460              	.L27:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 461              		.loc 1 366 0
 462 00c8 7B68     		ldr	r3, [r7, #4]
 463 00ca 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 464 00cc 012B     		cmp	r3, #1
 465 00ce 31D1     		bne	.L28
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 466              		.loc 1 369 0
 467 00d0 4FF4C843 		mov	r3, #25600
 468 00d4 C4F20003 		movt	r3, 16384
 469 00d8 4FF4C842 		mov	r2, #25600
 470 00dc C4F20002 		movt	r2, 16384
 471 00e0 D2F80C12 		ldr	r1, [r2, #524]
 472 00e4 FA68     		ldr	r2, [r7, #12]
 473 00e6 0A43     		orrs	r2, r2, r1
 474 00e8 C3F80C22 		str	r2, [r3, #524]
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 475              		.loc 1 371 0
 476 00ec 4FF4C843 		mov	r3, #25600
 477 00f0 C4F20003 		movt	r3, 16384
 478 00f4 7A68     		ldr	r2, [r7, #4]
 479 00f6 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 480              		.loc 1 372 0
 481 00f8 7968     		ldr	r1, [r7, #4]
 482 00fa 0988     		ldrh	r1, [r1, #0]
 483 00fc 4FEA0140 		lsl	r0, r1, #16
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 484              		.loc 1 373 0
 485 0100 7968     		ldr	r1, [r7, #4]
 486 0102 4988     		ldrh	r1, [r1, #2]
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 487              		.loc 1 372 0
 488 0104 0143     		orrs	r1, r1, r0
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 489              		.loc 1 371 0
 490 0106 02F14802 		add	r2, r2, #72
 491 010a 43F83210 		str	r1, [r3, r2, lsl #3]
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 492              		.loc 1 375 0
 493 010e 4FF4C842 		mov	r2, #25600
 494 0112 C4F20002 		movt	r2, 16384
 495 0116 7B68     		ldr	r3, [r7, #4]
 496 0118 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 497              		.loc 1 376 0
 498 011a 7968     		ldr	r1, [r7, #4]
 499 011c 8988     		ldrh	r1, [r1, #4]
 500 011e 4FEA0140 		lsl	r0, r1, #16
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 501              		.loc 1 377 0
 502 0122 7968     		ldr	r1, [r7, #4]
 503 0124 C988     		ldrh	r1, [r1, #6]
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 504              		.loc 1 376 0
 505 0126 0143     		orrs	r1, r1, r0
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 506              		.loc 1 375 0
 507 0128 03F14803 		add	r3, r3, #72
 508 012c 4FEAC303 		lsl	r3, r3, #3
 509 0130 D318     		adds	r3, r2, r3
 510 0132 5960     		str	r1, [r3, #4]
 511              	.L28:
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 512              		.loc 1 381 0
 513 0134 7B68     		ldr	r3, [r7, #4]
 514 0136 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 515 0138 002B     		cmp	r3, #0
 516 013a 10D1     		bne	.L29
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 517              		.loc 1 384 0
 518 013c 4FF4C843 		mov	r3, #25600
 519 0140 C4F20003 		movt	r3, 16384
 520 0144 4FF4C842 		mov	r2, #25600
 521 0148 C4F20002 		movt	r2, 16384
 522 014c D2F80412 		ldr	r1, [r2, #516]
 523 0150 FA68     		ldr	r2, [r7, #12]
 524 0152 6FEA0202 		mvn	r2, r2
 525 0156 0A40     		ands	r2, r2, r1
 526 0158 C3F80422 		str	r2, [r3, #516]
 527 015c 0DE0     		b	.L30
 528              	.L29:
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 529              		.loc 1 389 0
 530 015e 4FF4C843 		mov	r3, #25600
 531 0162 C4F20003 		movt	r3, 16384
 532 0166 4FF4C842 		mov	r2, #25600
 533 016a C4F20002 		movt	r2, 16384
 534 016e D2F80412 		ldr	r1, [r2, #516]
 535 0172 FA68     		ldr	r2, [r7, #12]
 536 0174 0A43     		orrs	r2, r2, r1
 537 0176 C3F80422 		str	r2, [r3, #516]
 538              	.L30:
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 539              		.loc 1 393 0
 540 017a 7B68     		ldr	r3, [r7, #4]
 541 017c 1B89     		ldrh	r3, [r3, #8]
 542 017e 002B     		cmp	r3, #0
 543 0180 0FD1     		bne	.L31
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 544              		.loc 1 396 0
 545 0182 4FF4C843 		mov	r3, #25600
 546 0186 C4F20003 		movt	r3, 16384
 547 018a 4FF4C842 		mov	r2, #25600
 548 018e C4F20002 		movt	r2, 16384
 549 0192 D2F81412 		ldr	r1, [r2, #532]
 550 0196 FA68     		ldr	r2, [r7, #12]
 551 0198 6FEA0202 		mvn	r2, r2
 552 019c 0A40     		ands	r2, r2, r1
 553 019e C3F81422 		str	r2, [r3, #532]
 554              	.L31:
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 555              		.loc 1 399 0
 556 01a2 7B68     		ldr	r3, [r7, #4]
 557 01a4 1B89     		ldrh	r3, [r3, #8]
 558 01a6 012B     		cmp	r3, #1
 559 01a8 0DD1     		bne	.L32
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 560              		.loc 1 402 0
 561 01aa 4FF4C843 		mov	r3, #25600
 562 01ae C4F20003 		movt	r3, 16384
 563 01b2 4FF4C842 		mov	r2, #25600
 564 01b6 C4F20002 		movt	r2, 16384
 565 01ba D2F81412 		ldr	r1, [r2, #532]
 566 01be FA68     		ldr	r2, [r7, #12]
 567 01c0 0A43     		orrs	r2, r2, r1
 568 01c2 C3F81422 		str	r2, [r3, #532]
 569              	.L32:
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 570              		.loc 1 406 0
 571 01c6 7B68     		ldr	r3, [r7, #4]
 572 01c8 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 573 01ca 012B     		cmp	r3, #1
 574 01cc 0DD1     		bne	.L33
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 575              		.loc 1 408 0
 576 01ce 4FF4C843 		mov	r3, #25600
 577 01d2 C4F20003 		movt	r3, 16384
 578 01d6 4FF4C842 		mov	r2, #25600
 579 01da C4F20002 		movt	r2, 16384
 580 01de D2F81C12 		ldr	r1, [r2, #540]
 581 01e2 FA68     		ldr	r2, [r7, #12]
 582 01e4 0A43     		orrs	r2, r2, r1
 583 01e6 C3F81C22 		str	r2, [r3, #540]
 584              	.L33:
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 585              		.loc 1 412 0
 586 01ea 4FF4C843 		mov	r3, #25600
 587 01ee C4F20003 		movt	r3, 16384
 588 01f2 4FF4C842 		mov	r2, #25600
 589 01f6 C4F20002 		movt	r2, 16384
 590 01fa D2F80022 		ldr	r2, [r2, #512]
 591 01fe 22F00102 		bic	r2, r2, #1
 592 0202 C3F80022 		str	r2, [r3, #512]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 593              		.loc 1 413 0
 594 0206 07F11407 		add	r7, r7, #20
 595 020a BD46     		mov	sp, r7
 596 020c 80BC     		pop	{r7}
 597 020e 7047     		bx	lr
 598              		.cfi_endproc
 599              	.LFE112:
 601              		.section	.text.CAN_StructInit,"ax",%progbits
 602              		.align	2
 603              		.global	CAN_StructInit
 604              		.thumb
 605              		.thumb_func
 607              	CAN_StructInit:
 608              	.LFB113:
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 609              		.loc 1 421 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 8
 612              		@ frame_needed = 1, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614 0000 80B4     		push	{r7}
 615              	.LCFI9:
 616              		.cfi_def_cfa_offset 4
 617              		.cfi_offset 7, -4
 618 0002 83B0     		sub	sp, sp, #12
 619              	.LCFI10:
 620              		.cfi_def_cfa_offset 16
 621 0004 00AF     		add	r7, sp, #0
 622              	.LCFI11:
 623              		.cfi_def_cfa_register 7
 624 0006 7860     		str	r0, [r7, #4]
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 625              		.loc 1 425 0
 626 0008 7B68     		ldr	r3, [r7, #4]
 627 000a 4FF00002 		mov	r2, #0
 628 000e 9A71     		strb	r2, [r3, #6]
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 629              		.loc 1 428 0
 630 0010 7B68     		ldr	r3, [r7, #4]
 631 0012 4FF00002 		mov	r2, #0
 632 0016 DA71     		strb	r2, [r3, #7]
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 633              		.loc 1 431 0
 634 0018 7B68     		ldr	r3, [r7, #4]
 635 001a 4FF00002 		mov	r2, #0
 636 001e 1A72     		strb	r2, [r3, #8]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 637              		.loc 1 434 0
 638 0020 7B68     		ldr	r3, [r7, #4]
 639 0022 4FF00002 		mov	r2, #0
 640 0026 5A72     		strb	r2, [r3, #9]
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 641              		.loc 1 437 0
 642 0028 7B68     		ldr	r3, [r7, #4]
 643 002a 4FF00002 		mov	r2, #0
 644 002e 9A72     		strb	r2, [r3, #10]
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 645              		.loc 1 440 0
 646 0030 7B68     		ldr	r3, [r7, #4]
 647 0032 4FF00002 		mov	r2, #0
 648 0036 DA72     		strb	r2, [r3, #11]
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 649              		.loc 1 443 0
 650 0038 7B68     		ldr	r3, [r7, #4]
 651 003a 4FF00002 		mov	r2, #0
 652 003e 9A70     		strb	r2, [r3, #2]
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 653              		.loc 1 446 0
 654 0040 7B68     		ldr	r3, [r7, #4]
 655 0042 4FF00002 		mov	r2, #0
 656 0046 DA70     		strb	r2, [r3, #3]
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 657              		.loc 1 449 0
 658 0048 7B68     		ldr	r3, [r7, #4]
 659 004a 4FF00302 		mov	r2, #3
 660 004e 1A71     		strb	r2, [r3, #4]
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 661              		.loc 1 452 0
 662 0050 7B68     		ldr	r3, [r7, #4]
 663 0052 4FF00202 		mov	r2, #2
 664 0056 5A71     		strb	r2, [r3, #5]
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 665              		.loc 1 455 0
 666 0058 7B68     		ldr	r3, [r7, #4]
 667 005a 4FF00102 		mov	r2, #1
 668 005e 1A80     		strh	r2, [r3, #0]	@ movhi
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 669              		.loc 1 456 0
 670 0060 07F10C07 		add	r7, r7, #12
 671 0064 BD46     		mov	sp, r7
 672 0066 80BC     		pop	{r7}
 673 0068 7047     		bx	lr
 674              		.cfi_endproc
 675              	.LFE113:
 677 006a 00BF     		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 678              		.align	2
 679              		.global	CAN_SlaveStartBank
 680              		.thumb
 681              		.thumb_func
 683              	CAN_SlaveStartBank:
 684              	.LFB114:
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 685              		.loc 1 464 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 8
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690 0000 80B4     		push	{r7}
 691              	.LCFI12:
 692              		.cfi_def_cfa_offset 4
 693              		.cfi_offset 7, -4
 694 0002 83B0     		sub	sp, sp, #12
 695              	.LCFI13:
 696              		.cfi_def_cfa_offset 16
 697 0004 00AF     		add	r7, sp, #0
 698              	.LCFI14:
 699              		.cfi_def_cfa_register 7
 700 0006 0346     		mov	r3, r0
 701 0008 FB71     		strb	r3, [r7, #7]
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 702              		.loc 1 469 0
 703 000a 4FF4C843 		mov	r3, #25600
 704 000e C4F20003 		movt	r3, 16384
 705 0012 4FF4C842 		mov	r2, #25600
 706 0016 C4F20002 		movt	r2, 16384
 707 001a D2F80022 		ldr	r2, [r2, #512]
 708 001e 42F00102 		orr	r2, r2, #1
 709 0022 C3F80022 		str	r2, [r3, #512]
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 710              		.loc 1 472 0
 711 0026 4FF4C843 		mov	r3, #25600
 712 002a C4F20003 		movt	r3, 16384
 713 002e 4FF4C842 		mov	r2, #25600
 714 0032 C4F20002 		movt	r2, 16384
 715 0036 D2F80022 		ldr	r2, [r2, #512]
 716 003a 22F47C52 		bic	r2, r2, #16128
 717 003e 22F00E02 		bic	r2, r2, #14
 718 0042 C3F80022 		str	r2, [r3, #512]
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 719              		.loc 1 473 0
 720 0046 4FF4C843 		mov	r3, #25600
 721 004a C4F20003 		movt	r3, 16384
 722 004e 4FF4C842 		mov	r2, #25600
 723 0052 C4F20002 		movt	r2, 16384
 724 0056 D2F80012 		ldr	r1, [r2, #512]
 725 005a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 726 005c 4FEA0222 		lsl	r2, r2, #8
 727 0060 0A43     		orrs	r2, r2, r1
 728 0062 C3F80022 		str	r2, [r3, #512]
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 729              		.loc 1 476 0
 730 0066 4FF4C843 		mov	r3, #25600
 731 006a C4F20003 		movt	r3, 16384
 732 006e 4FF4C842 		mov	r2, #25600
 733 0072 C4F20002 		movt	r2, 16384
 734 0076 D2F80022 		ldr	r2, [r2, #512]
 735 007a 22F00102 		bic	r2, r2, #1
 736 007e C3F80022 		str	r2, [r3, #512]
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 737              		.loc 1 477 0
 738 0082 07F10C07 		add	r7, r7, #12
 739 0086 BD46     		mov	sp, r7
 740 0088 80BC     		pop	{r7}
 741 008a 7047     		bx	lr
 742              		.cfi_endproc
 743              	.LFE114:
 745              		.section	.text.CAN_DBGFreeze,"ax",%progbits
 746              		.align	2
 747              		.global	CAN_DBGFreeze
 748              		.thumb
 749              		.thumb_func
 751              	CAN_DBGFreeze:
 752              	.LFB115:
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 753              		.loc 1 489 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 8
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758 0000 80B4     		push	{r7}
 759              	.LCFI15:
 760              		.cfi_def_cfa_offset 4
 761              		.cfi_offset 7, -4
 762 0002 83B0     		sub	sp, sp, #12
 763              	.LCFI16:
 764              		.cfi_def_cfa_offset 16
 765 0004 00AF     		add	r7, sp, #0
 766              	.LCFI17:
 767              		.cfi_def_cfa_register 7
 768 0006 7860     		str	r0, [r7, #4]
 769 0008 0B46     		mov	r3, r1
 770 000a FB70     		strb	r3, [r7, #3]
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 771              		.loc 1 494 0
 772 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 773 000e 002B     		cmp	r3, #0
 774 0010 06D0     		beq	.L37
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 775              		.loc 1 497 0
 776 0012 7B68     		ldr	r3, [r7, #4]
 777 0014 1B68     		ldr	r3, [r3, #0]
 778 0016 43F48032 		orr	r2, r3, #65536
 779 001a 7B68     		ldr	r3, [r7, #4]
 780 001c 1A60     		str	r2, [r3, #0]
 781 001e 05E0     		b	.L36
 782              	.L37:
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 783              		.loc 1 502 0
 784 0020 7B68     		ldr	r3, [r7, #4]
 785 0022 1B68     		ldr	r3, [r3, #0]
 786 0024 23F48032 		bic	r2, r3, #65536
 787 0028 7B68     		ldr	r3, [r7, #4]
 788 002a 1A60     		str	r2, [r3, #0]
 789              	.L36:
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 790              		.loc 1 504 0
 791 002c 07F10C07 		add	r7, r7, #12
 792 0030 BD46     		mov	sp, r7
 793 0032 80BC     		pop	{r7}
 794 0034 7047     		bx	lr
 795              		.cfi_endproc
 796              	.LFE115:
 798 0036 00BF     		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 799              		.align	2
 800              		.global	CAN_TTComModeCmd
 801              		.thumb
 802              		.thumb_func
 804              	CAN_TTComModeCmd:
 805              	.LFB116:
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 806              		.loc 1 519 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
 812              	.LCFI18:
 813              		.cfi_def_cfa_offset 4
 814              		.cfi_offset 7, -4
 815 0002 83B0     		sub	sp, sp, #12
 816              	.LCFI19:
 817              		.cfi_def_cfa_offset 16
 818 0004 00AF     		add	r7, sp, #0
 819              	.LCFI20:
 820              		.cfi_def_cfa_register 7
 821 0006 7860     		str	r0, [r7, #4]
 822 0008 0B46     		mov	r3, r1
 823 000a FB70     		strb	r3, [r7, #3]
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 824              		.loc 1 523 0
 825 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 826 000e 002B     		cmp	r3, #0
 827 0010 1ED0     		beq	.L40
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 828              		.loc 1 526 0
 829 0012 7B68     		ldr	r3, [r7, #4]
 830 0014 1B68     		ldr	r3, [r3, #0]
 831 0016 43F08002 		orr	r2, r3, #128
 832 001a 7B68     		ldr	r3, [r7, #4]
 833 001c 1A60     		str	r2, [r3, #0]
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 834              		.loc 1 529 0
 835 001e 7B68     		ldr	r3, [r7, #4]
 836 0020 D3F88431 		ldr	r3, [r3, #388]
 837 0024 43F48072 		orr	r2, r3, #256
 838 0028 7B68     		ldr	r3, [r7, #4]
 839 002a C3F88421 		str	r2, [r3, #388]
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 840              		.loc 1 530 0
 841 002e 7B68     		ldr	r3, [r7, #4]
 842 0030 D3F89431 		ldr	r3, [r3, #404]
 843 0034 43F48072 		orr	r2, r3, #256
 844 0038 7B68     		ldr	r3, [r7, #4]
 845 003a C3F89421 		str	r2, [r3, #404]
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 846              		.loc 1 531 0
 847 003e 7B68     		ldr	r3, [r7, #4]
 848 0040 D3F8A431 		ldr	r3, [r3, #420]
 849 0044 43F48072 		orr	r2, r3, #256
 850 0048 7B68     		ldr	r3, [r7, #4]
 851 004a C3F8A421 		str	r2, [r3, #420]
 852 004e 1DE0     		b	.L39
 853              	.L40:
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 854              		.loc 1 536 0
 855 0050 7B68     		ldr	r3, [r7, #4]
 856 0052 1B68     		ldr	r3, [r3, #0]
 857 0054 23F08002 		bic	r2, r3, #128
 858 0058 7B68     		ldr	r3, [r7, #4]
 859 005a 1A60     		str	r2, [r3, #0]
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 860              		.loc 1 539 0
 861 005c 7B68     		ldr	r3, [r7, #4]
 862 005e D3F88431 		ldr	r3, [r3, #388]
 863 0062 23F48072 		bic	r2, r3, #256
 864 0066 7B68     		ldr	r3, [r7, #4]
 865 0068 C3F88421 		str	r2, [r3, #388]
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 866              		.loc 1 540 0
 867 006c 7B68     		ldr	r3, [r7, #4]
 868 006e D3F89431 		ldr	r3, [r3, #404]
 869 0072 23F48072 		bic	r2, r3, #256
 870 0076 7B68     		ldr	r3, [r7, #4]
 871 0078 C3F89421 		str	r2, [r3, #404]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 872              		.loc 1 541 0
 873 007c 7B68     		ldr	r3, [r7, #4]
 874 007e D3F8A431 		ldr	r3, [r3, #420]
 875 0082 23F48072 		bic	r2, r3, #256
 876 0086 7B68     		ldr	r3, [r7, #4]
 877 0088 C3F8A421 		str	r2, [r3, #420]
 878              	.L39:
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 879              		.loc 1 543 0
 880 008c 07F10C07 		add	r7, r7, #12
 881 0090 BD46     		mov	sp, r7
 882 0092 80BC     		pop	{r7}
 883 0094 7047     		bx	lr
 884              		.cfi_endproc
 885              	.LFE116:
 887 0096 00BF     		.section	.text.CAN_Transmit,"ax",%progbits
 888              		.align	2
 889              		.global	CAN_Transmit
 890              		.thumb
 891              		.thumb_func
 893              	CAN_Transmit:
 894              	.LFB117:
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 895              		.loc 1 573 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 16
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900 0000 80B4     		push	{r7}
 901              	.LCFI21:
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 0002 85B0     		sub	sp, sp, #20
 905              	.LCFI22:
 906              		.cfi_def_cfa_offset 24
 907 0004 00AF     		add	r7, sp, #0
 908              	.LCFI23:
 909              		.cfi_def_cfa_register 7
 910 0006 7860     		str	r0, [r7, #4]
 911 0008 3960     		str	r1, [r7, #0]
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 912              		.loc 1 574 0
 913 000a 4FF00003 		mov	r3, #0
 914 000e FB73     		strb	r3, [r7, #15]
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 915              		.loc 1 582 0
 916 0010 7B68     		ldr	r3, [r7, #4]
 917 0012 9B68     		ldr	r3, [r3, #8]
 918 0014 03F08063 		and	r3, r3, #67108864
 919 0018 002B     		cmp	r3, #0
 920 001a 03D0     		beq	.L43
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 921              		.loc 1 584 0
 922 001c 4FF00003 		mov	r3, #0
 923 0020 FB73     		strb	r3, [r7, #15]
 924 0022 16E0     		b	.L44
 925              	.L43:
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 926              		.loc 1 586 0
 927 0024 7B68     		ldr	r3, [r7, #4]
 928 0026 9B68     		ldr	r3, [r3, #8]
 929 0028 03F00063 		and	r3, r3, #134217728
 930 002c 002B     		cmp	r3, #0
 931 002e 03D0     		beq	.L45
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 932              		.loc 1 588 0
 933 0030 4FF00103 		mov	r3, #1
 934 0034 FB73     		strb	r3, [r7, #15]
 935 0036 0CE0     		b	.L44
 936              	.L45:
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 937              		.loc 1 590 0
 938 0038 7B68     		ldr	r3, [r7, #4]
 939 003a 9B68     		ldr	r3, [r3, #8]
 940 003c 03F08053 		and	r3, r3, #268435456
 941 0040 002B     		cmp	r3, #0
 942 0042 03D0     		beq	.L46
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 943              		.loc 1 592 0
 944 0044 4FF00203 		mov	r3, #2
 945 0048 FB73     		strb	r3, [r7, #15]
 946 004a 02E0     		b	.L44
 947              	.L46:
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 948              		.loc 1 596 0
 949 004c 4FF00403 		mov	r3, #4
 950 0050 FB73     		strb	r3, [r7, #15]
 951              	.L44:
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 952              		.loc 1 599 0
 953 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 954 0054 042B     		cmp	r3, #4
 955 0056 00F0BA80 		beq	.L47
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 956              		.loc 1 602 0
 957 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 958 005c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 959 005e 7968     		ldr	r1, [r7, #4]
 960 0060 02F11802 		add	r2, r2, #24
 961 0064 4FEA0212 		lsl	r2, r2, #4
 962 0068 8A18     		adds	r2, r1, r2
 963 006a 1268     		ldr	r2, [r2, #0]
 964 006c 02F00102 		and	r2, r2, #1
 965 0070 7968     		ldr	r1, [r7, #4]
 966 0072 03F11803 		add	r3, r3, #24
 967 0076 4FEA0313 		lsl	r3, r3, #4
 968 007a CB18     		adds	r3, r1, r3
 969 007c 1A60     		str	r2, [r3, #0]
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 970              		.loc 1 603 0
 971 007e 3B68     		ldr	r3, [r7, #0]
 972 0080 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 973 0082 002B     		cmp	r3, #0
 974 0084 18D1     		bne	.L48
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 975              		.loc 1 606 0
 976 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 977 0088 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 978 008a 7968     		ldr	r1, [r7, #4]
 979 008c 02F11802 		add	r2, r2, #24
 980 0090 4FEA0212 		lsl	r2, r2, #4
 981 0094 8A18     		adds	r2, r1, r2
 982 0096 1168     		ldr	r1, [r2, #0]
 983 0098 3A68     		ldr	r2, [r7, #0]
 984 009a 1268     		ldr	r2, [r2, #0]
 985 009c 4FEA4250 		lsl	r0, r2, #21
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 986              		.loc 1 607 0
 987 00a0 3A68     		ldr	r2, [r7, #0]
 988 00a2 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 989              		.loc 1 606 0
 990 00a4 0243     		orrs	r2, r2, r0
 991 00a6 0A43     		orrs	r2, r2, r1
 992 00a8 7968     		ldr	r1, [r7, #4]
 993 00aa 03F11803 		add	r3, r3, #24
 994 00ae 4FEA0313 		lsl	r3, r3, #4
 995 00b2 CB18     		adds	r3, r1, r3
 996 00b4 1A60     		str	r2, [r3, #0]
 997 00b6 1AE0     		b	.L49
 998              	.L48:
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 999              		.loc 1 612 0
 1000 00b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1001 00ba FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1002 00bc 7968     		ldr	r1, [r7, #4]
 1003 00be 02F11802 		add	r2, r2, #24
 1004 00c2 4FEA0212 		lsl	r2, r2, #4
 1005 00c6 8A18     		adds	r2, r1, r2
 1006 00c8 1168     		ldr	r1, [r2, #0]
 1007 00ca 3A68     		ldr	r2, [r7, #0]
 1008 00cc 5268     		ldr	r2, [r2, #4]
 1009 00ce 4FEAC200 		lsl	r0, r2, #3
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1010              		.loc 1 613 0
 1011 00d2 3A68     		ldr	r2, [r7, #0]
 1012 00d4 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1013              		.loc 1 612 0
 1014 00d6 1043     		orrs	r0, r0, r2
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 1015              		.loc 1 614 0
 1016 00d8 3A68     		ldr	r2, [r7, #0]
 1017 00da 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1018              		.loc 1 613 0
 1019 00dc 0243     		orrs	r2, r2, r0
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1020              		.loc 1 612 0
 1021 00de 0A43     		orrs	r2, r2, r1
 1022 00e0 7968     		ldr	r1, [r7, #4]
 1023 00e2 03F11803 		add	r3, r3, #24
 1024 00e6 4FEA0313 		lsl	r3, r3, #4
 1025 00ea CB18     		adds	r3, r1, r3
 1026 00ec 1A60     		str	r2, [r3, #0]
 1027              	.L49:
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 1028              		.loc 1 618 0
 1029 00ee 3B68     		ldr	r3, [r7, #0]
 1030 00f0 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1031 00f2 03F00F03 		and	r3, r3, #15
 1032 00f6 DAB2     		uxtb	r2, r3
 1033 00f8 3B68     		ldr	r3, [r7, #0]
 1034 00fa 9A72     		strb	r2, [r3, #10]
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 1035              		.loc 1 619 0
 1036 00fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1037 00fe FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1038 0100 7968     		ldr	r1, [r7, #4]
 1039 0102 02F11802 		add	r2, r2, #24
 1040 0106 4FEA0212 		lsl	r2, r2, #4
 1041 010a 8A18     		adds	r2, r1, r2
 1042 010c 5268     		ldr	r2, [r2, #4]
 1043 010e 22F00F02 		bic	r2, r2, #15
 1044 0112 7968     		ldr	r1, [r7, #4]
 1045 0114 03F11803 		add	r3, r3, #24
 1046 0118 4FEA0313 		lsl	r3, r3, #4
 1047 011c CB18     		adds	r3, r1, r3
 1048 011e 5A60     		str	r2, [r3, #4]
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 1049              		.loc 1 620 0
 1050 0120 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1051 0122 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1052 0124 7968     		ldr	r1, [r7, #4]
 1053 0126 02F11802 		add	r2, r2, #24
 1054 012a 4FEA0212 		lsl	r2, r2, #4
 1055 012e 8A18     		adds	r2, r1, r2
 1056 0130 5168     		ldr	r1, [r2, #4]
 1057 0132 3A68     		ldr	r2, [r7, #0]
 1058 0134 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 1059 0136 0A43     		orrs	r2, r2, r1
 1060 0138 7968     		ldr	r1, [r7, #4]
 1061 013a 03F11803 		add	r3, r3, #24
 1062 013e 4FEA0313 		lsl	r3, r3, #4
 1063 0142 CB18     		adds	r3, r1, r3
 1064 0144 5A60     		str	r2, [r3, #4]
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1065              		.loc 1 623 0
 1066 0146 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1067 0148 3A68     		ldr	r2, [r7, #0]
 1068 014a 927B     		ldrb	r2, [r2, #14]	@ zero_extendqisi2
 1069 014c 4FEA0261 		lsl	r1, r2, #24
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1070              		.loc 1 624 0
 1071 0150 3A68     		ldr	r2, [r7, #0]
 1072 0152 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 1073 0154 4FEA0242 		lsl	r2, r2, #16
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1074              		.loc 1 623 0
 1075 0158 1143     		orrs	r1, r1, r2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1076              		.loc 1 625 0
 1077 015a 3A68     		ldr	r2, [r7, #0]
 1078 015c 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 1079 015e 4FEA0222 		lsl	r2, r2, #8
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1080              		.loc 1 624 0
 1081 0162 1143     		orrs	r1, r1, r2
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 1082              		.loc 1 626 0
 1083 0164 3A68     		ldr	r2, [r7, #0]
 1084 0166 D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1085              		.loc 1 625 0
 1086 0168 0A43     		orrs	r2, r2, r1
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1087              		.loc 1 623 0
 1088 016a 7968     		ldr	r1, [r7, #4]
 1089 016c 4FEA0313 		lsl	r3, r3, #4
 1090 0170 CB18     		adds	r3, r1, r3
 1091 0172 03F5C473 		add	r3, r3, #392
 1092 0176 1A60     		str	r2, [r3, #0]
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1093              		.loc 1 627 0
 1094 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1095 017a 3A68     		ldr	r2, [r7, #0]
 1096 017c 927C     		ldrb	r2, [r2, #18]	@ zero_extendqisi2
 1097 017e 4FEA0261 		lsl	r1, r2, #24
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1098              		.loc 1 628 0
 1099 0182 3A68     		ldr	r2, [r7, #0]
 1100 0184 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 1101 0186 4FEA0242 		lsl	r2, r2, #16
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1102              		.loc 1 627 0
 1103 018a 1143     		orrs	r1, r1, r2
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1104              		.loc 1 629 0
 1105 018c 3A68     		ldr	r2, [r7, #0]
 1106 018e 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 1107 0190 4FEA0222 		lsl	r2, r2, #8
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1108              		.loc 1 628 0
 1109 0194 1143     		orrs	r1, r1, r2
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 1110              		.loc 1 630 0
 1111 0196 3A68     		ldr	r2, [r7, #0]
 1112 0198 D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1113              		.loc 1 629 0
 1114 019a 0A43     		orrs	r2, r2, r1
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1115              		.loc 1 627 0
 1116 019c 7968     		ldr	r1, [r7, #4]
 1117 019e 4FEA0313 		lsl	r3, r3, #4
 1118 01a2 CB18     		adds	r3, r1, r3
 1119 01a4 03F5C473 		add	r3, r3, #392
 1120 01a8 5A60     		str	r2, [r3, #4]
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 1121              		.loc 1 632 0
 1122 01aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1123 01ac FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1124 01ae 7968     		ldr	r1, [r7, #4]
 1125 01b0 02F11802 		add	r2, r2, #24
 1126 01b4 4FEA0212 		lsl	r2, r2, #4
 1127 01b8 8A18     		adds	r2, r1, r2
 1128 01ba 1268     		ldr	r2, [r2, #0]
 1129 01bc 42F00102 		orr	r2, r2, #1
 1130 01c0 7968     		ldr	r1, [r7, #4]
 1131 01c2 03F11803 		add	r3, r3, #24
 1132 01c6 4FEA0313 		lsl	r3, r3, #4
 1133 01ca CB18     		adds	r3, r1, r3
 1134 01cc 1A60     		str	r2, [r3, #0]
 1135              	.L47:
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 1136              		.loc 1 634 0
 1137 01ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1138              		.loc 1 635 0
 1139 01d0 1846     		mov	r0, r3
 1140 01d2 07F11407 		add	r7, r7, #20
 1141 01d6 BD46     		mov	sp, r7
 1142 01d8 80BC     		pop	{r7}
 1143 01da 7047     		bx	lr
 1144              		.cfi_endproc
 1145              	.LFE117:
 1147              		.section	.text.CAN_TransmitStatus,"ax",%progbits
 1148              		.align	2
 1149              		.global	CAN_TransmitStatus
 1150              		.thumb
 1151              		.thumb_func
 1153              	CAN_TransmitStatus:
 1154              	.LFB118:
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1155              		.loc 1 645 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 16
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160 0000 80B4     		push	{r7}
 1161              	.LCFI24:
 1162              		.cfi_def_cfa_offset 4
 1163              		.cfi_offset 7, -4
 1164 0002 85B0     		sub	sp, sp, #20
 1165              	.LCFI25:
 1166              		.cfi_def_cfa_offset 24
 1167 0004 00AF     		add	r7, sp, #0
 1168              	.LCFI26:
 1169              		.cfi_def_cfa_register 7
 1170 0006 7860     		str	r0, [r7, #4]
 1171 0008 0B46     		mov	r3, r1
 1172 000a FB70     		strb	r3, [r7, #3]
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 1173              		.loc 1 646 0
 1174 000c 4FF00003 		mov	r3, #0
 1175 0010 FB60     		str	r3, [r7, #12]
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 1176              		.loc 1 652 0
 1177 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1178 0014 012B     		cmp	r3, #1
 1179 0016 0CD0     		beq	.L53
 1180 0018 022B     		cmp	r3, #2
 1181 001a 13D0     		beq	.L54
 1182 001c 002B     		cmp	r3, #0
 1183 001e 1AD1     		bne	.L66
 1184              	.L52:
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 1185              		.loc 1 655 0
 1186 0020 7B68     		ldr	r3, [r7, #4]
 1187 0022 9A68     		ldr	r2, [r3, #8]
 1188 0024 4FF00303 		mov	r3, #3
 1189 0028 C0F20043 		movt	r3, 1024
 1190 002c 1340     		ands	r3, r3, r2
 1191 002e FB60     		str	r3, [r7, #12]
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1192              		.loc 1 656 0
 1193 0030 15E0     		b	.L55
 1194              	.L53:
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 1195              		.loc 1 658 0
 1196 0032 7B68     		ldr	r3, [r7, #4]
 1197 0034 9A68     		ldr	r2, [r3, #8]
 1198 0036 4FF44073 		mov	r3, #768
 1199 003a C0F60003 		movt	r3, 2048
 1200 003e 1340     		ands	r3, r3, r2
 1201 0040 FB60     		str	r3, [r7, #12]
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1202              		.loc 1 659 0
 1203 0042 0CE0     		b	.L55
 1204              	.L54:
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 1205              		.loc 1 661 0
 1206 0044 7B68     		ldr	r3, [r7, #4]
 1207 0046 9A68     		ldr	r2, [r3, #8]
 1208 0048 4FF00003 		mov	r3, #0
 1209 004c C1F20303 		movt	r3, 4099
 1210 0050 1340     		ands	r3, r3, r2
 1211 0052 FB60     		str	r3, [r7, #12]
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1212              		.loc 1 662 0
 1213 0054 03E0     		b	.L55
 1214              	.L66:
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 1215              		.loc 1 664 0
 1216 0056 4FF00003 		mov	r3, #0
 1217 005a FB60     		str	r3, [r7, #12]
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1218              		.loc 1 665 0
 1219 005c 00BF     		nop
 1220              	.L55:
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 1221              		.loc 1 667 0
 1222 005e FB68     		ldr	r3, [r7, #12]
 1223 0060 4FF48072 		mov	r2, #256
 1224 0064 C0F60002 		movt	r2, 2048
 1225 0068 9342     		cmp	r3, r2
 1226 006a 2FD0     		beq	.L60
 1227 006c 4FF48072 		mov	r2, #256
 1228 0070 C0F60002 		movt	r2, 2048
 1229 0074 9342     		cmp	r3, r2
 1230 0076 0ED8     		bhi	.L64
 1231 0078 4FF00102 		mov	r2, #1
 1232 007c C0F20042 		movt	r2, 1024
 1233 0080 9342     		cmp	r3, r2
 1234 0082 1FD0     		beq	.L58
 1235 0084 4FF00302 		mov	r2, #3
 1236 0088 C0F20042 		movt	r2, 1024
 1237 008c 9342     		cmp	r3, r2
 1238 008e 25D0     		beq	.L59
 1239 0090 002B     		cmp	r3, #0
 1240 0092 13D0     		beq	.L57
 1241 0094 2EE0     		b	.L56
 1242              	.L64:
 1243 0096 4FF00002 		mov	r2, #0
 1244 009a C1F20102 		movt	r2, 4097
 1245 009e 9342     		cmp	r3, r2
 1246 00a0 18D0     		beq	.L62
 1247 00a2 4FF00002 		mov	r2, #0
 1248 00a6 C1F20302 		movt	r2, 4099
 1249 00aa 9342     		cmp	r3, r2
 1250 00ac 1ED0     		beq	.L63
 1251 00ae 4FF44072 		mov	r2, #768
 1252 00b2 C0F60002 		movt	r2, 2048
 1253 00b6 9342     		cmp	r3, r2
 1254 00b8 14D0     		beq	.L61
 1255 00ba 1BE0     		b	.L56
 1256              	.L57:
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 1257              		.loc 1 670 0
 1258 00bc 4FF00203 		mov	r3, #2
 1259 00c0 FB60     		str	r3, [r7, #12]
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1260              		.loc 1 671 0
 1261 00c2 1BE0     		b	.L65
 1262              	.L58:
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 1263              		.loc 1 673 0
 1264 00c4 4FF00003 		mov	r3, #0
 1265 00c8 FB60     		str	r3, [r7, #12]
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1266              		.loc 1 674 0
 1267 00ca 17E0     		b	.L65
 1268              	.L60:
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 1269              		.loc 1 675 0
 1270 00cc 4FF00003 		mov	r3, #0
 1271 00d0 FB60     		str	r3, [r7, #12]
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1272              		.loc 1 676 0
 1273 00d2 13E0     		b	.L65
 1274              	.L62:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 1275              		.loc 1 677 0
 1276 00d4 4FF00003 		mov	r3, #0
 1277 00d8 FB60     		str	r3, [r7, #12]
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1278              		.loc 1 678 0
 1279 00da 0FE0     		b	.L65
 1280              	.L59:
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 1281              		.loc 1 680 0
 1282 00dc 4FF00103 		mov	r3, #1
 1283 00e0 FB60     		str	r3, [r7, #12]
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1284              		.loc 1 681 0
 1285 00e2 0BE0     		b	.L65
 1286              	.L61:
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 1287              		.loc 1 682 0
 1288 00e4 4FF00103 		mov	r3, #1
 1289 00e8 FB60     		str	r3, [r7, #12]
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1290              		.loc 1 683 0
 1291 00ea 07E0     		b	.L65
 1292              	.L63:
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 1293              		.loc 1 684 0
 1294 00ec 4FF00103 		mov	r3, #1
 1295 00f0 FB60     		str	r3, [r7, #12]
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1296              		.loc 1 685 0
 1297 00f2 03E0     		b	.L65
 1298              	.L56:
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 1299              		.loc 1 686 0
 1300 00f4 4FF00003 		mov	r3, #0
 1301 00f8 FB60     		str	r3, [r7, #12]
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1302              		.loc 1 687 0
 1303 00fa 00BF     		nop
 1304              	.L65:
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 1305              		.loc 1 689 0
 1306 00fc FB68     		ldr	r3, [r7, #12]
 1307 00fe DBB2     		uxtb	r3, r3
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1308              		.loc 1 690 0
 1309 0100 1846     		mov	r0, r3
 1310 0102 07F11407 		add	r7, r7, #20
 1311 0106 BD46     		mov	sp, r7
 1312 0108 80BC     		pop	{r7}
 1313 010a 7047     		bx	lr
 1314              		.cfi_endproc
 1315              	.LFE118:
 1317              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 1318              		.align	2
 1319              		.global	CAN_CancelTransmit
 1320              		.thumb
 1321              		.thumb_func
 1323              	CAN_CancelTransmit:
 1324              	.LFB119:
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1325              		.loc 1 699 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 8
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330 0000 80B4     		push	{r7}
 1331              	.LCFI27:
 1332              		.cfi_def_cfa_offset 4
 1333              		.cfi_offset 7, -4
 1334 0002 83B0     		sub	sp, sp, #12
 1335              	.LCFI28:
 1336              		.cfi_def_cfa_offset 16
 1337 0004 00AF     		add	r7, sp, #0
 1338              	.LCFI29:
 1339              		.cfi_def_cfa_register 7
 1340 0006 7860     		str	r0, [r7, #4]
 1341 0008 0B46     		mov	r3, r1
 1342 000a FB70     		strb	r3, [r7, #3]
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 1343              		.loc 1 704 0
 1344 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1345 000e 012B     		cmp	r3, #1
 1346 0010 0AD0     		beq	.L70
 1347 0012 022B     		cmp	r3, #2
 1348 0014 0FD0     		beq	.L71
 1349 0016 002B     		cmp	r3, #0
 1350 0018 14D1     		bne	.L73
 1351              	.L69:
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 1352              		.loc 1 706 0
 1353 001a 7B68     		ldr	r3, [r7, #4]
 1354 001c 9B68     		ldr	r3, [r3, #8]
 1355 001e 43F08002 		orr	r2, r3, #128
 1356 0022 7B68     		ldr	r3, [r7, #4]
 1357 0024 9A60     		str	r2, [r3, #8]
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1358              		.loc 1 707 0
 1359 0026 0EE0     		b	.L67
 1360              	.L70:
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 1361              		.loc 1 708 0
 1362 0028 7B68     		ldr	r3, [r7, #4]
 1363 002a 9B68     		ldr	r3, [r3, #8]
 1364 002c 43F40042 		orr	r2, r3, #32768
 1365 0030 7B68     		ldr	r3, [r7, #4]
 1366 0032 9A60     		str	r2, [r3, #8]
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1367              		.loc 1 709 0
 1368 0034 07E0     		b	.L67
 1369              	.L71:
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 1370              		.loc 1 710 0
 1371 0036 7B68     		ldr	r3, [r7, #4]
 1372 0038 9B68     		ldr	r3, [r3, #8]
 1373 003a 43F40002 		orr	r2, r3, #8388608
 1374 003e 7B68     		ldr	r3, [r7, #4]
 1375 0040 9A60     		str	r2, [r3, #8]
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1376              		.loc 1 711 0
 1377 0042 00E0     		b	.L67
 1378              	.L73:
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1379              		.loc 1 713 0
 1380 0044 00BF     		nop
 1381              	.L67:
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1382              		.loc 1 715 0
 1383 0046 07F10C07 		add	r7, r7, #12
 1384 004a BD46     		mov	sp, r7
 1385 004c 80BC     		pop	{r7}
 1386 004e 7047     		bx	lr
 1387              		.cfi_endproc
 1388              	.LFE119:
 1390              		.section	.text.CAN_Receive,"ax",%progbits
 1391              		.align	2
 1392              		.global	CAN_Receive
 1393              		.thumb
 1394              		.thumb_func
 1396              	CAN_Receive:
 1397              	.LFB120:
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1398              		.loc 1 746 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 16
 1401              		@ frame_needed = 1, uses_anonymous_args = 0
 1402              		@ link register save eliminated.
 1403 0000 80B4     		push	{r7}
 1404              	.LCFI30:
 1405              		.cfi_def_cfa_offset 4
 1406              		.cfi_offset 7, -4
 1407 0002 85B0     		sub	sp, sp, #20
 1408              	.LCFI31:
 1409              		.cfi_def_cfa_offset 24
 1410 0004 00AF     		add	r7, sp, #0
 1411              	.LCFI32:
 1412              		.cfi_def_cfa_register 7
 1413 0006 F860     		str	r0, [r7, #12]
 1414 0008 0B46     		mov	r3, r1
 1415 000a 7A60     		str	r2, [r7, #4]
 1416 000c FB72     		strb	r3, [r7, #11]
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1417              		.loc 1 751 0
 1418 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1419 0010 FA68     		ldr	r2, [r7, #12]
 1420 0012 03F11B03 		add	r3, r3, #27
 1421 0016 4FEA0313 		lsl	r3, r3, #4
 1422 001a D318     		adds	r3, r2, r3
 1423 001c 1B68     		ldr	r3, [r3, #0]
 1424 001e DBB2     		uxtb	r3, r3
 1425 0020 03F00403 		and	r3, r3, #4
 1426 0024 DAB2     		uxtb	r2, r3
 1427 0026 7B68     		ldr	r3, [r7, #4]
 1428 0028 1A72     		strb	r2, [r3, #8]
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1429              		.loc 1 752 0
 1430 002a 7B68     		ldr	r3, [r7, #4]
 1431 002c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1432 002e 002B     		cmp	r3, #0
 1433 0030 0CD1     		bne	.L75
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 1434              		.loc 1 754 0
 1435 0032 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1436 0034 FA68     		ldr	r2, [r7, #12]
 1437 0036 03F11B03 		add	r3, r3, #27
 1438 003a 4FEA0313 		lsl	r3, r3, #4
 1439 003e D318     		adds	r3, r2, r3
 1440 0040 1B68     		ldr	r3, [r3, #0]
 1441 0042 4FEA5352 		lsr	r2, r3, #21
 1442 0046 7B68     		ldr	r3, [r7, #4]
 1443 0048 1A60     		str	r2, [r3, #0]
 1444 004a 0BE0     		b	.L76
 1445              	.L75:
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 1446              		.loc 1 758 0
 1447 004c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1448 004e FA68     		ldr	r2, [r7, #12]
 1449 0050 03F11B03 		add	r3, r3, #27
 1450 0054 4FEA0313 		lsl	r3, r3, #4
 1451 0058 D318     		adds	r3, r2, r3
 1452 005a 1B68     		ldr	r3, [r3, #0]
 1453 005c 4FEAD302 		lsr	r2, r3, #3
 1454 0060 7B68     		ldr	r3, [r7, #4]
 1455 0062 5A60     		str	r2, [r3, #4]
 1456              	.L76:
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1457              		.loc 1 761 0
 1458 0064 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1459 0066 FA68     		ldr	r2, [r7, #12]
 1460 0068 03F11B03 		add	r3, r3, #27
 1461 006c 4FEA0313 		lsl	r3, r3, #4
 1462 0070 D318     		adds	r3, r2, r3
 1463 0072 1B68     		ldr	r3, [r3, #0]
 1464 0074 DBB2     		uxtb	r3, r3
 1465 0076 03F00203 		and	r3, r3, #2
 1466 007a DAB2     		uxtb	r2, r3
 1467 007c 7B68     		ldr	r3, [r7, #4]
 1468 007e 5A72     		strb	r2, [r3, #9]
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 1469              		.loc 1 763 0
 1470 0080 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1471 0082 FA68     		ldr	r2, [r7, #12]
 1472 0084 03F11B03 		add	r3, r3, #27
 1473 0088 4FEA0313 		lsl	r3, r3, #4
 1474 008c D318     		adds	r3, r2, r3
 1475 008e 5B68     		ldr	r3, [r3, #4]
 1476 0090 DBB2     		uxtb	r3, r3
 1477 0092 03F00F03 		and	r3, r3, #15
 1478 0096 DAB2     		uxtb	r2, r3
 1479 0098 7B68     		ldr	r3, [r7, #4]
 1480 009a 9A72     		strb	r2, [r3, #10]
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 1481              		.loc 1 765 0
 1482 009c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1483 009e FA68     		ldr	r2, [r7, #12]
 1484 00a0 03F11B03 		add	r3, r3, #27
 1485 00a4 4FEA0313 		lsl	r3, r3, #4
 1486 00a8 D318     		adds	r3, r2, r3
 1487 00aa 5B68     		ldr	r3, [r3, #4]
 1488 00ac 4FEA1323 		lsr	r3, r3, #8
 1489 00b0 DAB2     		uxtb	r2, r3
 1490 00b2 7B68     		ldr	r3, [r7, #4]
 1491 00b4 DA74     		strb	r2, [r3, #19]
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 1492              		.loc 1 767 0
 1493 00b6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1494 00b8 FA68     		ldr	r2, [r7, #12]
 1495 00ba 4FEA0313 		lsl	r3, r3, #4
 1496 00be D318     		adds	r3, r2, r3
 1497 00c0 03F5DC73 		add	r3, r3, #440
 1498 00c4 1B68     		ldr	r3, [r3, #0]
 1499 00c6 DAB2     		uxtb	r2, r3
 1500 00c8 7B68     		ldr	r3, [r7, #4]
 1501 00ca DA72     		strb	r2, [r3, #11]
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1502              		.loc 1 768 0
 1503 00cc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1504 00ce FA68     		ldr	r2, [r7, #12]
 1505 00d0 4FEA0313 		lsl	r3, r3, #4
 1506 00d4 D318     		adds	r3, r2, r3
 1507 00d6 03F5DC73 		add	r3, r3, #440
 1508 00da 1B68     		ldr	r3, [r3, #0]
 1509 00dc 4FEA1323 		lsr	r3, r3, #8
 1510 00e0 DAB2     		uxtb	r2, r3
 1511 00e2 7B68     		ldr	r3, [r7, #4]
 1512 00e4 1A73     		strb	r2, [r3, #12]
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1513              		.loc 1 769 0
 1514 00e6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1515 00e8 FA68     		ldr	r2, [r7, #12]
 1516 00ea 4FEA0313 		lsl	r3, r3, #4
 1517 00ee D318     		adds	r3, r2, r3
 1518 00f0 03F5DC73 		add	r3, r3, #440
 1519 00f4 1B68     		ldr	r3, [r3, #0]
 1520 00f6 4FEA1343 		lsr	r3, r3, #16
 1521 00fa DAB2     		uxtb	r2, r3
 1522 00fc 7B68     		ldr	r3, [r7, #4]
 1523 00fe 5A73     		strb	r2, [r3, #13]
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1524              		.loc 1 770 0
 1525 0100 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1526 0102 FA68     		ldr	r2, [r7, #12]
 1527 0104 4FEA0313 		lsl	r3, r3, #4
 1528 0108 D318     		adds	r3, r2, r3
 1529 010a 03F5DC73 		add	r3, r3, #440
 1530 010e 1B68     		ldr	r3, [r3, #0]
 1531 0110 4FEA1363 		lsr	r3, r3, #24
 1532 0114 DAB2     		uxtb	r2, r3
 1533 0116 7B68     		ldr	r3, [r7, #4]
 1534 0118 9A73     		strb	r2, [r3, #14]
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1535              		.loc 1 771 0
 1536 011a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1537 011c FA68     		ldr	r2, [r7, #12]
 1538 011e 4FEA0313 		lsl	r3, r3, #4
 1539 0122 D318     		adds	r3, r2, r3
 1540 0124 03F5DC73 		add	r3, r3, #440
 1541 0128 5B68     		ldr	r3, [r3, #4]
 1542 012a DAB2     		uxtb	r2, r3
 1543 012c 7B68     		ldr	r3, [r7, #4]
 1544 012e DA73     		strb	r2, [r3, #15]
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1545              		.loc 1 772 0
 1546 0130 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1547 0132 FA68     		ldr	r2, [r7, #12]
 1548 0134 4FEA0313 		lsl	r3, r3, #4
 1549 0138 D318     		adds	r3, r2, r3
 1550 013a 03F5DC73 		add	r3, r3, #440
 1551 013e 5B68     		ldr	r3, [r3, #4]
 1552 0140 4FEA1323 		lsr	r3, r3, #8
 1553 0144 DAB2     		uxtb	r2, r3
 1554 0146 7B68     		ldr	r3, [r7, #4]
 1555 0148 1A74     		strb	r2, [r3, #16]
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1556              		.loc 1 773 0
 1557 014a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1558 014c FA68     		ldr	r2, [r7, #12]
 1559 014e 4FEA0313 		lsl	r3, r3, #4
 1560 0152 D318     		adds	r3, r2, r3
 1561 0154 03F5DC73 		add	r3, r3, #440
 1562 0158 5B68     		ldr	r3, [r3, #4]
 1563 015a 4FEA1343 		lsr	r3, r3, #16
 1564 015e DAB2     		uxtb	r2, r3
 1565 0160 7B68     		ldr	r3, [r7, #4]
 1566 0162 5A74     		strb	r2, [r3, #17]
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1567              		.loc 1 774 0
 1568 0164 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1569 0166 FA68     		ldr	r2, [r7, #12]
 1570 0168 4FEA0313 		lsl	r3, r3, #4
 1571 016c D318     		adds	r3, r2, r3
 1572 016e 03F5DC73 		add	r3, r3, #440
 1573 0172 5B68     		ldr	r3, [r3, #4]
 1574 0174 4FEA1363 		lsr	r3, r3, #24
 1575 0178 DAB2     		uxtb	r2, r3
 1576 017a 7B68     		ldr	r3, [r7, #4]
 1577 017c 9A74     		strb	r2, [r3, #18]
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1578              		.loc 1 777 0
 1579 017e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1580 0180 002B     		cmp	r3, #0
 1581 0182 06D1     		bne	.L77
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1582              		.loc 1 779 0
 1583 0184 FB68     		ldr	r3, [r7, #12]
 1584 0186 DB68     		ldr	r3, [r3, #12]
 1585 0188 43F02002 		orr	r2, r3, #32
 1586 018c FB68     		ldr	r3, [r7, #12]
 1587 018e DA60     		str	r2, [r3, #12]
 1588 0190 05E0     		b	.L74
 1589              	.L77:
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1590              		.loc 1 784 0
 1591 0192 FB68     		ldr	r3, [r7, #12]
 1592 0194 1B69     		ldr	r3, [r3, #16]
 1593 0196 43F02002 		orr	r2, r3, #32
 1594 019a FB68     		ldr	r3, [r7, #12]
 1595 019c 1A61     		str	r2, [r3, #16]
 1596              	.L74:
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1597              		.loc 1 786 0
 1598 019e 07F11407 		add	r7, r7, #20
 1599 01a2 BD46     		mov	sp, r7
 1600 01a4 80BC     		pop	{r7}
 1601 01a6 7047     		bx	lr
 1602              		.cfi_endproc
 1603              	.LFE120:
 1605              		.section	.text.CAN_FIFORelease,"ax",%progbits
 1606              		.align	2
 1607              		.global	CAN_FIFORelease
 1608              		.thumb
 1609              		.thumb_func
 1611              	CAN_FIFORelease:
 1612              	.LFB121:
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1613              		.loc 1 795 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 8
 1616              		@ frame_needed = 1, uses_anonymous_args = 0
 1617              		@ link register save eliminated.
 1618 0000 80B4     		push	{r7}
 1619              	.LCFI33:
 1620              		.cfi_def_cfa_offset 4
 1621              		.cfi_offset 7, -4
 1622 0002 83B0     		sub	sp, sp, #12
 1623              	.LCFI34:
 1624              		.cfi_def_cfa_offset 16
 1625 0004 00AF     		add	r7, sp, #0
 1626              	.LCFI35:
 1627              		.cfi_def_cfa_register 7
 1628 0006 7860     		str	r0, [r7, #4]
 1629 0008 0B46     		mov	r3, r1
 1630 000a FB70     		strb	r3, [r7, #3]
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1631              		.loc 1 800 0
 1632 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1633 000e 002B     		cmp	r3, #0
 1634 0010 06D1     		bne	.L80
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1635              		.loc 1 802 0
 1636 0012 7B68     		ldr	r3, [r7, #4]
 1637 0014 DB68     		ldr	r3, [r3, #12]
 1638 0016 43F02002 		orr	r2, r3, #32
 1639 001a 7B68     		ldr	r3, [r7, #4]
 1640 001c DA60     		str	r2, [r3, #12]
 1641 001e 05E0     		b	.L79
 1642              	.L80:
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1643              		.loc 1 807 0
 1644 0020 7B68     		ldr	r3, [r7, #4]
 1645 0022 1B69     		ldr	r3, [r3, #16]
 1646 0024 43F02002 		orr	r2, r3, #32
 1647 0028 7B68     		ldr	r3, [r7, #4]
 1648 002a 1A61     		str	r2, [r3, #16]
 1649              	.L79:
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1650              		.loc 1 809 0
 1651 002c 07F10C07 		add	r7, r7, #12
 1652 0030 BD46     		mov	sp, r7
 1653 0032 80BC     		pop	{r7}
 1654 0034 7047     		bx	lr
 1655              		.cfi_endproc
 1656              	.LFE121:
 1658 0036 00BF     		.section	.text.CAN_MessagePending,"ax",%progbits
 1659              		.align	2
 1660              		.global	CAN_MessagePending
 1661              		.thumb
 1662              		.thumb_func
 1664              	CAN_MessagePending:
 1665              	.LFB122:
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1666              		.loc 1 818 0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 16
 1669              		@ frame_needed = 1, uses_anonymous_args = 0
 1670              		@ link register save eliminated.
 1671 0000 80B4     		push	{r7}
 1672              	.LCFI36:
 1673              		.cfi_def_cfa_offset 4
 1674              		.cfi_offset 7, -4
 1675 0002 85B0     		sub	sp, sp, #20
 1676              	.LCFI37:
 1677              		.cfi_def_cfa_offset 24
 1678 0004 00AF     		add	r7, sp, #0
 1679              	.LCFI38:
 1680              		.cfi_def_cfa_register 7
 1681 0006 7860     		str	r0, [r7, #4]
 1682 0008 0B46     		mov	r3, r1
 1683 000a FB70     		strb	r3, [r7, #3]
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 1684              		.loc 1 819 0
 1685 000c 4FF00003 		mov	r3, #0
 1686 0010 FB73     		strb	r3, [r7, #15]
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1687              		.loc 1 823 0
 1688 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1689 0014 002B     		cmp	r3, #0
 1690 0016 06D1     		bne	.L83
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 1691              		.loc 1 825 0
 1692 0018 7B68     		ldr	r3, [r7, #4]
 1693 001a DB68     		ldr	r3, [r3, #12]
 1694 001c DBB2     		uxtb	r3, r3
 1695 001e 03F00303 		and	r3, r3, #3
 1696 0022 FB73     		strb	r3, [r7, #15]
 1697 0024 0CE0     		b	.L84
 1698              	.L83:
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 1699              		.loc 1 827 0
 1700 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1701 0028 012B     		cmp	r3, #1
 1702 002a 06D1     		bne	.L85
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 1703              		.loc 1 829 0
 1704 002c 7B68     		ldr	r3, [r7, #4]
 1705 002e 1B69     		ldr	r3, [r3, #16]
 1706 0030 DBB2     		uxtb	r3, r3
 1707 0032 03F00303 		and	r3, r3, #3
 1708 0036 FB73     		strb	r3, [r7, #15]
 1709 0038 02E0     		b	.L84
 1710              	.L85:
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 1711              		.loc 1 833 0
 1712 003a 4FF00003 		mov	r3, #0
 1713 003e FB73     		strb	r3, [r7, #15]
 1714              	.L84:
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 1715              		.loc 1 835 0
 1716 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1717              		.loc 1 836 0
 1718 0042 1846     		mov	r0, r3
 1719 0044 07F11407 		add	r7, r7, #20
 1720 0048 BD46     		mov	sp, r7
 1721 004a 80BC     		pop	{r7}
 1722 004c 7047     		bx	lr
 1723              		.cfi_endproc
 1724              	.LFE122:
 1726 004e 00BF     		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1727              		.align	2
 1728              		.global	CAN_OperatingModeRequest
 1729              		.thumb
 1730              		.thumb_func
 1732              	CAN_OperatingModeRequest:
 1733              	.LFB123:
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1734              		.loc 1 868 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 16
 1737              		@ frame_needed = 1, uses_anonymous_args = 0
 1738              		@ link register save eliminated.
 1739 0000 80B4     		push	{r7}
 1740              	.LCFI39:
 1741              		.cfi_def_cfa_offset 4
 1742              		.cfi_offset 7, -4
 1743 0002 85B0     		sub	sp, sp, #20
 1744              	.LCFI40:
 1745              		.cfi_def_cfa_offset 24
 1746 0004 00AF     		add	r7, sp, #0
 1747              	.LCFI41:
 1748              		.cfi_def_cfa_register 7
 1749 0006 7860     		str	r0, [r7, #4]
 1750 0008 0B46     		mov	r3, r1
 1751 000a FB70     		strb	r3, [r7, #3]
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 1752              		.loc 1 869 0
 1753 000c 4FF00003 		mov	r3, #0
 1754 0010 FB73     		strb	r3, [r7, #15]
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 1755              		.loc 1 872 0
 1756 0012 4FF6FF73 		movw	r3, #65535
 1757 0016 BB60     		str	r3, [r7, #8]
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 1758              		.loc 1 878 0
 1759 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1760 001a 002B     		cmp	r3, #0
 1761 001c 23D1     		bne	.L87
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 1762              		.loc 1 881 0
 1763 001e 7B68     		ldr	r3, [r7, #4]
 1764 0020 1B68     		ldr	r3, [r3, #0]
 1765 0022 23F00303 		bic	r3, r3, #3
 1766 0026 43F00102 		orr	r2, r3, #1
 1767 002a 7B68     		ldr	r3, [r7, #4]
 1768 002c 1A60     		str	r2, [r3, #0]
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1769              		.loc 1 884 0
 1770 002e 03E0     		b	.L88
 1771              	.L90:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1772              		.loc 1 886 0
 1773 0030 BB68     		ldr	r3, [r7, #8]
 1774 0032 03F1FF33 		add	r3, r3, #-1
 1775 0036 BB60     		str	r3, [r7, #8]
 1776              	.L88:
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1777              		.loc 1 884 0 discriminator 1
 1778 0038 7B68     		ldr	r3, [r7, #4]
 1779 003a 5B68     		ldr	r3, [r3, #4]
 1780 003c 03F00303 		and	r3, r3, #3
 1781 0040 012B     		cmp	r3, #1
 1782 0042 02D0     		beq	.L89
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1783              		.loc 1 884 0 is_stmt 0 discriminator 2
 1784 0044 BB68     		ldr	r3, [r7, #8]
 1785 0046 002B     		cmp	r3, #0
 1786 0048 F2D1     		bne	.L90
 1787              	.L89:
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 1788              		.loc 1 888 0 is_stmt 1
 1789 004a 7B68     		ldr	r3, [r7, #4]
 1790 004c 5B68     		ldr	r3, [r3, #4]
 1791 004e 03F00303 		and	r3, r3, #3
 1792 0052 012B     		cmp	r3, #1
 1793 0054 03D0     		beq	.L91
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1794              		.loc 1 890 0
 1795 0056 4FF00003 		mov	r3, #0
 1796 005a FB73     		strb	r3, [r7, #15]
 1797 005c 52E0     		b	.L92
 1798              	.L91:
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1799              		.loc 1 894 0
 1800 005e 4FF00103 		mov	r3, #1
 1801 0062 FB73     		strb	r3, [r7, #15]
 1802 0064 4EE0     		b	.L92
 1803              	.L87:
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 1804              		.loc 1 897 0
 1805 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1806 0068 012B     		cmp	r3, #1
 1807 006a 21D1     		bne	.L93
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 1808              		.loc 1 900 0
 1809 006c 7B68     		ldr	r3, [r7, #4]
 1810 006e 1B68     		ldr	r3, [r3, #0]
 1811 0070 23F00302 		bic	r2, r3, #3
 1812 0074 7B68     		ldr	r3, [r7, #4]
 1813 0076 1A60     		str	r2, [r3, #0]
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1814              		.loc 1 903 0
 1815 0078 03E0     		b	.L94
 1816              	.L96:
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1817              		.loc 1 905 0
 1818 007a BB68     		ldr	r3, [r7, #8]
 1819 007c 03F1FF33 		add	r3, r3, #-1
 1820 0080 BB60     		str	r3, [r7, #8]
 1821              	.L94:
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1822              		.loc 1 903 0 discriminator 1
 1823 0082 7B68     		ldr	r3, [r7, #4]
 1824 0084 5B68     		ldr	r3, [r3, #4]
 1825 0086 03F00303 		and	r3, r3, #3
 1826 008a 002B     		cmp	r3, #0
 1827 008c 02D0     		beq	.L95
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1828              		.loc 1 903 0 is_stmt 0 discriminator 2
 1829 008e BB68     		ldr	r3, [r7, #8]
 1830 0090 002B     		cmp	r3, #0
 1831 0092 F2D1     		bne	.L96
 1832              	.L95:
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 1833              		.loc 1 907 0 is_stmt 1
 1834 0094 7B68     		ldr	r3, [r7, #4]
 1835 0096 5B68     		ldr	r3, [r3, #4]
 1836 0098 03F00303 		and	r3, r3, #3
 1837 009c 002B     		cmp	r3, #0
 1838 009e 03D0     		beq	.L97
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1839              		.loc 1 909 0
 1840 00a0 4FF00003 		mov	r3, #0
 1841 00a4 FB73     		strb	r3, [r7, #15]
 1842 00a6 2DE0     		b	.L92
 1843              	.L97:
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1844              		.loc 1 913 0
 1845 00a8 4FF00103 		mov	r3, #1
 1846 00ac FB73     		strb	r3, [r7, #15]
 1847 00ae 29E0     		b	.L92
 1848              	.L93:
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 1849              		.loc 1 916 0
 1850 00b0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1851 00b2 022B     		cmp	r3, #2
 1852 00b4 23D1     		bne	.L98
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1853              		.loc 1 919 0
 1854 00b6 7B68     		ldr	r3, [r7, #4]
 1855 00b8 1B68     		ldr	r3, [r3, #0]
 1856 00ba 23F00303 		bic	r3, r3, #3
 1857 00be 43F00202 		orr	r2, r3, #2
 1858 00c2 7B68     		ldr	r3, [r7, #4]
 1859 00c4 1A60     		str	r2, [r3, #0]
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1860              		.loc 1 922 0
 1861 00c6 03E0     		b	.L99
 1862              	.L101:
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1863              		.loc 1 924 0
 1864 00c8 BB68     		ldr	r3, [r7, #8]
 1865 00ca 03F1FF33 		add	r3, r3, #-1
 1866 00ce BB60     		str	r3, [r7, #8]
 1867              	.L99:
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1868              		.loc 1 922 0 discriminator 1
 1869 00d0 7B68     		ldr	r3, [r7, #4]
 1870 00d2 5B68     		ldr	r3, [r3, #4]
 1871 00d4 03F00303 		and	r3, r3, #3
 1872 00d8 022B     		cmp	r3, #2
 1873 00da 02D0     		beq	.L100
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1874              		.loc 1 922 0 is_stmt 0 discriminator 2
 1875 00dc BB68     		ldr	r3, [r7, #8]
 1876 00de 002B     		cmp	r3, #0
 1877 00e0 F2D1     		bne	.L101
 1878              	.L100:
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 1879              		.loc 1 926 0 is_stmt 1
 1880 00e2 7B68     		ldr	r3, [r7, #4]
 1881 00e4 5B68     		ldr	r3, [r3, #4]
 1882 00e6 03F00303 		and	r3, r3, #3
 1883 00ea 022B     		cmp	r3, #2
 1884 00ec 03D0     		beq	.L102
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1885              		.loc 1 928 0
 1886 00ee 4FF00003 		mov	r3, #0
 1887 00f2 FB73     		strb	r3, [r7, #15]
 1888 00f4 06E0     		b	.L92
 1889              	.L102:
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1890              		.loc 1 932 0
 1891 00f6 4FF00103 		mov	r3, #1
 1892 00fa FB73     		strb	r3, [r7, #15]
 1893 00fc 02E0     		b	.L92
 1894              	.L98:
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 1895              		.loc 1 937 0
 1896 00fe 4FF00003 		mov	r3, #0
 1897 0102 FB73     		strb	r3, [r7, #15]
 1898              	.L92:
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 1899              		.loc 1 940 0
 1900 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1901              		.loc 1 941 0
 1902 0106 1846     		mov	r0, r3
 1903 0108 07F11407 		add	r7, r7, #20
 1904 010c BD46     		mov	sp, r7
 1905 010e 80BC     		pop	{r7}
 1906 0110 7047     		bx	lr
 1907              		.cfi_endproc
 1908              	.LFE123:
 1910 0112 00BF     		.section	.text.CAN_Sleep,"ax",%progbits
 1911              		.align	2
 1912              		.global	CAN_Sleep
 1913              		.thumb
 1914              		.thumb_func
 1916              	CAN_Sleep:
 1917              	.LFB124:
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1918              		.loc 1 949 0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 16
 1921              		@ frame_needed = 1, uses_anonymous_args = 0
 1922              		@ link register save eliminated.
 1923 0000 80B4     		push	{r7}
 1924              	.LCFI42:
 1925              		.cfi_def_cfa_offset 4
 1926              		.cfi_offset 7, -4
 1927 0002 85B0     		sub	sp, sp, #20
 1928              	.LCFI43:
 1929              		.cfi_def_cfa_offset 24
 1930 0004 00AF     		add	r7, sp, #0
 1931              	.LCFI44:
 1932              		.cfi_def_cfa_register 7
 1933 0006 7860     		str	r0, [r7, #4]
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 1934              		.loc 1 950 0
 1935 0008 4FF00003 		mov	r3, #0
 1936 000c FB73     		strb	r3, [r7, #15]
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1937              		.loc 1 956 0
 1938 000e 7B68     		ldr	r3, [r7, #4]
 1939 0010 1B68     		ldr	r3, [r3, #0]
 1940 0012 23F00303 		bic	r3, r3, #3
 1941 0016 43F00202 		orr	r2, r3, #2
 1942 001a 7B68     		ldr	r3, [r7, #4]
 1943 001c 1A60     		str	r2, [r3, #0]
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 1944              		.loc 1 959 0
 1945 001e 7B68     		ldr	r3, [r7, #4]
 1946 0020 5B68     		ldr	r3, [r3, #4]
 1947 0022 03F00303 		and	r3, r3, #3
 1948 0026 022B     		cmp	r3, #2
 1949 0028 02D1     		bne	.L104
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 1950              		.loc 1 962 0
 1951 002a 4FF00103 		mov	r3, #1
 1952 002e FB73     		strb	r3, [r7, #15]
 1953              	.L104:
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 1954              		.loc 1 965 0
 1955 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1956              		.loc 1 966 0
 1957 0032 1846     		mov	r0, r3
 1958 0034 07F11407 		add	r7, r7, #20
 1959 0038 BD46     		mov	sp, r7
 1960 003a 80BC     		pop	{r7}
 1961 003c 7047     		bx	lr
 1962              		.cfi_endproc
 1963              	.LFE124:
 1965 003e 00BF     		.section	.text.CAN_WakeUp,"ax",%progbits
 1966              		.align	2
 1967              		.global	CAN_WakeUp
 1968              		.thumb
 1969              		.thumb_func
 1971              	CAN_WakeUp:
 1972              	.LFB125:
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1973              		.loc 1 974 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 16
 1976              		@ frame_needed = 1, uses_anonymous_args = 0
 1977              		@ link register save eliminated.
 1978 0000 80B4     		push	{r7}
 1979              	.LCFI45:
 1980              		.cfi_def_cfa_offset 4
 1981              		.cfi_offset 7, -4
 1982 0002 85B0     		sub	sp, sp, #20
 1983              	.LCFI46:
 1984              		.cfi_def_cfa_offset 24
 1985 0004 00AF     		add	r7, sp, #0
 1986              	.LCFI47:
 1987              		.cfi_def_cfa_register 7
 1988 0006 7860     		str	r0, [r7, #4]
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 1989              		.loc 1 975 0
 1990 0008 4FF6FF73 		movw	r3, #65535
 1991 000c FB60     		str	r3, [r7, #12]
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 1992              		.loc 1 976 0
 1993 000e 4FF00003 		mov	r3, #0
 1994 0012 FB72     		strb	r3, [r7, #11]
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 1995              		.loc 1 982 0
 1996 0014 7B68     		ldr	r3, [r7, #4]
 1997 0016 1B68     		ldr	r3, [r3, #0]
 1998 0018 23F00202 		bic	r2, r3, #2
 1999 001c 7B68     		ldr	r3, [r7, #4]
 2000 001e 1A60     		str	r2, [r3, #0]
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2001              		.loc 1 985 0
 2002 0020 03E0     		b	.L106
 2003              	.L108:
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 2004              		.loc 1 987 0
 2005 0022 FB68     		ldr	r3, [r7, #12]
 2006 0024 03F1FF33 		add	r3, r3, #-1
 2007 0028 FB60     		str	r3, [r7, #12]
 2008              	.L106:
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2009              		.loc 1 985 0 discriminator 1
 2010 002a 7B68     		ldr	r3, [r7, #4]
 2011 002c 5B68     		ldr	r3, [r3, #4]
 2012 002e 03F00203 		and	r3, r3, #2
 2013 0032 002B     		cmp	r3, #0
 2014 0034 02D0     		beq	.L107
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2015              		.loc 1 985 0 is_stmt 0 discriminator 2
 2016 0036 FB68     		ldr	r3, [r7, #12]
 2017 0038 002B     		cmp	r3, #0
 2018 003a F2D1     		bne	.L108
 2019              	.L107:
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 2020              		.loc 1 989 0 is_stmt 1
 2021 003c 7B68     		ldr	r3, [r7, #4]
 2022 003e 5B68     		ldr	r3, [r3, #4]
 2023 0040 03F00203 		and	r3, r3, #2
 2024 0044 002B     		cmp	r3, #0
 2025 0046 02D1     		bne	.L109
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 2026              		.loc 1 992 0
 2027 0048 4FF00103 		mov	r3, #1
 2028 004c FB72     		strb	r3, [r7, #11]
 2029              	.L109:
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 2030              		.loc 1 995 0
 2031 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2032              		.loc 1 996 0
 2033 0050 1846     		mov	r0, r3
 2034 0052 07F11407 		add	r7, r7, #20
 2035 0056 BD46     		mov	sp, r7
 2036 0058 80BC     		pop	{r7}
 2037 005a 7047     		bx	lr
 2038              		.cfi_endproc
 2039              	.LFE125:
 2041              		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 2042              		.align	2
 2043              		.global	CAN_GetLastErrorCode
 2044              		.thumb
 2045              		.thumb_func
 2047              	CAN_GetLastErrorCode:
 2048              	.LFB126:
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2049              		.loc 1 1036 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 16
 2052              		@ frame_needed = 1, uses_anonymous_args = 0
 2053              		@ link register save eliminated.
 2054 0000 80B4     		push	{r7}
 2055              	.LCFI48:
 2056              		.cfi_def_cfa_offset 4
 2057              		.cfi_offset 7, -4
 2058 0002 85B0     		sub	sp, sp, #20
 2059              	.LCFI49:
 2060              		.cfi_def_cfa_offset 24
 2061 0004 00AF     		add	r7, sp, #0
 2062              	.LCFI50:
 2063              		.cfi_def_cfa_register 7
 2064 0006 7860     		str	r0, [r7, #4]
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
 2065              		.loc 1 1037 0
 2066 0008 4FF00003 		mov	r3, #0
 2067 000c FB73     		strb	r3, [r7, #15]
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 2068              		.loc 1 1043 0
 2069 000e 7B68     		ldr	r3, [r7, #4]
 2070 0010 9B69     		ldr	r3, [r3, #24]
 2071 0012 DBB2     		uxtb	r3, r3
 2072 0014 03F07003 		and	r3, r3, #112
 2073 0018 FB73     		strb	r3, [r7, #15]
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
 2074              		.loc 1 1046 0
 2075 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2076              		.loc 1 1047 0
 2077 001c 1846     		mov	r0, r3
 2078 001e 07F11407 		add	r7, r7, #20
 2079 0022 BD46     		mov	sp, r7
 2080 0024 80BC     		pop	{r7}
 2081 0026 7047     		bx	lr
 2082              		.cfi_endproc
 2083              	.LFE126:
 2085              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 2086              		.align	2
 2087              		.global	CAN_GetReceiveErrorCounter
 2088              		.thumb
 2089              		.thumb_func
 2091              	CAN_GetReceiveErrorCounter:
 2092              	.LFB127:
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2093              		.loc 1 1061 0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 16
 2096              		@ frame_needed = 1, uses_anonymous_args = 0
 2097              		@ link register save eliminated.
 2098 0000 80B4     		push	{r7}
 2099              	.LCFI51:
 2100              		.cfi_def_cfa_offset 4
 2101              		.cfi_offset 7, -4
 2102 0002 85B0     		sub	sp, sp, #20
 2103              	.LCFI52:
 2104              		.cfi_def_cfa_offset 24
 2105 0004 00AF     		add	r7, sp, #0
 2106              	.LCFI53:
 2107              		.cfi_def_cfa_register 7
 2108 0006 7860     		str	r0, [r7, #4]
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2109              		.loc 1 1062 0
 2110 0008 4FF00003 		mov	r3, #0
 2111 000c FB73     		strb	r3, [r7, #15]
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 2112              		.loc 1 1068 0
 2113 000e 7B68     		ldr	r3, [r7, #4]
 2114 0010 9B69     		ldr	r3, [r3, #24]
 2115 0012 4FEA1363 		lsr	r3, r3, #24
 2116 0016 FB73     		strb	r3, [r7, #15]
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2117              		.loc 1 1071 0
 2118 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2119              		.loc 1 1072 0
 2120 001a 1846     		mov	r0, r3
 2121 001c 07F11407 		add	r7, r7, #20
 2122 0020 BD46     		mov	sp, r7
 2123 0022 80BC     		pop	{r7}
 2124 0024 7047     		bx	lr
 2125              		.cfi_endproc
 2126              	.LFE127:
 2128 0026 00BF     		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 2129              		.align	2
 2130              		.global	CAN_GetLSBTransmitErrorCounter
 2131              		.thumb
 2132              		.thumb_func
 2134              	CAN_GetLSBTransmitErrorCounter:
 2135              	.LFB128:
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2136              		.loc 1 1081 0
 2137              		.cfi_startproc
 2138              		@ args = 0, pretend = 0, frame = 16
 2139              		@ frame_needed = 1, uses_anonymous_args = 0
 2140              		@ link register save eliminated.
 2141 0000 80B4     		push	{r7}
 2142              	.LCFI54:
 2143              		.cfi_def_cfa_offset 4
 2144              		.cfi_offset 7, -4
 2145 0002 85B0     		sub	sp, sp, #20
 2146              	.LCFI55:
 2147              		.cfi_def_cfa_offset 24
 2148 0004 00AF     		add	r7, sp, #0
 2149              	.LCFI56:
 2150              		.cfi_def_cfa_register 7
 2151 0006 7860     		str	r0, [r7, #4]
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2152              		.loc 1 1082 0
 2153 0008 4FF00003 		mov	r3, #0
 2154 000c FB73     		strb	r3, [r7, #15]
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 2155              		.loc 1 1088 0
 2156 000e 7B68     		ldr	r3, [r7, #4]
 2157 0010 9B69     		ldr	r3, [r3, #24]
 2158 0012 03F47F03 		and	r3, r3, #16711680
 2159 0016 4FEA1343 		lsr	r3, r3, #16
 2160 001a FB73     		strb	r3, [r7, #15]
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2161              		.loc 1 1091 0
 2162 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2163              		.loc 1 1092 0
 2164 001e 1846     		mov	r0, r3
 2165 0020 07F11407 		add	r7, r7, #20
 2166 0024 BD46     		mov	sp, r7
 2167 0026 80BC     		pop	{r7}
 2168 0028 7047     		bx	lr
 2169              		.cfi_endproc
 2170              	.LFE128:
 2172 002a 00BF     		.section	.text.CAN_ITConfig,"ax",%progbits
 2173              		.align	2
 2174              		.global	CAN_ITConfig
 2175              		.thumb
 2176              		.thumb_func
 2178              	CAN_ITConfig:
 2179              	.LFB129:
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2180              		.loc 1 1288 0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 16
 2183              		@ frame_needed = 1, uses_anonymous_args = 0
 2184              		@ link register save eliminated.
 2185 0000 80B4     		push	{r7}
 2186              	.LCFI57:
 2187              		.cfi_def_cfa_offset 4
 2188              		.cfi_offset 7, -4
 2189 0002 85B0     		sub	sp, sp, #20
 2190              	.LCFI58:
 2191              		.cfi_def_cfa_offset 24
 2192 0004 00AF     		add	r7, sp, #0
 2193              	.LCFI59:
 2194              		.cfi_def_cfa_register 7
 2195 0006 F860     		str	r0, [r7, #12]
 2196 0008 B960     		str	r1, [r7, #8]
 2197 000a 1346     		mov	r3, r2
 2198 000c FB71     		strb	r3, [r7, #7]
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 2199              		.loc 1 1294 0
 2200 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2201 0010 002B     		cmp	r3, #0
 2202 0012 06D0     		beq	.L114
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 2203              		.loc 1 1297 0
 2204 0014 FB68     		ldr	r3, [r7, #12]
 2205 0016 5A69     		ldr	r2, [r3, #20]
 2206 0018 BB68     		ldr	r3, [r7, #8]
 2207 001a 1A43     		orrs	r2, r2, r3
 2208 001c FB68     		ldr	r3, [r7, #12]
 2209 001e 5A61     		str	r2, [r3, #20]
 2210 0020 07E0     		b	.L113
 2211              	.L114:
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 2212              		.loc 1 1302 0
 2213 0022 FB68     		ldr	r3, [r7, #12]
 2214 0024 5A69     		ldr	r2, [r3, #20]
 2215 0026 BB68     		ldr	r3, [r7, #8]
 2216 0028 6FEA0303 		mvn	r3, r3
 2217 002c 1A40     		ands	r2, r2, r3
 2218 002e FB68     		ldr	r3, [r7, #12]
 2219 0030 5A61     		str	r2, [r3, #20]
 2220              	.L113:
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2221              		.loc 1 1304 0
 2222 0032 07F11407 		add	r7, r7, #20
 2223 0036 BD46     		mov	sp, r7
 2224 0038 80BC     		pop	{r7}
 2225 003a 7047     		bx	lr
 2226              		.cfi_endproc
 2227              	.LFE129:
 2229              		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 2230              		.align	2
 2231              		.global	CAN_GetFlagStatus
 2232              		.thumb
 2233              		.thumb_func
 2235              	CAN_GetFlagStatus:
 2236              	.LFB130:
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2237              		.loc 1 1328 0
 2238              		.cfi_startproc
 2239              		@ args = 0, pretend = 0, frame = 16
 2240              		@ frame_needed = 1, uses_anonymous_args = 0
 2241              		@ link register save eliminated.
 2242 0000 80B4     		push	{r7}
 2243              	.LCFI60:
 2244              		.cfi_def_cfa_offset 4
 2245              		.cfi_offset 7, -4
 2246 0002 85B0     		sub	sp, sp, #20
 2247              	.LCFI61:
 2248              		.cfi_def_cfa_offset 24
 2249 0004 00AF     		add	r7, sp, #0
 2250              	.LCFI62:
 2251              		.cfi_def_cfa_register 7
 2252 0006 7860     		str	r0, [r7, #4]
 2253 0008 3960     		str	r1, [r7, #0]
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 2254              		.loc 1 1329 0
 2255 000a 4FF00003 		mov	r3, #0
 2256 000e FB73     		strb	r3, [r7, #15]
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 2257              		.loc 1 1336 0
 2258 0010 3B68     		ldr	r3, [r7, #0]
 2259 0012 03F47003 		and	r3, r3, #15728640
 2260 0016 002B     		cmp	r3, #0
 2261 0018 11D0     		beq	.L117
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2262              		.loc 1 1339 0
 2263 001a 7B68     		ldr	r3, [r7, #4]
 2264 001c 9A69     		ldr	r2, [r3, #24]
 2265 001e 3B68     		ldr	r3, [r7, #0]
 2266 0020 1340     		ands	r3, r3, r2
 2267 0022 23F07F43 		bic	r3, r3, #-16777216
 2268 0026 23F47003 		bic	r3, r3, #15728640
 2269 002a 002B     		cmp	r3, #0
 2270 002c 03D0     		beq	.L118
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2271              		.loc 1 1342 0
 2272 002e 4FF00103 		mov	r3, #1
 2273 0032 FB73     		strb	r3, [r7, #15]
 2274 0034 59E0     		b	.L119
 2275              	.L118:
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2276              		.loc 1 1347 0
 2277 0036 4FF00003 		mov	r3, #0
 2278 003a FB73     		strb	r3, [r7, #15]
 2279 003c 55E0     		b	.L119
 2280              	.L117:
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 2281              		.loc 1 1350 0
 2282 003e 3B68     		ldr	r3, [r7, #0]
 2283 0040 03F08073 		and	r3, r3, #16777216
 2284 0044 002B     		cmp	r3, #0
 2285 0046 11D0     		beq	.L120
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2286              		.loc 1 1353 0
 2287 0048 7B68     		ldr	r3, [r7, #4]
 2288 004a 5A68     		ldr	r2, [r3, #4]
 2289 004c 3B68     		ldr	r3, [r7, #0]
 2290 004e 1340     		ands	r3, r3, r2
 2291 0050 23F07F43 		bic	r3, r3, #-16777216
 2292 0054 23F47003 		bic	r3, r3, #15728640
 2293 0058 002B     		cmp	r3, #0
 2294 005a 03D0     		beq	.L121
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2295              		.loc 1 1356 0
 2296 005c 4FF00103 		mov	r3, #1
 2297 0060 FB73     		strb	r3, [r7, #15]
 2298 0062 42E0     		b	.L119
 2299              	.L121:
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2300              		.loc 1 1361 0
 2301 0064 4FF00003 		mov	r3, #0
 2302 0068 FB73     		strb	r3, [r7, #15]
 2303 006a 3EE0     		b	.L119
 2304              	.L120:
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 2305              		.loc 1 1364 0
 2306 006c 3B68     		ldr	r3, [r7, #0]
 2307 006e 03F00063 		and	r3, r3, #134217728
 2308 0072 002B     		cmp	r3, #0
 2309 0074 11D0     		beq	.L122
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2310              		.loc 1 1367 0
 2311 0076 7B68     		ldr	r3, [r7, #4]
 2312 0078 9A68     		ldr	r2, [r3, #8]
 2313 007a 3B68     		ldr	r3, [r7, #0]
 2314 007c 1340     		ands	r3, r3, r2
 2315 007e 23F07F43 		bic	r3, r3, #-16777216
 2316 0082 23F47003 		bic	r3, r3, #15728640
 2317 0086 002B     		cmp	r3, #0
 2318 0088 03D0     		beq	.L123
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2319              		.loc 1 1370 0
 2320 008a 4FF00103 		mov	r3, #1
 2321 008e FB73     		strb	r3, [r7, #15]
 2322 0090 2BE0     		b	.L119
 2323              	.L123:
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2324              		.loc 1 1375 0
 2325 0092 4FF00003 		mov	r3, #0
 2326 0096 FB73     		strb	r3, [r7, #15]
 2327 0098 27E0     		b	.L119
 2328              	.L122:
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 2329              		.loc 1 1378 0
 2330 009a 3B68     		ldr	r3, [r7, #0]
 2331 009c 03F00073 		and	r3, r3, #33554432
 2332 00a0 002B     		cmp	r3, #0
 2333 00a2 11D0     		beq	.L124
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2334              		.loc 1 1381 0
 2335 00a4 7B68     		ldr	r3, [r7, #4]
 2336 00a6 DA68     		ldr	r2, [r3, #12]
 2337 00a8 3B68     		ldr	r3, [r7, #0]
 2338 00aa 1340     		ands	r3, r3, r2
 2339 00ac 23F07F43 		bic	r3, r3, #-16777216
 2340 00b0 23F47003 		bic	r3, r3, #15728640
 2341 00b4 002B     		cmp	r3, #0
 2342 00b6 03D0     		beq	.L125
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2343              		.loc 1 1384 0
 2344 00b8 4FF00103 		mov	r3, #1
 2345 00bc FB73     		strb	r3, [r7, #15]
 2346 00be 14E0     		b	.L119
 2347              	.L125:
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2348              		.loc 1 1389 0
 2349 00c0 4FF00003 		mov	r3, #0
 2350 00c4 FB73     		strb	r3, [r7, #15]
 2351 00c6 10E0     		b	.L119
 2352              	.L124:
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2353              		.loc 1 1395 0
 2354 00c8 7B68     		ldr	r3, [r7, #4]
 2355 00ca 1A69     		ldr	r2, [r3, #16]
 2356 00cc 3B68     		ldr	r3, [r7, #0]
 2357 00ce 1340     		ands	r3, r3, r2
 2358 00d0 23F07F43 		bic	r3, r3, #-16777216
 2359 00d4 23F47003 		bic	r3, r3, #15728640
 2360 00d8 002B     		cmp	r3, #0
 2361 00da 03D0     		beq	.L126
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2362              		.loc 1 1398 0
 2363 00dc 4FF00103 		mov	r3, #1
 2364 00e0 FB73     		strb	r3, [r7, #15]
 2365 00e2 02E0     		b	.L119
 2366              	.L126:
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2367              		.loc 1 1403 0
 2368 00e4 4FF00003 		mov	r3, #0
 2369 00e8 FB73     		strb	r3, [r7, #15]
 2370              	.L119:
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
 2371              		.loc 1 1407 0
 2372 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2373              		.loc 1 1408 0
 2374 00ec 1846     		mov	r0, r3
 2375 00ee 07F11407 		add	r7, r7, #20
 2376 00f2 BD46     		mov	sp, r7
 2377 00f4 80BC     		pop	{r7}
 2378 00f6 7047     		bx	lr
 2379              		.cfi_endproc
 2380              	.LFE130:
 2382              		.section	.text.CAN_ClearFlag,"ax",%progbits
 2383              		.align	2
 2384              		.global	CAN_ClearFlag
 2385              		.thumb
 2386              		.thumb_func
 2388              	CAN_ClearFlag:
 2389              	.LFB131:
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2390              		.loc 1 1428 0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 16
 2393              		@ frame_needed = 1, uses_anonymous_args = 0
 2394              		@ link register save eliminated.
 2395 0000 80B4     		push	{r7}
 2396              	.LCFI63:
 2397              		.cfi_def_cfa_offset 4
 2398              		.cfi_offset 7, -4
 2399 0002 85B0     		sub	sp, sp, #20
 2400              	.LCFI64:
 2401              		.cfi_def_cfa_offset 24
 2402 0004 00AF     		add	r7, sp, #0
 2403              	.LCFI65:
 2404              		.cfi_def_cfa_register 7
 2405 0006 7860     		str	r0, [r7, #4]
 2406 0008 3960     		str	r1, [r7, #0]
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 2407              		.loc 1 1429 0
 2408 000a 4FF00003 		mov	r3, #0
 2409 000e FB60     		str	r3, [r7, #12]
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 2410              		.loc 1 1434 0
 2411 0010 3A68     		ldr	r2, [r7, #0]
 2412 0012 4FF07003 		mov	r3, #112
 2413 0016 C3F2F003 		movt	r3, 12528
 2414 001a 9A42     		cmp	r2, r3
 2415 001c 04D1     		bne	.L128
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 2416              		.loc 1 1437 0
 2417 001e 7B68     		ldr	r3, [r7, #4]
 2418 0020 4FF00002 		mov	r2, #0
 2419 0024 9A61     		str	r2, [r3, #24]
 2420 0026 23E0     		b	.L127
 2421              	.L128:
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 2422              		.loc 1 1441 0
 2423 0028 3B68     		ldr	r3, [r7, #0]
 2424 002a 23F07F43 		bic	r3, r3, #-16777216
 2425 002e 23F47003 		bic	r3, r3, #15728640
 2426 0032 FB60     		str	r3, [r7, #12]
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 2427              		.loc 1 1443 0
 2428 0034 3B68     		ldr	r3, [r7, #0]
 2429 0036 03F00073 		and	r3, r3, #33554432
 2430 003a 002B     		cmp	r3, #0
 2431 003c 03D0     		beq	.L130
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 2432              		.loc 1 1446 0
 2433 003e 7B68     		ldr	r3, [r7, #4]
 2434 0040 FA68     		ldr	r2, [r7, #12]
 2435 0042 DA60     		str	r2, [r3, #12]
 2436 0044 14E0     		b	.L127
 2437              	.L130:
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 2438              		.loc 1 1448 0
 2439 0046 3B68     		ldr	r3, [r7, #0]
 2440 0048 03F08063 		and	r3, r3, #67108864
 2441 004c 002B     		cmp	r3, #0
 2442 004e 03D0     		beq	.L131
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 2443              		.loc 1 1451 0
 2444 0050 7B68     		ldr	r3, [r7, #4]
 2445 0052 FA68     		ldr	r2, [r7, #12]
 2446 0054 1A61     		str	r2, [r3, #16]
 2447 0056 0BE0     		b	.L127
 2448              	.L131:
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 2449              		.loc 1 1453 0
 2450 0058 3B68     		ldr	r3, [r7, #0]
 2451 005a 03F00063 		and	r3, r3, #134217728
 2452 005e 002B     		cmp	r3, #0
 2453 0060 03D0     		beq	.L132
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 2454              		.loc 1 1456 0
 2455 0062 7B68     		ldr	r3, [r7, #4]
 2456 0064 FA68     		ldr	r2, [r7, #12]
 2457 0066 9A60     		str	r2, [r3, #8]
 2458 0068 02E0     		b	.L127
 2459              	.L132:
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 2460              		.loc 1 1461 0
 2461 006a 7B68     		ldr	r3, [r7, #4]
 2462 006c FA68     		ldr	r2, [r7, #12]
 2463 006e 5A60     		str	r2, [r3, #4]
 2464              	.L127:
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2465              		.loc 1 1464 0
 2466 0070 07F11407 		add	r7, r7, #20
 2467 0074 BD46     		mov	sp, r7
 2468 0076 80BC     		pop	{r7}
 2469 0078 7047     		bx	lr
 2470              		.cfi_endproc
 2471              	.LFE131:
 2473 007a 00BF     		.section	.text.CAN_GetITStatus,"ax",%progbits
 2474              		.align	2
 2475              		.global	CAN_GetITStatus
 2476              		.thumb
 2477              		.thumb_func
 2479              	CAN_GetITStatus:
 2480              	.LFB132:
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2481              		.loc 1 1488 0
 2482              		.cfi_startproc
 2483              		@ args = 0, pretend = 0, frame = 16
 2484              		@ frame_needed = 1, uses_anonymous_args = 0
 2485 0000 80B5     		push	{r7, lr}
 2486              	.LCFI66:
 2487              		.cfi_def_cfa_offset 8
 2488              		.cfi_offset 14, -4
 2489              		.cfi_offset 7, -8
 2490 0002 84B0     		sub	sp, sp, #16
 2491              	.LCFI67:
 2492              		.cfi_def_cfa_offset 24
 2493 0004 00AF     		add	r7, sp, #0
 2494              	.LCFI68:
 2495              		.cfi_def_cfa_register 7
 2496 0006 7860     		str	r0, [r7, #4]
 2497 0008 3960     		str	r1, [r7, #0]
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 2498              		.loc 1 1489 0
 2499 000a 4FF00003 		mov	r3, #0
 2500 000e FB73     		strb	r3, [r7, #15]
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 2501              		.loc 1 1495 0
 2502 0010 7B68     		ldr	r3, [r7, #4]
 2503 0012 5A69     		ldr	r2, [r3, #20]
 2504 0014 3B68     		ldr	r3, [r7, #0]
 2505 0016 1340     		ands	r3, r3, r2
 2506 0018 002B     		cmp	r3, #0
 2507 001a 00F0C480 		beq	.L134
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 2508              		.loc 1 1498 0
 2509 001e 3B68     		ldr	r3, [r7, #0]
 2510 0020 402B     		cmp	r3, #64
 2511 0022 6BD0     		beq	.L142
 2512 0024 402B     		cmp	r3, #64
 2513 0026 0FD8     		bhi	.L150
 2514 0028 042B     		cmp	r3, #4
 2515 002a 3FD0     		beq	.L138
 2516 002c 042B     		cmp	r3, #4
 2517 002e 04D8     		bhi	.L151
 2518 0030 012B     		cmp	r3, #1
 2519 0032 25D0     		beq	.L136
 2520 0034 022B     		cmp	r3, #2
 2521 0036 2FD0     		beq	.L137
 2522 0038 B1E0     		b	.L135
 2523              	.L151:
 2524 003a 102B     		cmp	r3, #16
 2525 003c 4AD0     		beq	.L140
 2526 003e 202B     		cmp	r3, #32
 2527 0040 52D0     		beq	.L141
 2528 0042 082B     		cmp	r3, #8
 2529 0044 3CD0     		beq	.L139
 2530 0046 AAE0     		b	.L135
 2531              	.L150:
 2532 0048 B3F5006F 		cmp	r3, #2048
 2533 004c 00F09280 		beq	.L146
 2534 0050 B3F5006F 		cmp	r3, #2048
 2535 0054 09D8     		bhi	.L152
 2536 0056 B3F5007F 		cmp	r3, #512
 2537 005a 77D0     		beq	.L144
 2538 005c B3F5806F 		cmp	r3, #1024
 2539 0060 7ED0     		beq	.L145
 2540 0062 B3F5807F 		cmp	r3, #256
 2541 0066 67D0     		beq	.L143
 2542 0068 99E0     		b	.L135
 2543              	.L152:
 2544 006a B3F5803F 		cmp	r3, #65536
 2545 006e 4FD0     		beq	.L148
 2546 0070 B3F5003F 		cmp	r3, #131072
 2547 0074 56D0     		beq	.L149
 2548 0076 B3F5004F 		cmp	r3, #32768
 2549 007a 00F08580 		beq	.L147
 2550 007e 8EE0     		b	.L135
 2551              	.L136:
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 2552              		.loc 1 1502 0
 2553 0080 7B68     		ldr	r3, [r7, #4]
 2554 0082 9B68     		ldr	r3, [r3, #8]
 2555 0084 1846     		mov	r0, r3
 2556 0086 40F20111 		movw	r1, #257
 2557 008a C0F20101 		movt	r1, 1
 2558 008e FFF7FEFF 		bl	CheckITStatus
 2559 0092 0346     		mov	r3, r0
 2560 0094 FB73     		strb	r3, [r7, #15]
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2561              		.loc 1 1503 0
 2562 0096 89E0     		b	.L154
 2563              	.L137:
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 2564              		.loc 1 1506 0
 2565 0098 7B68     		ldr	r3, [r7, #4]
 2566 009a DB68     		ldr	r3, [r3, #12]
 2567 009c 1846     		mov	r0, r3
 2568 009e 4FF00301 		mov	r1, #3
 2569 00a2 FFF7FEFF 		bl	CheckITStatus
 2570 00a6 0346     		mov	r3, r0
 2571 00a8 FB73     		strb	r3, [r7, #15]
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2572              		.loc 1 1507 0
 2573 00aa 7FE0     		b	.L154
 2574              	.L138:
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 2575              		.loc 1 1510 0
 2576 00ac 7B68     		ldr	r3, [r7, #4]
 2577 00ae DB68     		ldr	r3, [r3, #12]
 2578 00b0 1846     		mov	r0, r3
 2579 00b2 4FF00801 		mov	r1, #8
 2580 00b6 FFF7FEFF 		bl	CheckITStatus
 2581 00ba 0346     		mov	r3, r0
 2582 00bc FB73     		strb	r3, [r7, #15]
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2583              		.loc 1 1511 0
 2584 00be 75E0     		b	.L154
 2585              	.L139:
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 2586              		.loc 1 1514 0
 2587 00c0 7B68     		ldr	r3, [r7, #4]
 2588 00c2 DB68     		ldr	r3, [r3, #12]
 2589 00c4 1846     		mov	r0, r3
 2590 00c6 4FF01001 		mov	r1, #16
 2591 00ca FFF7FEFF 		bl	CheckITStatus
 2592 00ce 0346     		mov	r3, r0
 2593 00d0 FB73     		strb	r3, [r7, #15]
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2594              		.loc 1 1515 0
 2595 00d2 6BE0     		b	.L154
 2596              	.L140:
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 2597              		.loc 1 1518 0
 2598 00d4 7B68     		ldr	r3, [r7, #4]
 2599 00d6 1B69     		ldr	r3, [r3, #16]
 2600 00d8 1846     		mov	r0, r3
 2601 00da 4FF00301 		mov	r1, #3
 2602 00de FFF7FEFF 		bl	CheckITStatus
 2603 00e2 0346     		mov	r3, r0
 2604 00e4 FB73     		strb	r3, [r7, #15]
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2605              		.loc 1 1519 0
 2606 00e6 61E0     		b	.L154
 2607              	.L141:
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 2608              		.loc 1 1522 0
 2609 00e8 7B68     		ldr	r3, [r7, #4]
 2610 00ea 1B69     		ldr	r3, [r3, #16]
 2611 00ec 1846     		mov	r0, r3
 2612 00ee 4FF00801 		mov	r1, #8
 2613 00f2 FFF7FEFF 		bl	CheckITStatus
 2614 00f6 0346     		mov	r3, r0
 2615 00f8 FB73     		strb	r3, [r7, #15]
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2616              		.loc 1 1523 0
 2617 00fa 57E0     		b	.L154
 2618              	.L142:
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 2619              		.loc 1 1526 0
 2620 00fc 7B68     		ldr	r3, [r7, #4]
 2621 00fe 1B69     		ldr	r3, [r3, #16]
 2622 0100 1846     		mov	r0, r3
 2623 0102 4FF01001 		mov	r1, #16
 2624 0106 FFF7FEFF 		bl	CheckITStatus
 2625 010a 0346     		mov	r3, r0
 2626 010c FB73     		strb	r3, [r7, #15]
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2627              		.loc 1 1527 0
 2628 010e 4DE0     		b	.L154
 2629              	.L148:
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 2630              		.loc 1 1530 0
 2631 0110 7B68     		ldr	r3, [r7, #4]
 2632 0112 5B68     		ldr	r3, [r3, #4]
 2633 0114 1846     		mov	r0, r3
 2634 0116 4FF00801 		mov	r1, #8
 2635 011a FFF7FEFF 		bl	CheckITStatus
 2636 011e 0346     		mov	r3, r0
 2637 0120 FB73     		strb	r3, [r7, #15]
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2638              		.loc 1 1531 0
 2639 0122 43E0     		b	.L154
 2640              	.L149:
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 2641              		.loc 1 1534 0
 2642 0124 7B68     		ldr	r3, [r7, #4]
 2643 0126 5B68     		ldr	r3, [r3, #4]
 2644 0128 1846     		mov	r0, r3
 2645 012a 4FF01001 		mov	r1, #16
 2646 012e FFF7FEFF 		bl	CheckITStatus
 2647 0132 0346     		mov	r3, r0
 2648 0134 FB73     		strb	r3, [r7, #15]
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2649              		.loc 1 1535 0
 2650 0136 39E0     		b	.L154
 2651              	.L143:
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 2652              		.loc 1 1538 0
 2653 0138 7B68     		ldr	r3, [r7, #4]
 2654 013a 9B69     		ldr	r3, [r3, #24]
 2655 013c 1846     		mov	r0, r3
 2656 013e 4FF00101 		mov	r1, #1
 2657 0142 FFF7FEFF 		bl	CheckITStatus
 2658 0146 0346     		mov	r3, r0
 2659 0148 FB73     		strb	r3, [r7, #15]
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2660              		.loc 1 1539 0
 2661 014a 2FE0     		b	.L154
 2662              	.L144:
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 2663              		.loc 1 1542 0
 2664 014c 7B68     		ldr	r3, [r7, #4]
 2665 014e 9B69     		ldr	r3, [r3, #24]
 2666 0150 1846     		mov	r0, r3
 2667 0152 4FF00201 		mov	r1, #2
 2668 0156 FFF7FEFF 		bl	CheckITStatus
 2669 015a 0346     		mov	r3, r0
 2670 015c FB73     		strb	r3, [r7, #15]
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2671              		.loc 1 1543 0
 2672 015e 25E0     		b	.L154
 2673              	.L145:
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 2674              		.loc 1 1546 0
 2675 0160 7B68     		ldr	r3, [r7, #4]
 2676 0162 9B69     		ldr	r3, [r3, #24]
 2677 0164 1846     		mov	r0, r3
 2678 0166 4FF00401 		mov	r1, #4
 2679 016a FFF7FEFF 		bl	CheckITStatus
 2680 016e 0346     		mov	r3, r0
 2681 0170 FB73     		strb	r3, [r7, #15]
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2682              		.loc 1 1547 0
 2683 0172 1BE0     		b	.L154
 2684              	.L146:
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 2685              		.loc 1 1550 0
 2686 0174 7B68     		ldr	r3, [r7, #4]
 2687 0176 9B69     		ldr	r3, [r3, #24]
 2688 0178 1846     		mov	r0, r3
 2689 017a 4FF07001 		mov	r1, #112
 2690 017e FFF7FEFF 		bl	CheckITStatus
 2691 0182 0346     		mov	r3, r0
 2692 0184 FB73     		strb	r3, [r7, #15]
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2693              		.loc 1 1551 0
 2694 0186 11E0     		b	.L154
 2695              	.L147:
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 2696              		.loc 1 1554 0
 2697 0188 7B68     		ldr	r3, [r7, #4]
 2698 018a 5B68     		ldr	r3, [r3, #4]
 2699 018c 1846     		mov	r0, r3
 2700 018e 4FF00401 		mov	r1, #4
 2701 0192 FFF7FEFF 		bl	CheckITStatus
 2702 0196 0346     		mov	r3, r0
 2703 0198 FB73     		strb	r3, [r7, #15]
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2704              		.loc 1 1555 0
 2705 019a 00BF     		nop
 2706 019c 06E0     		b	.L154
 2707              	.L135:
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 2708              		.loc 1 1558 0
 2709 019e 4FF00003 		mov	r3, #0
 2710 01a2 FB73     		strb	r3, [r7, #15]
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2711              		.loc 1 1559 0
 2712 01a4 02E0     		b	.L154
 2713              	.L134:
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
 2714              		.loc 1 1565 0
 2715 01a6 4FF00003 		mov	r3, #0
 2716 01aa FB73     		strb	r3, [r7, #15]
 2717              	.L154:
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
 2718              		.loc 1 1569 0
 2719 01ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2720              		.loc 1 1570 0
 2721 01ae 1846     		mov	r0, r3
 2722 01b0 07F11007 		add	r7, r7, #16
 2723 01b4 BD46     		mov	sp, r7
 2724 01b6 80BD     		pop	{r7, pc}
 2725              		.cfi_endproc
 2726              	.LFE132:
 2728              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 2729              		.align	2
 2730              		.global	CAN_ClearITPendingBit
 2731              		.thumb
 2732              		.thumb_func
 2734              	CAN_ClearITPendingBit:
 2735              	.LFB133:
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2736              		.loc 1 1592 0
 2737              		.cfi_startproc
 2738              		@ args = 0, pretend = 0, frame = 8
 2739              		@ frame_needed = 1, uses_anonymous_args = 0
 2740              		@ link register save eliminated.
 2741 0000 80B4     		push	{r7}
 2742              	.LCFI69:
 2743              		.cfi_def_cfa_offset 4
 2744              		.cfi_offset 7, -4
 2745 0002 83B0     		sub	sp, sp, #12
 2746              	.LCFI70:
 2747              		.cfi_def_cfa_offset 16
 2748 0004 00AF     		add	r7, sp, #0
 2749              	.LCFI71:
 2750              		.cfi_def_cfa_register 7
 2751 0006 7860     		str	r0, [r7, #4]
 2752 0008 3960     		str	r1, [r7, #0]
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2753              		.loc 1 1597 0
 2754 000a 3B68     		ldr	r3, [r7, #0]
 2755 000c B3F5807F 		cmp	r3, #256
 2756 0010 4CD0     		beq	.L162
 2757 0012 B3F5807F 		cmp	r3, #256
 2758 0016 0DD8     		bhi	.L169
 2759 0018 082B     		cmp	r3, #8
 2760 001a 2ED0     		beq	.L159
 2761 001c 082B     		cmp	r3, #8
 2762 001e 04D8     		bhi	.L170
 2763 0020 012B     		cmp	r3, #1
 2764 0022 1ED0     		beq	.L157
 2765 0024 042B     		cmp	r3, #4
 2766 0026 23D0     		beq	.L158
 2767 0028 61E0     		b	.L156
 2768              	.L170:
 2769 002a 202B     		cmp	r3, #32
 2770 002c 2AD0     		beq	.L160
 2771 002e 402B     		cmp	r3, #64
 2772 0030 2DD0     		beq	.L161
 2773 0032 5CE0     		b	.L156
 2774              	.L169:
 2775 0034 B3F5006F 		cmp	r3, #2048
 2776 0038 47D0     		beq	.L165
 2777 003a B3F5006F 		cmp	r3, #2048
 2778 003e 06D8     		bhi	.L171
 2779 0040 B3F5007F 		cmp	r3, #512
 2780 0044 37D0     		beq	.L163
 2781 0046 B3F5806F 		cmp	r3, #1024
 2782 004a 39D0     		beq	.L164
 2783 004c 4FE0     		b	.L156
 2784              	.L171:
 2785 004e B3F5803F 		cmp	r3, #65536
 2786 0052 21D0     		beq	.L167
 2787 0054 B3F5003F 		cmp	r3, #131072
 2788 0058 23D0     		beq	.L168
 2789 005a B3F5004F 		cmp	r3, #32768
 2790 005e 3DD0     		beq	.L166
 2791 0060 45E0     		b	.L156
 2792              	.L157:
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
 2793              		.loc 1 1601 0
 2794 0062 7A68     		ldr	r2, [r7, #4]
 2795 0064 40F20113 		movw	r3, #257
 2796 0068 C0F20103 		movt	r3, 1
 2797 006c 9360     		str	r3, [r2, #8]
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2798              		.loc 1 1602 0
 2799 006e 3FE0     		b	.L155
 2800              	.L158:
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
 2801              		.loc 1 1605 0
 2802 0070 7B68     		ldr	r3, [r7, #4]
 2803 0072 4FF00802 		mov	r2, #8
 2804 0076 DA60     		str	r2, [r3, #12]
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2805              		.loc 1 1606 0
 2806 0078 3AE0     		b	.L155
 2807              	.L159:
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
 2808              		.loc 1 1609 0
 2809 007a 7B68     		ldr	r3, [r7, #4]
 2810 007c 4FF01002 		mov	r2, #16
 2811 0080 DA60     		str	r2, [r3, #12]
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2812              		.loc 1 1610 0
 2813 0082 35E0     		b	.L155
 2814              	.L160:
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
 2815              		.loc 1 1613 0
 2816 0084 7B68     		ldr	r3, [r7, #4]
 2817 0086 4FF00802 		mov	r2, #8
 2818 008a 1A61     		str	r2, [r3, #16]
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2819              		.loc 1 1614 0
 2820 008c 30E0     		b	.L155
 2821              	.L161:
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
 2822              		.loc 1 1617 0
 2823 008e 7B68     		ldr	r3, [r7, #4]
 2824 0090 4FF01002 		mov	r2, #16
 2825 0094 1A61     		str	r2, [r3, #16]
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2826              		.loc 1 1618 0
 2827 0096 2BE0     		b	.L155
 2828              	.L167:
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
 2829              		.loc 1 1621 0
 2830 0098 7B68     		ldr	r3, [r7, #4]
 2831 009a 4FF00802 		mov	r2, #8
 2832 009e 5A60     		str	r2, [r3, #4]
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2833              		.loc 1 1622 0
 2834 00a0 26E0     		b	.L155
 2835              	.L168:
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
 2836              		.loc 1 1625 0
 2837 00a2 7B68     		ldr	r3, [r7, #4]
 2838 00a4 4FF01002 		mov	r2, #16
 2839 00a8 5A60     		str	r2, [r3, #4]
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2840              		.loc 1 1626 0
 2841 00aa 21E0     		b	.L155
 2842              	.L162:
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
 2843              		.loc 1 1629 0
 2844 00ac 7B68     		ldr	r3, [r7, #4]
 2845 00ae 4FF00402 		mov	r2, #4
 2846 00b2 5A60     		str	r2, [r3, #4]
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2847              		.loc 1 1631 0
 2848 00b4 1CE0     		b	.L155
 2849              	.L163:
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2850              		.loc 1 1634 0
 2851 00b6 7B68     		ldr	r3, [r7, #4]
 2852 00b8 4FF00402 		mov	r2, #4
 2853 00bc 5A60     		str	r2, [r3, #4]
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2854              		.loc 1 1636 0
 2855 00be 17E0     		b	.L155
 2856              	.L164:
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2857              		.loc 1 1639 0
 2858 00c0 7B68     		ldr	r3, [r7, #4]
 2859 00c2 4FF00402 		mov	r2, #4
 2860 00c6 5A60     		str	r2, [r3, #4]
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2861              		.loc 1 1641 0
 2862 00c8 12E0     		b	.L155
 2863              	.L165:
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2864              		.loc 1 1644 0
 2865 00ca 7B68     		ldr	r3, [r7, #4]
 2866 00cc 4FF00002 		mov	r2, #0
 2867 00d0 9A61     		str	r2, [r3, #24]
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2868              		.loc 1 1646 0
 2869 00d2 7B68     		ldr	r3, [r7, #4]
 2870 00d4 4FF00402 		mov	r2, #4
 2871 00d8 5A60     		str	r2, [r3, #4]
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2872              		.loc 1 1647 0
 2873 00da 09E0     		b	.L155
 2874              	.L166:
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2875              		.loc 1 1650 0
 2876 00dc 7B68     		ldr	r3, [r7, #4]
 2877 00de 4FF00002 		mov	r2, #0
 2878 00e2 9A61     		str	r2, [r3, #24]
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2879              		.loc 1 1652 0
 2880 00e4 7B68     		ldr	r3, [r7, #4]
 2881 00e6 4FF00402 		mov	r2, #4
 2882 00ea 5A60     		str	r2, [r3, #4]
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2883              		.loc 1 1654 0
 2884 00ec 00E0     		b	.L155
 2885              	.L156:
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2886              		.loc 1 1656 0
 2887 00ee 00BF     		nop
 2888              	.L155:
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2889              		.loc 1 1658 0
 2890 00f0 07F10C07 		add	r7, r7, #12
 2891 00f4 BD46     		mov	sp, r7
 2892 00f6 80BC     		pop	{r7}
 2893 00f8 7047     		bx	lr
 2894              		.cfi_endproc
 2895              	.LFE133:
 2897 00fa 00BF     		.section	.text.CheckITStatus,"ax",%progbits
 2898              		.align	2
 2899              		.thumb
 2900              		.thumb_func
 2902              	CheckITStatus:
 2903              	.LFB134:
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2904              		.loc 1 1670 0
 2905              		.cfi_startproc
 2906              		@ args = 0, pretend = 0, frame = 16
 2907              		@ frame_needed = 1, uses_anonymous_args = 0
 2908              		@ link register save eliminated.
 2909 0000 80B4     		push	{r7}
 2910              	.LCFI72:
 2911              		.cfi_def_cfa_offset 4
 2912              		.cfi_offset 7, -4
 2913 0002 85B0     		sub	sp, sp, #20
 2914              	.LCFI73:
 2915              		.cfi_def_cfa_offset 24
 2916 0004 00AF     		add	r7, sp, #0
 2917              	.LCFI74:
 2918              		.cfi_def_cfa_register 7
 2919 0006 7860     		str	r0, [r7, #4]
 2920 0008 3960     		str	r1, [r7, #0]
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
 2921              		.loc 1 1671 0
 2922 000a 4FF00003 		mov	r3, #0
 2923 000e FB73     		strb	r3, [r7, #15]
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 2924              		.loc 1 1673 0
 2925 0010 7A68     		ldr	r2, [r7, #4]
 2926 0012 3B68     		ldr	r3, [r7, #0]
 2927 0014 1340     		ands	r3, r3, r2
 2928 0016 002B     		cmp	r3, #0
 2929 0018 03D0     		beq	.L174
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
 2930              		.loc 1 1676 0
 2931 001a 4FF00103 		mov	r3, #1
 2932 001e FB73     		strb	r3, [r7, #15]
 2933 0020 02E0     		b	.L175
 2934              	.L174:
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 2935              		.loc 1 1681 0
 2936 0022 4FF00003 		mov	r3, #0
 2937 0026 FB73     		strb	r3, [r7, #15]
 2938              	.L175:
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return pendingbitstatus;
 2939              		.loc 1 1683 0
 2940 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2941              		.loc 1 1684 0
 2942 002a 1846     		mov	r0, r3
 2943 002c 07F11407 		add	r7, r7, #20
 2944 0030 BD46     		mov	sp, r7
 2945 0032 80BC     		pop	{r7}
 2946 0034 7047     		bx	lr
 2947              		.cfi_endproc
 2948              	.LFE134:
 2950 0036 00BF     		.text
 2951              	.Letext0:
 2952              		.file 2 "/usr/local/csl/arm-2012.03/bin/../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/i
 2953              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 2954              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
 2955              		.file 5 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_can.c
     /tmp/ccxMdwkS.s:20     .text.CAN_DeInit:00000000 $t
     /tmp/ccxMdwkS.s:25     .text.CAN_DeInit:00000000 CAN_DeInit
     /tmp/ccxMdwkS.s:77     .text.CAN_Init:00000000 $t
     /tmp/ccxMdwkS.s:82     .text.CAN_Init:00000000 CAN_Init
     /tmp/ccxMdwkS.s:359    .text.CAN_FilterInit:00000000 $t
     /tmp/ccxMdwkS.s:364    .text.CAN_FilterInit:00000000 CAN_FilterInit
     /tmp/ccxMdwkS.s:602    .text.CAN_StructInit:00000000 $t
     /tmp/ccxMdwkS.s:607    .text.CAN_StructInit:00000000 CAN_StructInit
     /tmp/ccxMdwkS.s:678    .text.CAN_SlaveStartBank:00000000 $t
     /tmp/ccxMdwkS.s:683    .text.CAN_SlaveStartBank:00000000 CAN_SlaveStartBank
     /tmp/ccxMdwkS.s:746    .text.CAN_DBGFreeze:00000000 $t
     /tmp/ccxMdwkS.s:751    .text.CAN_DBGFreeze:00000000 CAN_DBGFreeze
     /tmp/ccxMdwkS.s:799    .text.CAN_TTComModeCmd:00000000 $t
     /tmp/ccxMdwkS.s:804    .text.CAN_TTComModeCmd:00000000 CAN_TTComModeCmd
     /tmp/ccxMdwkS.s:888    .text.CAN_Transmit:00000000 $t
     /tmp/ccxMdwkS.s:893    .text.CAN_Transmit:00000000 CAN_Transmit
     /tmp/ccxMdwkS.s:1148   .text.CAN_TransmitStatus:00000000 $t
     /tmp/ccxMdwkS.s:1153   .text.CAN_TransmitStatus:00000000 CAN_TransmitStatus
     /tmp/ccxMdwkS.s:1318   .text.CAN_CancelTransmit:00000000 $t
     /tmp/ccxMdwkS.s:1323   .text.CAN_CancelTransmit:00000000 CAN_CancelTransmit
     /tmp/ccxMdwkS.s:1391   .text.CAN_Receive:00000000 $t
     /tmp/ccxMdwkS.s:1396   .text.CAN_Receive:00000000 CAN_Receive
     /tmp/ccxMdwkS.s:1606   .text.CAN_FIFORelease:00000000 $t
     /tmp/ccxMdwkS.s:1611   .text.CAN_FIFORelease:00000000 CAN_FIFORelease
     /tmp/ccxMdwkS.s:1659   .text.CAN_MessagePending:00000000 $t
     /tmp/ccxMdwkS.s:1664   .text.CAN_MessagePending:00000000 CAN_MessagePending
     /tmp/ccxMdwkS.s:1727   .text.CAN_OperatingModeRequest:00000000 $t
     /tmp/ccxMdwkS.s:1732   .text.CAN_OperatingModeRequest:00000000 CAN_OperatingModeRequest
     /tmp/ccxMdwkS.s:1911   .text.CAN_Sleep:00000000 $t
     /tmp/ccxMdwkS.s:1916   .text.CAN_Sleep:00000000 CAN_Sleep
     /tmp/ccxMdwkS.s:1966   .text.CAN_WakeUp:00000000 $t
     /tmp/ccxMdwkS.s:1971   .text.CAN_WakeUp:00000000 CAN_WakeUp
     /tmp/ccxMdwkS.s:2042   .text.CAN_GetLastErrorCode:00000000 $t
     /tmp/ccxMdwkS.s:2047   .text.CAN_GetLastErrorCode:00000000 CAN_GetLastErrorCode
     /tmp/ccxMdwkS.s:2086   .text.CAN_GetReceiveErrorCounter:00000000 $t
     /tmp/ccxMdwkS.s:2091   .text.CAN_GetReceiveErrorCounter:00000000 CAN_GetReceiveErrorCounter
     /tmp/ccxMdwkS.s:2129   .text.CAN_GetLSBTransmitErrorCounter:00000000 $t
     /tmp/ccxMdwkS.s:2134   .text.CAN_GetLSBTransmitErrorCounter:00000000 CAN_GetLSBTransmitErrorCounter
     /tmp/ccxMdwkS.s:2173   .text.CAN_ITConfig:00000000 $t
     /tmp/ccxMdwkS.s:2178   .text.CAN_ITConfig:00000000 CAN_ITConfig
     /tmp/ccxMdwkS.s:2230   .text.CAN_GetFlagStatus:00000000 $t
     /tmp/ccxMdwkS.s:2235   .text.CAN_GetFlagStatus:00000000 CAN_GetFlagStatus
     /tmp/ccxMdwkS.s:2383   .text.CAN_ClearFlag:00000000 $t
     /tmp/ccxMdwkS.s:2388   .text.CAN_ClearFlag:00000000 CAN_ClearFlag
     /tmp/ccxMdwkS.s:2474   .text.CAN_GetITStatus:00000000 $t
     /tmp/ccxMdwkS.s:2479   .text.CAN_GetITStatus:00000000 CAN_GetITStatus
     /tmp/ccxMdwkS.s:2902   .text.CheckITStatus:00000000 CheckITStatus
     /tmp/ccxMdwkS.s:2729   .text.CAN_ClearITPendingBit:00000000 $t
     /tmp/ccxMdwkS.s:2734   .text.CAN_ClearITPendingBit:00000000 CAN_ClearITPendingBit
     /tmp/ccxMdwkS.s:2898   .text.CheckITStatus:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
