   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_i2c.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	I2C_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	I2C_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @file    stm32f4xx_i2c.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          functionalities of the Inter-integrated circuit (I2C)
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - Initialization and Configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - Data transfers
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - PEC management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - DMA transfers management
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - Interrupts, events and flags management 
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  @verbatim
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                 How to use this driver
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          ===================================================================
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          1. Enable peripheral clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2Cx, ENABLE)
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             function for I2C1, I2C2 or I2C3.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          2. Enable SDA, SCL  and SMBA (when used) GPIO clocks using 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             RCC_AHBPeriphClockCmd() function. 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          3. Peripherals alternate function: 
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Configure the desired pin in alternate function by:
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Call GPIO_Init() function
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 Recommended configuration is Push-Pull, Pull-up, Open-Drain.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 Add an external pull up if necessary (typically 4.7 KOhm).      
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *        
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          4. Program the Mode, duty cycle , Own address, Ack, Speed and Acknowledged
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             Address using the I2C_Init() function.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          5. Optionally you can enable/configure the following parameters without
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             re-initialization (i.e there is no need to call again I2C_Init() function):
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the acknowledge feature using I2C_AcknowledgeConfig() function
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the dual addressing mode using I2C_DualAddressCmd() function
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the general call using the I2C_GeneralCallCmd() function
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the clock stretching using I2C_StretchClockCmd() function
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the fast mode duty cycle using the I2C_FastModeDutyCycleConfig()
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                function.
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Configure the NACK position for Master Receiver mode in case of 
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                2 bytes reception using the function I2C_NACKPositionConfig().  
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the PEC Calculation using I2C_CalculatePEC() function
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - For SMBus Mode: 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Enable the Address Resolution Protocol (ARP) using I2C_ARPCmd() function
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Configure the SMBusAlert pin using I2C_SMBusAlertConfig() function
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          6. Enable the NVIC and the corresponding interrupt using the function 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             I2C_ITConfig() if you need to use interrupt mode. 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          7. When using the DMA mode 
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Configure the DMA using DMA_Init() function
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Active the needed channel Request using I2C_DMACmd() or
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                     I2C_DMALastTransferCmd() function.
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              @note When using DMA mode, I2C interrupts may be used at the same time to
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                    control the communication flow (Start/Stop/Ack... events and errors).
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          8. Enable the I2C using the I2C_Cmd() function.
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          9. Enable the DMA using the DMA_Cmd() function when using DMA mode in the 
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             transfers. 
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  @endverbatim
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @attention
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************  
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Includes ------------------------------------------------------------------*/
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_i2c.h"
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_rcc.h"
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief I2C driver modules
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private define ------------------------------------------------------------*/
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define CR1_CLEAR_MASK    ((uint16_t)0xFBF5)      /*<! I2C registers Masks */
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define FLAG_MASK         ((uint32_t)0x00FFFFFF)  /*<! I2C FLAG mask */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define ITEN_MASK         ((uint32_t)0x07000000)  /*<! I2C Interrupt Enable mask */
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private macro -------------------------------------------------------------*/
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private variables ---------------------------------------------------------*/
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private functions ---------------------------------------------------------*/
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Private_Functions
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group1 Initialization and Configuration functions
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Initialization and Configuration functions 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                    Initialization and Configuration functions
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Deinitialize the I2Cx peripheral registers to their default reset values.
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DeInit(I2C_TypeDef* I2Cx)
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
  28              		.loc 1 133 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 7, -8
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2Cx == I2C1)
  44              		.loc 1 137 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 4FF4A843 		mov	r3, #21504
  47 000e C4F20003 		movt	r3, 16384
  48 0012 9A42     		cmp	r2, r3
  49 0014 0CD1     		bne	.L2
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C1 reset state */
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
  50              		.loc 1 140 0
  51 0016 4FF40010 		mov	r0, #2097152
  52 001a 4FF00101 		mov	r1, #1
  53 001e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);    
  54              		.loc 1 142 0
  55 0022 4FF40010 		mov	r0, #2097152
  56 0026 4FF00001 		mov	r1, #0
  57 002a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  58 002e 26E0     		b	.L1
  59              	.L2:
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else if (I2Cx == I2C2)
  60              		.loc 1 144 0
  61 0030 7A68     		ldr	r2, [r7, #4]
  62 0032 4FF4B043 		mov	r3, #22528
  63 0036 C4F20003 		movt	r3, 16384
  64 003a 9A42     		cmp	r2, r3
  65 003c 0CD1     		bne	.L4
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C2 reset state */
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, ENABLE);
  66              		.loc 1 147 0
  67 003e 4FF48000 		mov	r0, #4194304
  68 0042 4FF00101 		mov	r1, #1
  69 0046 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, DISABLE);      
  70              		.loc 1 149 0
  71 004a 4FF48000 		mov	r0, #4194304
  72 004e 4FF00001 		mov	r1, #0
  73 0052 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  74 0056 12E0     		b	.L1
  75              	.L4:
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else 
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2Cx == I2C3)
  76              		.loc 1 153 0
  77 0058 7A68     		ldr	r2, [r7, #4]
  78 005a 4FF4B843 		mov	r3, #23552
  79 005e C4F20003 		movt	r3, 16384
  80 0062 9A42     		cmp	r2, r3
  81 0064 0BD1     		bne	.L1
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Enable I2C3 reset state */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, ENABLE);
  82              		.loc 1 156 0
  83 0066 4FF40000 		mov	r0, #8388608
  84 006a 4FF00101 		mov	r1, #1
  85 006e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, DISABLE);     
  86              		.loc 1 158 0
  87 0072 4FF40000 		mov	r0, #8388608
  88 0076 4FF00001 		mov	r1, #0
  89 007a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  90              	.L1:
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
  91              		.loc 1 161 0
  92 007e 07F10807 		add	r7, r7, #8
  93 0082 BD46     		mov	sp, r7
  94 0084 80BD     		pop	{r7, pc}
  95              		.cfi_endproc
  96              	.LFE110:
  98 0086 00BF     		.section	.text.I2C_Init,"ax",%progbits
  99              		.align	2
 100              		.global	I2C_Init
 101              		.thumb
 102              		.thumb_func
 104              	I2C_Init:
 105              	.LFB111:
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Initializes the I2Cx peripheral according to the specified 
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         parameters in the I2C_InitStruct.
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency 
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         (I2C peripheral input clock) must be a multiple of 10 MHz.  
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that contains 
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         the configuration information for the specified I2C peripheral.
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 106              		.loc 1 176 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 40
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110 0000 80B5     		push	{r7, lr}
 111              	.LCFI3:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 14, -4
 114              		.cfi_offset 7, -8
 115 0002 8AB0     		sub	sp, sp, #40
 116              	.LCFI4:
 117              		.cfi_def_cfa_offset 48
 118 0004 00AF     		add	r7, sp, #0
 119              	.LCFI5:
 120              		.cfi_def_cfa_register 7
 121 0006 7860     		str	r0, [r7, #4]
 122 0008 3960     		str	r1, [r7, #0]
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 123              		.loc 1 177 0
 124 000a 4FF00003 		mov	r3, #0
 125 000e FB84     		strh	r3, [r7, #38]	@ movhi
 126 0010 4FF00003 		mov	r3, #0
 127 0014 7B84     		strh	r3, [r7, #34]	@ movhi
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t result = 0x04;
 128              		.loc 1 178 0
 129 0016 4FF00403 		mov	r3, #4
 130 001a BB84     		strh	r3, [r7, #36]	@ movhi
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t pclk1 = 8000000;
 131              		.loc 1 179 0
 132 001c 4FF49053 		mov	r3, #4608
 133 0020 C0F27A03 		movt	r3, 122
 134 0024 FB61     		str	r3, [r7, #28]
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_ClocksTypeDef  rcc_clocks;
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLOCK_SPEED(I2C_InitStruct->I2C_ClockSpeed));
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_InitStruct->I2C_DutyCycle));
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR2 Configuration ------------------------*/
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR2 value */
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR2;
 135              		.loc 1 192 0
 136 0026 7B68     		ldr	r3, [r7, #4]
 137 0028 9B88     		ldrh	r3, [r3, #4]	@ movhi
 138 002a FB84     		strh	r3, [r7, #38]	@ movhi
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_CR2_FREQ);
 139              		.loc 1 194 0
 140 002c FB8C     		ldrh	r3, [r7, #38]	@ movhi
 141 002e 23F03F03 		bic	r3, r3, #63
 142 0032 FB84     		strh	r3, [r7, #38]	@ movhi
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_GetClocksFreq(&rcc_clocks);
 143              		.loc 1 196 0
 144 0034 07F10C03 		add	r3, r7, #12
 145 0038 1846     		mov	r0, r3
 146 003a FFF7FEFF 		bl	RCC_GetClocksFreq
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 147              		.loc 1 197 0
 148 003e 7B69     		ldr	r3, [r7, #20]
 149 0040 FB61     		str	r3, [r7, #28]
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set frequency bits depending on pclk1 value */
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   freqrange = (uint16_t)(pclk1 / 1000000);
 150              		.loc 1 199 0
 151 0042 FA69     		ldr	r2, [r7, #28]
 152 0044 4DF68363 		movw	r3, #56963
 153 0048 C4F21B33 		movt	r3, 17179
 154 004c A3FB0213 		umull	r1, r3, r3, r2
 155 0050 4FEA9343 		lsr	r3, r3, #18
 156 0054 7B84     		strh	r3, [r7, #34]	@ movhi
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 157              		.loc 1 200 0
 158 0056 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 159 0058 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 160 005a 1343     		orrs	r3, r3, r2
 161 005c FB84     		strh	r3, [r7, #38]	@ movhi
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR2 */
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR2 = tmpreg;
 162              		.loc 1 202 0
 163 005e 7B68     		ldr	r3, [r7, #4]
 164 0060 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 165 0062 9A80     		strh	r2, [r3, #4]	@ movhi
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CCR Configuration ------------------------*/
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Disable the selected I2C peripheral to configure TRISE */
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 166              		.loc 1 206 0
 167 0064 7B68     		ldr	r3, [r7, #4]
 168 0066 1B88     		ldrh	r3, [r3, #0]	@ movhi
 169 0068 9BB2     		uxth	r3, r3
 170 006a 23F00103 		bic	r3, r3, #1
 171 006e 9AB2     		uxth	r2, r3
 172 0070 7B68     		ldr	r3, [r7, #4]
 173 0072 1A80     		strh	r2, [r3, #0]	@ movhi
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear F/S, DUTY and CCR[11:0] bits */
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = 0;
 174              		.loc 1 209 0
 175 0074 4FF00003 		mov	r3, #0
 176 0078 FB84     		strh	r3, [r7, #38]	@ movhi
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in standard mode */
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_InitStruct->I2C_ClockSpeed <= 100000)
 177              		.loc 1 212 0
 178 007a 3B68     		ldr	r3, [r7, #0]
 179 007c 1A68     		ldr	r2, [r3, #0]
 180 007e 48F2A063 		movw	r3, #34464
 181 0082 C0F20103 		movt	r3, 1
 182 0086 9A42     		cmp	r2, r3
 183 0088 18D8     		bhi	.L6
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Standard mode speed calculate */
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
 184              		.loc 1 215 0
 185 008a 3B68     		ldr	r3, [r7, #0]
 186 008c 1B68     		ldr	r3, [r3, #0]
 187 008e 4FEA4303 		lsl	r3, r3, #1
 188 0092 FA69     		ldr	r2, [r7, #28]
 189 0094 B2FBF3F3 		udiv	r3, r2, r3
 190 0098 BB84     		strh	r3, [r7, #36]	@ movhi
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x4*/
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (result < 0x04)
 191              		.loc 1 217 0
 192 009a BB8C     		ldrh	r3, [r7, #36]
 193 009c 032B     		cmp	r3, #3
 194 009e 02D8     		bhi	.L7
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = 0x04;  
 195              		.loc 1 220 0
 196 00a0 4FF00403 		mov	r3, #4
 197 00a4 BB84     		strh	r3, [r7, #36]	@ movhi
 198              	.L7:
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value for standard mode */
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= result;	  
 199              		.loc 1 223 0
 200 00a6 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 201 00a8 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 202 00aa 1343     		orrs	r3, r3, r2
 203 00ac FB84     		strh	r3, [r7, #38]	@ movhi
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for standard mode */
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = freqrange + 1; 
 204              		.loc 1 225 0
 205 00ae 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 206 00b0 03F10103 		add	r3, r3, #1
 207 00b4 9AB2     		uxth	r2, r3
 208 00b6 7B68     		ldr	r3, [r7, #4]
 209 00b8 1A84     		strh	r2, [r3, #32]	@ movhi
 210 00ba 4BE0     		b	.L8
 211              	.L6:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in fast mode */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency (I2C peripheral
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      input clock) must be a multiple of 10 MHz */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else /*(I2C_InitStruct->I2C_ClockSpeed <= 400000)*/
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_2)
 212              		.loc 1 232 0
 213 00bc 3B68     		ldr	r3, [r7, #0]
 214 00be DA88     		ldrh	r2, [r3, #6]
 215 00c0 4BF6FF73 		movw	r3, #49151
 216 00c4 9A42     		cmp	r2, r3
 217 00c6 0AD1     		bne	.L9
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 2 */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 3));
 218              		.loc 1 235 0
 219 00c8 3B68     		ldr	r3, [r7, #0]
 220 00ca 1A68     		ldr	r2, [r3, #0]
 221 00cc 1346     		mov	r3, r2
 222 00ce 4FEA4303 		lsl	r3, r3, #1
 223 00d2 9B18     		adds	r3, r3, r2
 224 00d4 FA69     		ldr	r2, [r7, #28]
 225 00d6 B2FBF3F3 		udiv	r3, r2, r3
 226 00da BB84     		strh	r3, [r7, #36]	@ movhi
 227 00dc 10E0     		b	.L10
 228              	.L9:
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     else /*I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_16_9*/
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 16/9 */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 25));
 229              		.loc 1 240 0
 230 00de 3B68     		ldr	r3, [r7, #0]
 231 00e0 1A68     		ldr	r2, [r3, #0]
 232 00e2 1346     		mov	r3, r2
 233 00e4 4FEA8303 		lsl	r3, r3, #2
 234 00e8 9B18     		adds	r3, r3, r2
 235 00ea 4FEA8302 		lsl	r2, r3, #2
 236 00ee 9B18     		adds	r3, r3, r2
 237 00f0 FA69     		ldr	r2, [r7, #28]
 238 00f2 B2FBF3F3 		udiv	r3, r2, r3
 239 00f6 BB84     		strh	r3, [r7, #36]	@ movhi
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= I2C_DutyCycle_16_9;
 240              		.loc 1 242 0
 241 00f8 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 242 00fa 43F48043 		orr	r3, r3, #16384
 243 00fe BB84     		strh	r3, [r7, #36]	@ movhi
 244              	.L10:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x1*/
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if ((result & I2C_CCR_CCR) == 0)
 245              		.loc 1 246 0
 246 0100 BB8C     		ldrh	r3, [r7, #36]
 247 0102 4FEA0353 		lsl	r3, r3, #20
 248 0106 4FEA1353 		lsr	r3, r3, #20
 249 010a 002B     		cmp	r3, #0
 250 010c 03D1     		bne	.L11
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= (uint16_t)0x0001;  
 251              		.loc 1 249 0
 252 010e BB8C     		ldrh	r3, [r7, #36]	@ movhi
 253 0110 43F00103 		orr	r3, r3, #1
 254 0114 BB84     		strh	r3, [r7, #36]	@ movhi
 255              	.L11:
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value and set F/S bit for fast mode */
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= (uint16_t)(result | I2C_CCR_FS);
 256              		.loc 1 252 0
 257 0116 BA8C     		ldrh	r2, [r7, #36]	@ movhi
 258 0118 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 259 011a 1343     		orrs	r3, r3, r2
 260 011c 9BB2     		uxth	r3, r3
 261 011e 6FEA4343 		mvn	r3, r3, lsl #17
 262 0122 6FEA5343 		mvn	r3, r3, lsr #17
 263 0126 FB84     		strh	r3, [r7, #38]	@ movhi
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = (uint16_t)(((freqrange * (uint16_t)300) / (uint16_t)1000) + (uint16_t)1);  
 264              		.loc 1 254 0
 265 0128 7B8C     		ldrh	r3, [r7, #34]
 266 012a 4FF49672 		mov	r2, #300
 267 012e 02FB03F2 		mul	r2, r2, r3
 268 0132 44F6D353 		movw	r3, #19923
 269 0136 C1F26203 		movt	r3, 4194
 270 013a 83FB0213 		smull	r1, r3, r3, r2
 271 013e 4FEAA311 		asr	r1, r3, #6
 272 0142 4FEAE273 		asr	r3, r2, #31
 273 0146 CB1A     		subs	r3, r1, r3
 274 0148 9BB2     		uxth	r3, r3
 275 014a 03F10103 		add	r3, r3, #1
 276 014e 9AB2     		uxth	r2, r3
 277 0150 7B68     		ldr	r3, [r7, #4]
 278 0152 1A84     		strh	r2, [r3, #32]	@ movhi
 279              	.L8:
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CCR */
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CCR = tmpreg;
 280              		.loc 1 258 0
 281 0154 7B68     		ldr	r3, [r7, #4]
 282 0156 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 283 0158 9A83     		strh	r2, [r3, #28]	@ movhi
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Enable the selected I2C peripheral */
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
 284              		.loc 1 260 0
 285 015a 7B68     		ldr	r3, [r7, #4]
 286 015c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 287 015e 9BB2     		uxth	r3, r3
 288 0160 43F00103 		orr	r3, r3, #1
 289 0164 9AB2     		uxth	r2, r3
 290 0166 7B68     		ldr	r3, [r7, #4]
 291 0168 1A80     		strh	r2, [r3, #0]	@ movhi
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR1 Configuration ------------------------*/
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR1 value */
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR1;
 292              		.loc 1 264 0
 293 016a 7B68     		ldr	r3, [r7, #4]
 294 016c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 295 016e FB84     		strh	r3, [r7, #38]	@ movhi
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 296              		.loc 1 266 0
 297 0170 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 298 0172 23F48063 		bic	r3, r3, #1024
 299 0176 23F00A03 		bic	r3, r3, #10
 300 017a FB84     		strh	r3, [r7, #38]	@ movhi
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set SMBTYPE and SMBUS bits according to I2C_Mode value */
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set ACK bit according to I2C_Ack value */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
 301              		.loc 1 270 0
 302 017c 3B68     		ldr	r3, [r7, #0]
 303 017e 9A88     		ldrh	r2, [r3, #4]
 304 0180 3B68     		ldr	r3, [r7, #0]
 305 0182 5B89     		ldrh	r3, [r3, #10]
 306 0184 1343     		orrs	r3, r3, r2
 307 0186 9AB2     		uxth	r2, r3
 308 0188 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 309 018a 1343     		orrs	r3, r3, r2
 310 018c FB84     		strh	r3, [r7, #38]	@ movhi
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 = tmpreg;
 311              		.loc 1 272 0
 312 018e 7B68     		ldr	r3, [r7, #4]
 313 0190 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 314 0192 1A80     		strh	r2, [r3, #0]	@ movhi
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx OAR1 Configuration -----------------------*/
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own Address1 and acknowledged address */
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR1 = (I2C_InitStruct->I2C_AcknowledgedAddress | I2C_InitStruct->I2C_OwnAddress1);
 315              		.loc 1 276 0
 316 0194 3B68     		ldr	r3, [r7, #0]
 317 0196 9A89     		ldrh	r2, [r3, #12]
 318 0198 3B68     		ldr	r3, [r7, #0]
 319 019a 1B89     		ldrh	r3, [r3, #8]
 320 019c 1343     		orrs	r3, r3, r2
 321 019e 9AB2     		uxth	r2, r3
 322 01a0 7B68     		ldr	r3, [r7, #4]
 323 01a2 1A81     		strh	r2, [r3, #8]	@ movhi
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 324              		.loc 1 277 0
 325 01a4 07F12807 		add	r7, r7, #40
 326 01a8 BD46     		mov	sp, r7
 327 01aa 80BD     		pop	{r7, pc}
 328              		.cfi_endproc
 329              	.LFE111:
 331              		.section	.text.I2C_StructInit,"ax",%progbits
 332              		.align	2
 333              		.global	I2C_StructInit
 334              		.thumb
 335              		.thumb_func
 337              	I2C_StructInit:
 338              	.LFB112:
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Fills each I2C_InitStruct member with its default value.
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 339              		.loc 1 285 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 344 0000 80B4     		push	{r7}
 345              	.LCFI6:
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 7, -4
 348 0002 83B0     		sub	sp, sp, #12
 349              	.LCFI7:
 350              		.cfi_def_cfa_offset 16
 351 0004 00AF     		add	r7, sp, #0
 352              	.LCFI8:
 353              		.cfi_def_cfa_register 7
 354 0006 7860     		str	r0, [r7, #4]
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* initialize the I2C_ClockSpeed member */
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_ClockSpeed = 5000;
 355              		.loc 1 288 0
 356 0008 7B68     		ldr	r3, [r7, #4]
 357 000a 41F28832 		movw	r2, #5000
 358 000e 1A60     		str	r2, [r3, #0]
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 359              		.loc 1 290 0
 360 0010 7B68     		ldr	r3, [r7, #4]
 361 0012 4FF00002 		mov	r2, #0
 362 0016 9A80     		strh	r2, [r3, #4]	@ movhi
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
 363              		.loc 1 292 0
 364 0018 7B68     		ldr	r3, [r7, #4]
 365 001a 4BF6FF72 		movw	r2, #49151
 366 001e DA80     		strh	r2, [r3, #6]	@ movhi
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 367              		.loc 1 294 0
 368 0020 7B68     		ldr	r3, [r7, #4]
 369 0022 4FF00002 		mov	r2, #0
 370 0026 1A81     		strh	r2, [r3, #8]	@ movhi
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Ack member */
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 371              		.loc 1 296 0
 372 0028 7B68     		ldr	r3, [r7, #4]
 373 002a 4FF00002 		mov	r2, #0
 374 002e 5A81     		strh	r2, [r3, #10]	@ movhi
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 375              		.loc 1 298 0
 376 0030 7B68     		ldr	r3, [r7, #4]
 377 0032 4FF48042 		mov	r2, #16384
 378 0036 9A81     		strh	r2, [r3, #12]	@ movhi
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 379              		.loc 1 299 0
 380 0038 07F10C07 		add	r7, r7, #12
 381 003c BD46     		mov	sp, r7
 382 003e 80BC     		pop	{r7}
 383 0040 7047     		bx	lr
 384              		.cfi_endproc
 385              	.LFE112:
 387 0042 00BF     		.section	.text.I2C_Cmd,"ax",%progbits
 388              		.align	2
 389              		.global	I2C_Cmd
 390              		.thumb
 391              		.thumb_func
 393              	I2C_Cmd:
 394              	.LFB113:
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C peripheral.
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx peripheral. 
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 395              		.loc 1 309 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 0000 80B4     		push	{r7}
 401              	.LCFI9:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 0002 83B0     		sub	sp, sp, #12
 405              	.LCFI10:
 406              		.cfi_def_cfa_offset 16
 407 0004 00AF     		add	r7, sp, #0
 408              	.LCFI11:
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 411 0008 0B46     		mov	r3, r1
 412 000a FB70     		strb	r3, [r7, #3]
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 413              		.loc 1 313 0
 414 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 415 000e 002B     		cmp	r3, #0
 416 0010 08D0     		beq	.L14
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C peripheral */
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PE;
 417              		.loc 1 316 0
 418 0012 7B68     		ldr	r3, [r7, #4]
 419 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 420 0016 9BB2     		uxth	r3, r3
 421 0018 43F00103 		orr	r3, r3, #1
 422 001c 9AB2     		uxth	r2, r3
 423 001e 7B68     		ldr	r3, [r7, #4]
 424 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 425 0022 07E0     		b	.L13
 426              	.L14:
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C peripheral */
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 427              		.loc 1 321 0
 428 0024 7B68     		ldr	r3, [r7, #4]
 429 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 430 0028 9BB2     		uxth	r3, r3
 431 002a 23F00103 		bic	r3, r3, #1
 432 002e 9AB2     		uxth	r2, r3
 433 0030 7B68     		ldr	r3, [r7, #4]
 434 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 435              	.L13:
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 436              		.loc 1 323 0
 437 0034 07F10C07 		add	r7, r7, #12
 438 0038 BD46     		mov	sp, r7
 439 003a 80BC     		pop	{r7}
 440 003c 7047     		bx	lr
 441              		.cfi_endproc
 442              	.LFE113:
 444 003e 00BF     		.section	.text.I2C_GenerateSTART,"ax",%progbits
 445              		.align	2
 446              		.global	I2C_GenerateSTART
 447              		.thumb
 448              		.thumb_func
 450              	I2C_GenerateSTART:
 451              	.LFB114:
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication START condition.
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C START condition generation.
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 452              		.loc 1 333 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457 0000 80B4     		push	{r7}
 458              	.LCFI12:
 459              		.cfi_def_cfa_offset 4
 460              		.cfi_offset 7, -4
 461 0002 83B0     		sub	sp, sp, #12
 462              	.LCFI13:
 463              		.cfi_def_cfa_offset 16
 464 0004 00AF     		add	r7, sp, #0
 465              	.LCFI14:
 466              		.cfi_def_cfa_register 7
 467 0006 7860     		str	r0, [r7, #4]
 468 0008 0B46     		mov	r3, r1
 469 000a FB70     		strb	r3, [r7, #3]
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 470              		.loc 1 337 0
 471 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 472 000e 002B     		cmp	r3, #0
 473 0010 08D0     		beq	.L17
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a START condition */
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_START;
 474              		.loc 1 340 0
 475 0012 7B68     		ldr	r3, [r7, #4]
 476 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 477 0016 9BB2     		uxth	r3, r3
 478 0018 43F48073 		orr	r3, r3, #256
 479 001c 9AB2     		uxth	r2, r3
 480 001e 7B68     		ldr	r3, [r7, #4]
 481 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 482 0022 07E0     		b	.L16
 483              	.L17:
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the START condition generation */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_START);
 484              		.loc 1 345 0
 485 0024 7B68     		ldr	r3, [r7, #4]
 486 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 487 0028 9BB2     		uxth	r3, r3
 488 002a 23F48073 		bic	r3, r3, #256
 489 002e 9AB2     		uxth	r2, r3
 490 0030 7B68     		ldr	r3, [r7, #4]
 491 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 492              	.L16:
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 493              		.loc 1 347 0
 494 0034 07F10C07 		add	r7, r7, #12
 495 0038 BD46     		mov	sp, r7
 496 003a 80BC     		pop	{r7}
 497 003c 7047     		bx	lr
 498              		.cfi_endproc
 499              	.LFE114:
 501 003e 00BF     		.section	.text.I2C_GenerateSTOP,"ax",%progbits
 502              		.align	2
 503              		.global	I2C_GenerateSTOP
 504              		.thumb
 505              		.thumb_func
 507              	I2C_GenerateSTOP:
 508              	.LFB115:
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication STOP condition.
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C STOP condition generation.
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 509              		.loc 1 357 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 8
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514 0000 80B4     		push	{r7}
 515              	.LCFI15:
 516              		.cfi_def_cfa_offset 4
 517              		.cfi_offset 7, -4
 518 0002 83B0     		sub	sp, sp, #12
 519              	.LCFI16:
 520              		.cfi_def_cfa_offset 16
 521 0004 00AF     		add	r7, sp, #0
 522              	.LCFI17:
 523              		.cfi_def_cfa_register 7
 524 0006 7860     		str	r0, [r7, #4]
 525 0008 0B46     		mov	r3, r1
 526 000a FB70     		strb	r3, [r7, #3]
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 527              		.loc 1 361 0
 528 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 529 000e 002B     		cmp	r3, #0
 530 0010 08D0     		beq	.L20
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a STOP condition */
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_STOP;
 531              		.loc 1 364 0
 532 0012 7B68     		ldr	r3, [r7, #4]
 533 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 534 0016 9BB2     		uxth	r3, r3
 535 0018 43F40073 		orr	r3, r3, #512
 536 001c 9AB2     		uxth	r2, r3
 537 001e 7B68     		ldr	r3, [r7, #4]
 538 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 539 0022 07E0     		b	.L19
 540              	.L20:
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the STOP condition generation */
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_STOP);
 541              		.loc 1 369 0
 542 0024 7B68     		ldr	r3, [r7, #4]
 543 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 544 0028 9BB2     		uxth	r3, r3
 545 002a 23F40073 		bic	r3, r3, #512
 546 002e 9AB2     		uxth	r2, r3
 547 0030 7B68     		ldr	r3, [r7, #4]
 548 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 549              	.L19:
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 550              		.loc 1 371 0
 551 0034 07F10C07 		add	r7, r7, #12
 552 0038 BD46     		mov	sp, r7
 553 003a 80BC     		pop	{r7}
 554 003c 7047     		bx	lr
 555              		.cfi_endproc
 556              	.LFE115:
 558 003e 00BF     		.section	.text.I2C_Send7bitAddress,"ax",%progbits
 559              		.align	2
 560              		.global	I2C_Send7bitAddress
 561              		.thumb
 562              		.thumb_func
 564              	I2C_Send7bitAddress:
 565              	.LFB116:
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Transmits the address byte to select the slave device.
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the slave address which will be transmitted
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Direction: specifies whether the I2C device will be a Transmitter
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         or a Receiver. 
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Transmitter: Transmitter mode
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Receiver: Receiver mode
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 566              		.loc 1 385 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 8
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571 0000 80B4     		push	{r7}
 572              	.LCFI18:
 573              		.cfi_def_cfa_offset 4
 574              		.cfi_offset 7, -4
 575 0002 83B0     		sub	sp, sp, #12
 576              	.LCFI19:
 577              		.cfi_def_cfa_offset 16
 578 0004 00AF     		add	r7, sp, #0
 579              	.LCFI20:
 580              		.cfi_def_cfa_register 7
 581 0006 7860     		str	r0, [r7, #4]
 582 0008 1346     		mov	r3, r2
 583 000a 0A46     		mov	r2, r1
 584 000c FA70     		strb	r2, [r7, #3]
 585 000e BB70     		strb	r3, [r7, #2]
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIRECTION(I2C_Direction));
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Test on the direction to set/reset the read/write bit */
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_Direction != I2C_Direction_Transmitter)
 586              		.loc 1 390 0
 587 0010 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 588 0012 002B     		cmp	r3, #0
 589 0014 04D0     		beq	.L23
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set the address bit0 for read */
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address |= I2C_OAR1_ADD0;
 590              		.loc 1 393 0
 591 0016 FB78     		ldrb	r3, [r7, #3]
 592 0018 43F00103 		orr	r3, r3, #1
 593 001c FB70     		strb	r3, [r7, #3]
 594 001e 03E0     		b	.L24
 595              	.L23:
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Reset the address bit0 for write */
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address &= (uint8_t)~((uint8_t)I2C_OAR1_ADD0);
 596              		.loc 1 398 0
 597 0020 FB78     		ldrb	r3, [r7, #3]
 598 0022 23F00103 		bic	r3, r3, #1
 599 0026 FB70     		strb	r3, [r7, #3]
 600              	.L24:
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Send the address */
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Address;
 601              		.loc 1 401 0
 602 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 603 002a 9AB2     		uxth	r2, r3
 604 002c 7B68     		ldr	r3, [r7, #4]
 605 002e 1A82     		strh	r2, [r3, #16]	@ movhi
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 606              		.loc 1 402 0
 607 0030 07F10C07 		add	r7, r7, #12
 608 0034 BD46     		mov	sp, r7
 609 0036 80BC     		pop	{r7}
 610 0038 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE116:
 614 003a 00BF     		.section	.text.I2C_AcknowledgeConfig,"ax",%progbits
 615              		.align	2
 616              		.global	I2C_AcknowledgeConfig
 617              		.thumb
 618              		.thumb_func
 620              	I2C_AcknowledgeConfig:
 621              	.LFB117:
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C acknowledge feature.
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C Acknowledgement.
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 622              		.loc 1 412 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 8
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627 0000 80B4     		push	{r7}
 628              	.LCFI21:
 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 7, -4
 631 0002 83B0     		sub	sp, sp, #12
 632              	.LCFI22:
 633              		.cfi_def_cfa_offset 16
 634 0004 00AF     		add	r7, sp, #0
 635              	.LCFI23:
 636              		.cfi_def_cfa_register 7
 637 0006 7860     		str	r0, [r7, #4]
 638 0008 0B46     		mov	r3, r1
 639 000a FB70     		strb	r3, [r7, #3]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 640              		.loc 1 416 0
 641 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 642 000e 002B     		cmp	r3, #0
 643 0010 08D0     		beq	.L26
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the acknowledgement */
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ACK;
 644              		.loc 1 419 0
 645 0012 7B68     		ldr	r3, [r7, #4]
 646 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 647 0016 9BB2     		uxth	r3, r3
 648 0018 43F48063 		orr	r3, r3, #1024
 649 001c 9AB2     		uxth	r2, r3
 650 001e 7B68     		ldr	r3, [r7, #4]
 651 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 652 0022 07E0     		b	.L25
 653              	.L26:
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the acknowledgement */
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ACK);
 654              		.loc 1 424 0
 655 0024 7B68     		ldr	r3, [r7, #4]
 656 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 657 0028 9BB2     		uxth	r3, r3
 658 002a 23F48063 		bic	r3, r3, #1024
 659 002e 9AB2     		uxth	r2, r3
 660 0030 7B68     		ldr	r3, [r7, #4]
 661 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 662              	.L25:
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 663              		.loc 1 426 0
 664 0034 07F10C07 		add	r7, r7, #12
 665 0038 BD46     		mov	sp, r7
 666 003a 80BC     		pop	{r7}
 667 003c 7047     		bx	lr
 668              		.cfi_endproc
 669              	.LFE117:
 671 003e 00BF     		.section	.text.I2C_OwnAddress2Config,"ax",%progbits
 672              		.align	2
 673              		.global	I2C_OwnAddress2Config
 674              		.thumb
 675              		.thumb_func
 677              	I2C_OwnAddress2Config:
 678              	.LFB118:
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Configures the specified I2C own address2.
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the 7bit I2C own address2.
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address)
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 679              		.loc 1 435 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 16
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684 0000 80B4     		push	{r7}
 685              	.LCFI24:
 686              		.cfi_def_cfa_offset 4
 687              		.cfi_offset 7, -4
 688 0002 85B0     		sub	sp, sp, #20
 689              	.LCFI25:
 690              		.cfi_def_cfa_offset 24
 691 0004 00AF     		add	r7, sp, #0
 692              	.LCFI26:
 693              		.cfi_def_cfa_register 7
 694 0006 7860     		str	r0, [r7, #4]
 695 0008 0B46     		mov	r3, r1
 696 000a FB70     		strb	r3, [r7, #3]
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 697              		.loc 1 436 0
 698 000c 4FF00003 		mov	r3, #0
 699 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the old register value */
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->OAR2;
 700              		.loc 1 442 0
 701 0012 7B68     		ldr	r3, [r7, #4]
 702 0014 9B89     		ldrh	r3, [r3, #12]	@ movhi
 703 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset I2Cx Own address2 bit [7:1] */
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_OAR2_ADD2);
 704              		.loc 1 445 0
 705 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 706 001a 23F0FE03 		bic	r3, r3, #254
 707 001e FB81     		strh	r3, [r7, #14]	@ movhi
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own address2 */
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)Address & (uint16_t)0x00FE);
 708              		.loc 1 448 0
 709 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 710 0022 9BB2     		uxth	r3, r3
 711 0024 03F0FE03 		and	r3, r3, #254
 712 0028 9AB2     		uxth	r2, r3
 713 002a FB89     		ldrh	r3, [r7, #14]
 714 002c 1343     		orrs	r3, r3, r2
 715 002e 9BB2     		uxth	r3, r3
 716 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Store the new register value */
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR2 = tmpreg;
 717              		.loc 1 451 0
 718 0032 7B68     		ldr	r3, [r7, #4]
 719 0034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 720 0036 9A81     		strh	r2, [r3, #12]	@ movhi
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 721              		.loc 1 452 0
 722 0038 07F11407 		add	r7, r7, #20
 723 003c BD46     		mov	sp, r7
 724 003e 80BC     		pop	{r7}
 725 0040 7047     		bx	lr
 726              		.cfi_endproc
 727              	.LFE118:
 729 0042 00BF     		.section	.text.I2C_DualAddressCmd,"ax",%progbits
 730              		.align	2
 731              		.global	I2C_DualAddressCmd
 732              		.thumb
 733              		.thumb_func
 735              	I2C_DualAddressCmd:
 736              	.LFB119:
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C dual addressing mode.
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C dual addressing mode.
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 737              		.loc 1 462 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              	.LCFI27:
 744              		.cfi_def_cfa_offset 4
 745              		.cfi_offset 7, -4
 746 0002 83B0     		sub	sp, sp, #12
 747              	.LCFI28:
 748              		.cfi_def_cfa_offset 16
 749 0004 00AF     		add	r7, sp, #0
 750              	.LCFI29:
 751              		.cfi_def_cfa_register 7
 752 0006 7860     		str	r0, [r7, #4]
 753 0008 0B46     		mov	r3, r1
 754 000a FB70     		strb	r3, [r7, #3]
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 755              		.loc 1 466 0
 756 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 757 000e 002B     		cmp	r3, #0
 758 0010 08D0     		beq	.L30
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable dual addressing mode */
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 |= I2C_OAR2_ENDUAL;
 759              		.loc 1 469 0
 760 0012 7B68     		ldr	r3, [r7, #4]
 761 0014 9B89     		ldrh	r3, [r3, #12]	@ movhi
 762 0016 9BB2     		uxth	r3, r3
 763 0018 43F00103 		orr	r3, r3, #1
 764 001c 9AB2     		uxth	r2, r3
 765 001e 7B68     		ldr	r3, [r7, #4]
 766 0020 9A81     		strh	r2, [r3, #12]	@ movhi
 767 0022 07E0     		b	.L29
 768              	.L30:
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable dual addressing mode */
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 &= (uint16_t)~((uint16_t)I2C_OAR2_ENDUAL);
 769              		.loc 1 474 0
 770 0024 7B68     		ldr	r3, [r7, #4]
 771 0026 9B89     		ldrh	r3, [r3, #12]	@ movhi
 772 0028 9BB2     		uxth	r3, r3
 773 002a 23F00103 		bic	r3, r3, #1
 774 002e 9AB2     		uxth	r2, r3
 775 0030 7B68     		ldr	r3, [r7, #4]
 776 0032 9A81     		strh	r2, [r3, #12]	@ movhi
 777              	.L29:
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 778              		.loc 1 476 0
 779 0034 07F10C07 		add	r7, r7, #12
 780 0038 BD46     		mov	sp, r7
 781 003a 80BC     		pop	{r7}
 782 003c 7047     		bx	lr
 783              		.cfi_endproc
 784              	.LFE119:
 786 003e 00BF     		.section	.text.I2C_GeneralCallCmd,"ax",%progbits
 787              		.align	2
 788              		.global	I2C_GeneralCallCmd
 789              		.thumb
 790              		.thumb_func
 792              	I2C_GeneralCallCmd:
 793              	.LFB120:
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C general call feature.
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C General call.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 794              		.loc 1 486 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 0000 80B4     		push	{r7}
 800              	.LCFI30:
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 0002 83B0     		sub	sp, sp, #12
 804              	.LCFI31:
 805              		.cfi_def_cfa_offset 16
 806 0004 00AF     		add	r7, sp, #0
 807              	.LCFI32:
 808              		.cfi_def_cfa_register 7
 809 0006 7860     		str	r0, [r7, #4]
 810 0008 0B46     		mov	r3, r1
 811 000a FB70     		strb	r3, [r7, #3]
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 812              		.loc 1 490 0
 813 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 814 000e 002B     		cmp	r3, #0
 815 0010 08D0     		beq	.L33
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable generall call */
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENGC;
 816              		.loc 1 493 0
 817 0012 7B68     		ldr	r3, [r7, #4]
 818 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 819 0016 9BB2     		uxth	r3, r3
 820 0018 43F04003 		orr	r3, r3, #64
 821 001c 9AB2     		uxth	r2, r3
 822 001e 7B68     		ldr	r3, [r7, #4]
 823 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 824 0022 07E0     		b	.L32
 825              	.L33:
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable generall call */
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENGC);
 826              		.loc 1 498 0
 827 0024 7B68     		ldr	r3, [r7, #4]
 828 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 829 0028 9BB2     		uxth	r3, r3
 830 002a 23F04003 		bic	r3, r3, #64
 831 002e 9AB2     		uxth	r2, r3
 832 0030 7B68     		ldr	r3, [r7, #4]
 833 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 834              	.L32:
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 835              		.loc 1 500 0
 836 0034 07F10C07 		add	r7, r7, #12
 837 0038 BD46     		mov	sp, r7
 838 003a 80BC     		pop	{r7}
 839 003c 7047     		bx	lr
 840              		.cfi_endproc
 841              	.LFE120:
 843 003e 00BF     		.section	.text.I2C_SoftwareResetCmd,"ax",%progbits
 844              		.align	2
 845              		.global	I2C_SoftwareResetCmd
 846              		.thumb
 847              		.thumb_func
 849              	I2C_SoftwareResetCmd:
 850              	.LFB121:
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C software reset.
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   When software reset is enabled, the I2C IOs are released (this can
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         be useful to recover from bus errors).  
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C software reset.
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 851              		.loc 1 512 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 8
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856 0000 80B4     		push	{r7}
 857              	.LCFI33:
 858              		.cfi_def_cfa_offset 4
 859              		.cfi_offset 7, -4
 860 0002 83B0     		sub	sp, sp, #12
 861              	.LCFI34:
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              	.LCFI35:
 865              		.cfi_def_cfa_register 7
 866 0006 7860     		str	r0, [r7, #4]
 867 0008 0B46     		mov	r3, r1
 868 000a FB70     		strb	r3, [r7, #3]
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 869              		.loc 1 516 0
 870 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 871 000e 002B     		cmp	r3, #0
 872 0010 0AD0     		beq	.L36
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral under reset */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_SWRST;
 873              		.loc 1 519 0
 874 0012 7B68     		ldr	r3, [r7, #4]
 875 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 876 0016 9BB2     		uxth	r3, r3
 877 0018 6FEA4343 		mvn	r3, r3, lsl #17
 878 001c 6FEA5343 		mvn	r3, r3, lsr #17
 879 0020 9AB2     		uxth	r2, r3
 880 0022 7B68     		ldr	r3, [r7, #4]
 881 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 882 0026 09E0     		b	.L35
 883              	.L36:
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral not under reset */
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_SWRST);
 884              		.loc 1 524 0
 885 0028 7B68     		ldr	r3, [r7, #4]
 886 002a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 887 002c 9BB2     		uxth	r3, r3
 888 002e 4FEA4343 		lsl	r3, r3, #17
 889 0032 4FEA5343 		lsr	r3, r3, #17
 890 0036 9AB2     		uxth	r2, r3
 891 0038 7B68     		ldr	r3, [r7, #4]
 892 003a 1A80     		strh	r2, [r3, #0]	@ movhi
 893              	.L35:
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 894              		.loc 1 526 0
 895 003c 07F10C07 		add	r7, r7, #12
 896 0040 BD46     		mov	sp, r7
 897 0042 80BC     		pop	{r7}
 898 0044 7047     		bx	lr
 899              		.cfi_endproc
 900              	.LFE121:
 902 0046 00BF     		.section	.text.I2C_StretchClockCmd,"ax",%progbits
 903              		.align	2
 904              		.global	I2C_StretchClockCmd
 905              		.thumb
 906              		.thumb_func
 908              	I2C_StretchClockCmd:
 909              	.LFB122:
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C Clock stretching.
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx Clock stretching.
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 910              		.loc 1 536 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 8
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915 0000 80B4     		push	{r7}
 916              	.LCFI36:
 917              		.cfi_def_cfa_offset 4
 918              		.cfi_offset 7, -4
 919 0002 83B0     		sub	sp, sp, #12
 920              	.LCFI37:
 921              		.cfi_def_cfa_offset 16
 922 0004 00AF     		add	r7, sp, #0
 923              	.LCFI38:
 924              		.cfi_def_cfa_register 7
 925 0006 7860     		str	r0, [r7, #4]
 926 0008 0B46     		mov	r3, r1
 927 000a FB70     		strb	r3, [r7, #3]
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState == DISABLE)
 928              		.loc 1 540 0
 929 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 930 000e 002B     		cmp	r3, #0
 931 0010 08D1     		bne	.L39
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C Clock stretching */
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_NOSTRETCH;
 932              		.loc 1 543 0
 933 0012 7B68     		ldr	r3, [r7, #4]
 934 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 935 0016 9BB2     		uxth	r3, r3
 936 0018 43F08003 		orr	r3, r3, #128
 937 001c 9AB2     		uxth	r2, r3
 938 001e 7B68     		ldr	r3, [r7, #4]
 939 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 940 0022 07E0     		b	.L38
 941              	.L39:
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C Clock stretching */
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_NOSTRETCH);
 942              		.loc 1 548 0
 943 0024 7B68     		ldr	r3, [r7, #4]
 944 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 945 0028 9BB2     		uxth	r3, r3
 946 002a 23F08003 		bic	r3, r3, #128
 947 002e 9AB2     		uxth	r2, r3
 948 0030 7B68     		ldr	r3, [r7, #4]
 949 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 950              	.L38:
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 951              		.loc 1 550 0
 952 0034 07F10C07 		add	r7, r7, #12
 953 0038 BD46     		mov	sp, r7
 954 003a 80BC     		pop	{r7}
 955 003c 7047     		bx	lr
 956              		.cfi_endproc
 957              	.LFE122:
 959 003e 00BF     		.section	.text.I2C_FastModeDutyCycleConfig,"ax",%progbits
 960              		.align	2
 961              		.global	I2C_FastModeDutyCycleConfig
 962              		.thumb
 963              		.thumb_func
 965              	I2C_FastModeDutyCycleConfig:
 966              	.LFB123:
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C fast mode duty cycle.
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_DutyCycle: specifies the fast mode duty cycle.
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_2: I2C fast mode Tlow/Thigh = 2
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_16_9: I2C fast mode Tlow/Thigh = 16/9
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 967              		.loc 1 562 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 8
 970              		@ frame_needed = 1, uses_anonymous_args = 0
 971              		@ link register save eliminated.
 972 0000 80B4     		push	{r7}
 973              	.LCFI39:
 974              		.cfi_def_cfa_offset 4
 975              		.cfi_offset 7, -4
 976 0002 83B0     		sub	sp, sp, #12
 977              	.LCFI40:
 978              		.cfi_def_cfa_offset 16
 979 0004 00AF     		add	r7, sp, #0
 980              	.LCFI41:
 981              		.cfi_def_cfa_register 7
 982 0006 7860     		str	r0, [r7, #4]
 983 0008 0B46     		mov	r3, r1
 984 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_DutyCycle));
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 985              		.loc 1 566 0
 986 000c 7B88     		ldrh	r3, [r7, #2]
 987 000e B3F5804F 		cmp	r3, #16384
 988 0012 08D0     		beq	.L42
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=2 */
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR &= I2C_DutyCycle_2;
 989              		.loc 1 569 0
 990 0014 7B68     		ldr	r3, [r7, #4]
 991 0016 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 992 0018 9BB2     		uxth	r3, r3
 993 001a 23F48043 		bic	r3, r3, #16384
 994 001e 9AB2     		uxth	r2, r3
 995 0020 7B68     		ldr	r3, [r7, #4]
 996 0022 9A83     		strh	r2, [r3, #28]	@ movhi
 997 0024 07E0     		b	.L41
 998              	.L42:
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=16/9 */
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR |= I2C_DutyCycle_16_9;
 999              		.loc 1 574 0
 1000 0026 7B68     		ldr	r3, [r7, #4]
 1001 0028 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1002 002a 9BB2     		uxth	r3, r3
 1003 002c 43F48043 		orr	r3, r3, #16384
 1004 0030 9AB2     		uxth	r2, r3
 1005 0032 7B68     		ldr	r3, [r7, #4]
 1006 0034 9A83     		strh	r2, [r3, #28]	@ movhi
 1007              	.L41:
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1008              		.loc 1 576 0
 1009 0036 07F10C07 		add	r7, r7, #12
 1010 003a BD46     		mov	sp, r7
 1011 003c 80BC     		pop	{r7}
 1012 003e 7047     		bx	lr
 1013              		.cfi_endproc
 1014              	.LFE123:
 1016              		.section	.text.I2C_NACKPositionConfig,"ax",%progbits
 1017              		.align	2
 1018              		.global	I2C_NACKPositionConfig
 1019              		.thumb
 1020              		.thumb_func
 1022              	I2C_NACKPositionConfig:
 1023              	.LFB124:
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C NACK position in master receiver mode.
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function is useful in I2C Master Receiver mode when the number
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         of data to be received is equal to 2. In this case, this function 
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         should be called (with parameter I2C_NACKPosition_Next) before data 
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         reception starts,as described in the 2-byte reception procedure 
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         recommended in Reference Manual in Section: Master receiver.                
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_NACKPosition: specifies the NACK position. 
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Next: indicates that the next byte will be the last
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                        received byte.  
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Current: indicates that current byte is the last 
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                           received byte.
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_PECPositionConfig() 
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in I2C mode while I2C_PECPositionConfig() 
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in SMBUS mode. 
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_NACKPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_NACKPosition)
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1024              		.loc 1 600 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 8
 1027              		@ frame_needed = 1, uses_anonymous_args = 0
 1028              		@ link register save eliminated.
 1029 0000 80B4     		push	{r7}
 1030              	.LCFI42:
 1031              		.cfi_def_cfa_offset 4
 1032              		.cfi_offset 7, -4
 1033 0002 83B0     		sub	sp, sp, #12
 1034              	.LCFI43:
 1035              		.cfi_def_cfa_offset 16
 1036 0004 00AF     		add	r7, sp, #0
 1037              	.LCFI44:
 1038              		.cfi_def_cfa_register 7
 1039 0006 7860     		str	r0, [r7, #4]
 1040 0008 0B46     		mov	r3, r1
 1041 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_NACK_POSITION(I2C_NACKPosition));
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the input parameter */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_NACKPosition == I2C_NACKPosition_Next)
 1042              		.loc 1 606 0
 1043 000c 7B88     		ldrh	r3, [r7, #2]
 1044 000e B3F5006F 		cmp	r3, #2048
 1045 0012 08D1     		bne	.L45
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is the last received byte */
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_NACKPosition_Next;
 1046              		.loc 1 609 0
 1047 0014 7B68     		ldr	r3, [r7, #4]
 1048 0016 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1049 0018 9BB2     		uxth	r3, r3
 1050 001a 43F40063 		orr	r3, r3, #2048
 1051 001e 9AB2     		uxth	r2, r3
 1052 0020 7B68     		ldr	r3, [r7, #4]
 1053 0022 1A80     		strh	r2, [r3, #0]	@ movhi
 1054 0024 07E0     		b	.L44
 1055              	.L45:
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is the last received byte */
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_NACKPosition_Current;
 1056              		.loc 1 614 0
 1057 0026 7B68     		ldr	r3, [r7, #4]
 1058 0028 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1059 002a 9BB2     		uxth	r3, r3
 1060 002c 23F40063 		bic	r3, r3, #2048
 1061 0030 9AB2     		uxth	r2, r3
 1062 0032 7B68     		ldr	r3, [r7, #4]
 1063 0034 1A80     		strh	r2, [r3, #0]	@ movhi
 1064              	.L44:
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1065              		.loc 1 616 0
 1066 0036 07F10C07 		add	r7, r7, #12
 1067 003a BD46     		mov	sp, r7
 1068 003c 80BC     		pop	{r7}
 1069 003e 7047     		bx	lr
 1070              		.cfi_endproc
 1071              	.LFE124:
 1073              		.section	.text.I2C_SMBusAlertConfig,"ax",%progbits
 1074              		.align	2
 1075              		.global	I2C_SMBusAlertConfig
 1076              		.thumb
 1077              		.thumb_func
 1079              	I2C_SMBusAlertConfig:
 1080              	.LFB125:
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Drives the SMBusAlert pin high or low for the specified I2C.
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_SMBusAlert: specifies SMBAlert pin level. 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_Low: SMBAlert pin driven low
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_High: SMBAlert pin driven high
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1081              		.loc 1 628 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 8
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086 0000 80B4     		push	{r7}
 1087              	.LCFI45:
 1088              		.cfi_def_cfa_offset 4
 1089              		.cfi_offset 7, -4
 1090 0002 83B0     		sub	sp, sp, #12
 1091              	.LCFI46:
 1092              		.cfi_def_cfa_offset 16
 1093 0004 00AF     		add	r7, sp, #0
 1094              	.LCFI47:
 1095              		.cfi_def_cfa_register 7
 1096 0006 7860     		str	r0, [r7, #4]
 1097 0008 0B46     		mov	r3, r1
 1098 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_SMBUS_ALERT(I2C_SMBusAlert));
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 1099              		.loc 1 632 0
 1100 000c 7B88     		ldrh	r3, [r7, #2]
 1101 000e B3F5005F 		cmp	r3, #8192
 1102 0012 08D1     		bne	.L48
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin Low */
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_SMBusAlert_Low;
 1103              		.loc 1 635 0
 1104 0014 7B68     		ldr	r3, [r7, #4]
 1105 0016 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1106 0018 9BB2     		uxth	r3, r3
 1107 001a 43F40053 		orr	r3, r3, #8192
 1108 001e 9AB2     		uxth	r2, r3
 1109 0020 7B68     		ldr	r3, [r7, #4]
 1110 0022 1A80     		strh	r2, [r3, #0]	@ movhi
 1111 0024 07E0     		b	.L47
 1112              	.L48:
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin High  */
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_SMBusAlert_High;
 1113              		.loc 1 640 0
 1114 0026 7B68     		ldr	r3, [r7, #4]
 1115 0028 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1116 002a 9BB2     		uxth	r3, r3
 1117 002c 23F40053 		bic	r3, r3, #8192
 1118 0030 9AB2     		uxth	r2, r3
 1119 0032 7B68     		ldr	r3, [r7, #4]
 1120 0034 1A80     		strh	r2, [r3, #0]	@ movhi
 1121              	.L47:
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1122              		.loc 1 642 0
 1123 0036 07F10C07 		add	r7, r7, #12
 1124 003a BD46     		mov	sp, r7
 1125 003c 80BC     		pop	{r7}
 1126 003e 7047     		bx	lr
 1127              		.cfi_endproc
 1128              	.LFE125:
 1130              		.section	.text.I2C_ARPCmd,"ax",%progbits
 1131              		.align	2
 1132              		.global	I2C_ARPCmd
 1133              		.thumb
 1134              		.thumb_func
 1136              	I2C_ARPCmd:
 1137              	.LFB126:
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C ARP.
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx ARP. 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1138              		.loc 1 652 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 8
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
 1143 0000 80B4     		push	{r7}
 1144              	.LCFI48:
 1145              		.cfi_def_cfa_offset 4
 1146              		.cfi_offset 7, -4
 1147 0002 83B0     		sub	sp, sp, #12
 1148              	.LCFI49:
 1149              		.cfi_def_cfa_offset 16
 1150 0004 00AF     		add	r7, sp, #0
 1151              	.LCFI50:
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
 1154 0008 0B46     		mov	r3, r1
 1155 000a FB70     		strb	r3, [r7, #3]
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1156              		.loc 1 656 0
 1157 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1158 000e 002B     		cmp	r3, #0
 1159 0010 08D0     		beq	.L51
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C ARP */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENARP;
 1160              		.loc 1 659 0
 1161 0012 7B68     		ldr	r3, [r7, #4]
 1162 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1163 0016 9BB2     		uxth	r3, r3
 1164 0018 43F01003 		orr	r3, r3, #16
 1165 001c 9AB2     		uxth	r2, r3
 1166 001e 7B68     		ldr	r3, [r7, #4]
 1167 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 1168 0022 07E0     		b	.L50
 1169              	.L51:
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C ARP */
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENARP);
 1170              		.loc 1 664 0
 1171 0024 7B68     		ldr	r3, [r7, #4]
 1172 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1173 0028 9BB2     		uxth	r3, r3
 1174 002a 23F01003 		bic	r3, r3, #16
 1175 002e 9AB2     		uxth	r2, r3
 1176 0030 7B68     		ldr	r3, [r7, #4]
 1177 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 1178              	.L50:
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1179              		.loc 1 666 0
 1180 0034 07F10C07 		add	r7, r7, #12
 1181 0038 BD46     		mov	sp, r7
 1182 003a 80BC     		pop	{r7}
 1183 003c 7047     		bx	lr
 1184              		.cfi_endproc
 1185              	.LFE126:
 1187 003e 00BF     		.section	.text.I2C_SendData,"ax",%progbits
 1188              		.align	2
 1189              		.global	I2C_SendData
 1190              		.thumb
 1191              		.thumb_func
 1193              	I2C_SendData:
 1194              	.LFB127:
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group2 Data transfers functions
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Data transfers functions 
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                         Data transfers functions
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Sends a data byte through the I2Cx peripheral.
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Data: Byte to be transmitted..
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1195              		.loc 1 690 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 8
 1198              		@ frame_needed = 1, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200 0000 80B4     		push	{r7}
 1201              	.LCFI51:
 1202              		.cfi_def_cfa_offset 4
 1203              		.cfi_offset 7, -4
 1204 0002 83B0     		sub	sp, sp, #12
 1205              	.LCFI52:
 1206              		.cfi_def_cfa_offset 16
 1207 0004 00AF     		add	r7, sp, #0
 1208              	.LCFI53:
 1209              		.cfi_def_cfa_register 7
 1210 0006 7860     		str	r0, [r7, #4]
 1211 0008 0B46     		mov	r3, r1
 1212 000a FB70     		strb	r3, [r7, #3]
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write in the DR register the data to be sent */
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Data;
 1213              		.loc 1 694 0
 1214 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1215 000e 9AB2     		uxth	r2, r3
 1216 0010 7B68     		ldr	r3, [r7, #4]
 1217 0012 1A82     		strh	r2, [r3, #16]	@ movhi
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1218              		.loc 1 695 0
 1219 0014 07F10C07 		add	r7, r7, #12
 1220 0018 BD46     		mov	sp, r7
 1221 001a 80BC     		pop	{r7}
 1222 001c 7047     		bx	lr
 1223              		.cfi_endproc
 1224              	.LFE127:
 1226 001e 00BF     		.section	.text.I2C_ReceiveData,"ax",%progbits
 1227              		.align	2
 1228              		.global	I2C_ReceiveData
 1229              		.thumb
 1230              		.thumb_func
 1232              	I2C_ReceiveData:
 1233              	.LFB128:
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the most recent received data by the I2Cx peripheral.
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the received data.
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1234              		.loc 1 703 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 8
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238              		@ link register save eliminated.
 1239 0000 80B4     		push	{r7}
 1240              	.LCFI54:
 1241              		.cfi_def_cfa_offset 4
 1242              		.cfi_offset 7, -4
 1243 0002 83B0     		sub	sp, sp, #12
 1244              	.LCFI55:
 1245              		.cfi_def_cfa_offset 16
 1246 0004 00AF     		add	r7, sp, #0
 1247              	.LCFI56:
 1248              		.cfi_def_cfa_register 7
 1249 0006 7860     		str	r0, [r7, #4]
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the data in the DR register */
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (uint8_t)I2Cx->DR;
 1250              		.loc 1 707 0
 1251 0008 7B68     		ldr	r3, [r7, #4]
 1252 000a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1253 000c 9BB2     		uxth	r3, r3
 1254 000e DBB2     		uxtb	r3, r3
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1255              		.loc 1 708 0
 1256 0010 1846     		mov	r0, r3
 1257 0012 07F10C07 		add	r7, r7, #12
 1258 0016 BD46     		mov	sp, r7
 1259 0018 80BC     		pop	{r7}
 1260 001a 7047     		bx	lr
 1261              		.cfi_endproc
 1262              	.LFE128:
 1264              		.section	.text.I2C_TransmitPEC,"ax",%progbits
 1265              		.align	2
 1266              		.global	I2C_TransmitPEC
 1267              		.thumb
 1268              		.thumb_func
 1270              	I2C_TransmitPEC:
 1271              	.LFB129:
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group3 PEC management functions
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   PEC management functions 
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                          PEC management functions
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C PEC transfer.
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C PEC transmission.
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1272              		.loc 1 734 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 8
 1275              		@ frame_needed = 1, uses_anonymous_args = 0
 1276              		@ link register save eliminated.
 1277 0000 80B4     		push	{r7}
 1278              	.LCFI57:
 1279              		.cfi_def_cfa_offset 4
 1280              		.cfi_offset 7, -4
 1281 0002 83B0     		sub	sp, sp, #12
 1282              	.LCFI58:
 1283              		.cfi_def_cfa_offset 16
 1284 0004 00AF     		add	r7, sp, #0
 1285              	.LCFI59:
 1286              		.cfi_def_cfa_register 7
 1287 0006 7860     		str	r0, [r7, #4]
 1288 0008 0B46     		mov	r3, r1
 1289 000a FB70     		strb	r3, [r7, #3]
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1290              		.loc 1 738 0
 1291 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1292 000e 002B     		cmp	r3, #0
 1293 0010 08D0     		beq	.L56
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC transmission */
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PEC;
 1294              		.loc 1 741 0
 1295 0012 7B68     		ldr	r3, [r7, #4]
 1296 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1297 0016 9BB2     		uxth	r3, r3
 1298 0018 43F48053 		orr	r3, r3, #4096
 1299 001c 9AB2     		uxth	r2, r3
 1300 001e 7B68     		ldr	r3, [r7, #4]
 1301 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 1302 0022 07E0     		b	.L55
 1303              	.L56:
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC transmission */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PEC);
 1304              		.loc 1 746 0
 1305 0024 7B68     		ldr	r3, [r7, #4]
 1306 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1307 0028 9BB2     		uxth	r3, r3
 1308 002a 23F48053 		bic	r3, r3, #4096
 1309 002e 9AB2     		uxth	r2, r3
 1310 0030 7B68     		ldr	r3, [r7, #4]
 1311 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 1312              	.L55:
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1313              		.loc 1 748 0
 1314 0034 07F10C07 		add	r7, r7, #12
 1315 0038 BD46     		mov	sp, r7
 1316 003a 80BC     		pop	{r7}
 1317 003c 7047     		bx	lr
 1318              		.cfi_endproc
 1319              	.LFE129:
 1321 003e 00BF     		.section	.text.I2C_PECPositionConfig,"ax",%progbits
 1322              		.align	2
 1323              		.global	I2C_PECPositionConfig
 1324              		.thumb
 1325              		.thumb_func
 1327              	I2C_PECPositionConfig:
 1328              	.LFB130:
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C PEC position.
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_PECPosition: specifies the PEC position. 
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Next: indicates that the next byte is PEC
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Current: indicates that current byte is PEC
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *       
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_NACKPositionConfig()
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in SMBUS mode while I2C_NACKPositionConfig() 
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in I2C mode.
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1329              		.loc 1 765 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 8
 1332              		@ frame_needed = 1, uses_anonymous_args = 0
 1333              		@ link register save eliminated.
 1334 0000 80B4     		push	{r7}
 1335              	.LCFI60:
 1336              		.cfi_def_cfa_offset 4
 1337              		.cfi_offset 7, -4
 1338 0002 83B0     		sub	sp, sp, #12
 1339              	.LCFI61:
 1340              		.cfi_def_cfa_offset 16
 1341 0004 00AF     		add	r7, sp, #0
 1342              	.LCFI62:
 1343              		.cfi_def_cfa_register 7
 1344 0006 7860     		str	r0, [r7, #4]
 1345 0008 0B46     		mov	r3, r1
 1346 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_PEC_POSITION(I2C_PECPosition));
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
 1347              		.loc 1 769 0
 1348 000c 7B88     		ldrh	r3, [r7, #2]
 1349 000e B3F5006F 		cmp	r3, #2048
 1350 0012 08D1     		bne	.L59
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is PEC */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_PECPosition_Next;
 1351              		.loc 1 772 0
 1352 0014 7B68     		ldr	r3, [r7, #4]
 1353 0016 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1354 0018 9BB2     		uxth	r3, r3
 1355 001a 43F40063 		orr	r3, r3, #2048
 1356 001e 9AB2     		uxth	r2, r3
 1357 0020 7B68     		ldr	r3, [r7, #4]
 1358 0022 1A80     		strh	r2, [r3, #0]	@ movhi
 1359 0024 07E0     		b	.L58
 1360              	.L59:
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is PEC */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_PECPosition_Current;
 1361              		.loc 1 777 0
 1362 0026 7B68     		ldr	r3, [r7, #4]
 1363 0028 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1364 002a 9BB2     		uxth	r3, r3
 1365 002c 23F40063 		bic	r3, r3, #2048
 1366 0030 9AB2     		uxth	r2, r3
 1367 0032 7B68     		ldr	r3, [r7, #4]
 1368 0034 1A80     		strh	r2, [r3, #0]	@ movhi
 1369              	.L58:
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1370              		.loc 1 779 0
 1371 0036 07F10C07 		add	r7, r7, #12
 1372 003a BD46     		mov	sp, r7
 1373 003c 80BC     		pop	{r7}
 1374 003e 7047     		bx	lr
 1375              		.cfi_endproc
 1376              	.LFE130:
 1378              		.section	.text.I2C_CalculatePEC,"ax",%progbits
 1379              		.align	2
 1380              		.global	I2C_CalculatePEC
 1381              		.thumb
 1382              		.thumb_func
 1384              	I2C_CalculatePEC:
 1385              	.LFB131:
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the PEC value calculation of the transferred bytes.
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx PEC value calculation.
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1386              		.loc 1 789 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 8
 1389              		@ frame_needed = 1, uses_anonymous_args = 0
 1390              		@ link register save eliminated.
 1391 0000 80B4     		push	{r7}
 1392              	.LCFI63:
 1393              		.cfi_def_cfa_offset 4
 1394              		.cfi_offset 7, -4
 1395 0002 83B0     		sub	sp, sp, #12
 1396              	.LCFI64:
 1397              		.cfi_def_cfa_offset 16
 1398 0004 00AF     		add	r7, sp, #0
 1399              	.LCFI65:
 1400              		.cfi_def_cfa_register 7
 1401 0006 7860     		str	r0, [r7, #4]
 1402 0008 0B46     		mov	r3, r1
 1403 000a FB70     		strb	r3, [r7, #3]
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1404              		.loc 1 793 0
 1405 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1406 000e 002B     		cmp	r3, #0
 1407 0010 08D0     		beq	.L62
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC calculation */
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENPEC;
 1408              		.loc 1 796 0
 1409 0012 7B68     		ldr	r3, [r7, #4]
 1410 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1411 0016 9BB2     		uxth	r3, r3
 1412 0018 43F02003 		orr	r3, r3, #32
 1413 001c 9AB2     		uxth	r2, r3
 1414 001e 7B68     		ldr	r3, [r7, #4]
 1415 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 1416 0022 07E0     		b	.L61
 1417              	.L62:
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC calculation */
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENPEC);
 1418              		.loc 1 801 0
 1419 0024 7B68     		ldr	r3, [r7, #4]
 1420 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1421 0028 9BB2     		uxth	r3, r3
 1422 002a 23F02003 		bic	r3, r3, #32
 1423 002e 9AB2     		uxth	r2, r3
 1424 0030 7B68     		ldr	r3, [r7, #4]
 1425 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 1426              	.L61:
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1427              		.loc 1 803 0
 1428 0034 07F10C07 		add	r7, r7, #12
 1429 0038 BD46     		mov	sp, r7
 1430 003a 80BC     		pop	{r7}
 1431 003c 7047     		bx	lr
 1432              		.cfi_endproc
 1433              	.LFE131:
 1435 003e 00BF     		.section	.text.I2C_GetPEC,"ax",%progbits
 1436              		.align	2
 1437              		.global	I2C_GetPEC
 1438              		.thumb
 1439              		.thumb_func
 1441              	I2C_GetPEC:
 1442              	.LFB132:
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the PEC value for the specified I2C.
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The PEC value.
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1443              		.loc 1 811 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 8
 1446              		@ frame_needed = 1, uses_anonymous_args = 0
 1447              		@ link register save eliminated.
 1448 0000 80B4     		push	{r7}
 1449              	.LCFI66:
 1450              		.cfi_def_cfa_offset 4
 1451              		.cfi_offset 7, -4
 1452 0002 83B0     		sub	sp, sp, #12
 1453              	.LCFI67:
 1454              		.cfi_def_cfa_offset 16
 1455 0004 00AF     		add	r7, sp, #0
 1456              	.LCFI68:
 1457              		.cfi_def_cfa_register 7
 1458 0006 7860     		str	r0, [r7, #4]
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected I2C PEC value */
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return ((I2Cx->SR2) >> 8);
 1459              		.loc 1 815 0
 1460 0008 7B68     		ldr	r3, [r7, #4]
 1461 000a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1462 000c 9BB2     		uxth	r3, r3
 1463 000e 4FEA1323 		lsr	r3, r3, #8
 1464 0012 9BB2     		uxth	r3, r3
 1465 0014 DBB2     		uxtb	r3, r3
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1466              		.loc 1 816 0
 1467 0016 1846     		mov	r0, r3
 1468 0018 07F10C07 		add	r7, r7, #12
 1469 001c BD46     		mov	sp, r7
 1470 001e 80BC     		pop	{r7}
 1471 0020 7047     		bx	lr
 1472              		.cfi_endproc
 1473              	.LFE132:
 1475 0022 00BF     		.section	.text.I2C_DMACmd,"ax",%progbits
 1476              		.align	2
 1477              		.global	I2C_DMACmd
 1478              		.thumb
 1479              		.thumb_func
 1481              	I2C_DMACmd:
 1482              	.LFB133:
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group4 DMA transfers management functions
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   DMA transfers management functions 
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                          DMA transfers management functions
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C DMA channels 
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   requests.
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C DMA requests.
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA transfer.
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1483              		.loc 1 844 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 8
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487              		@ link register save eliminated.
 1488 0000 80B4     		push	{r7}
 1489              	.LCFI69:
 1490              		.cfi_def_cfa_offset 4
 1491              		.cfi_offset 7, -4
 1492 0002 83B0     		sub	sp, sp, #12
 1493              	.LCFI70:
 1494              		.cfi_def_cfa_offset 16
 1495 0004 00AF     		add	r7, sp, #0
 1496              	.LCFI71:
 1497              		.cfi_def_cfa_register 7
 1498 0006 7860     		str	r0, [r7, #4]
 1499 0008 0B46     		mov	r3, r1
 1500 000a FB70     		strb	r3, [r7, #3]
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1501              		.loc 1 848 0
 1502 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1503 000e 002B     		cmp	r3, #0
 1504 0010 08D0     		beq	.L66
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C DMA requests */
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_DMAEN;
 1505              		.loc 1 851 0
 1506 0012 7B68     		ldr	r3, [r7, #4]
 1507 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1508 0016 9BB2     		uxth	r3, r3
 1509 0018 43F40063 		orr	r3, r3, #2048
 1510 001c 9AB2     		uxth	r2, r3
 1511 001e 7B68     		ldr	r3, [r7, #4]
 1512 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 1513 0022 07E0     		b	.L65
 1514              	.L66:
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C DMA requests */
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_DMAEN);
 1515              		.loc 1 856 0
 1516 0024 7B68     		ldr	r3, [r7, #4]
 1517 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1518 0028 9BB2     		uxth	r3, r3
 1519 002a 23F40063 		bic	r3, r3, #2048
 1520 002e 9AB2     		uxth	r2, r3
 1521 0030 7B68     		ldr	r3, [r7, #4]
 1522 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1523              	.L65:
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1524              		.loc 1 858 0
 1525 0034 07F10C07 		add	r7, r7, #12
 1526 0038 BD46     		mov	sp, r7
 1527 003a 80BC     		pop	{r7}
 1528 003c 7047     		bx	lr
 1529              		.cfi_endproc
 1530              	.LFE133:
 1532 003e 00BF     		.section	.text.I2C_DMALastTransferCmd,"ax",%progbits
 1533              		.align	2
 1534              		.global	I2C_DMALastTransferCmd
 1535              		.thumb
 1536              		.thumb_func
 1538              	I2C_DMALastTransferCmd:
 1539              	.LFB134:
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Specifies that the next DMA transfer is the last one.
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA last transfer.
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1540              		.loc 1 868 0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 8
 1543              		@ frame_needed = 1, uses_anonymous_args = 0
 1544              		@ link register save eliminated.
 1545 0000 80B4     		push	{r7}
 1546              	.LCFI72:
 1547              		.cfi_def_cfa_offset 4
 1548              		.cfi_offset 7, -4
 1549 0002 83B0     		sub	sp, sp, #12
 1550              	.LCFI73:
 1551              		.cfi_def_cfa_offset 16
 1552 0004 00AF     		add	r7, sp, #0
 1553              	.LCFI74:
 1554              		.cfi_def_cfa_register 7
 1555 0006 7860     		str	r0, [r7, #4]
 1556 0008 0B46     		mov	r3, r1
 1557 000a FB70     		strb	r3, [r7, #3]
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1558              		.loc 1 872 0
 1559 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1560 000e 002B     		cmp	r3, #0
 1561 0010 08D0     		beq	.L69
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is the last transfer */
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_LAST;
 1562              		.loc 1 875 0
 1563 0012 7B68     		ldr	r3, [r7, #4]
 1564 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1565 0016 9BB2     		uxth	r3, r3
 1566 0018 43F48053 		orr	r3, r3, #4096
 1567 001c 9AB2     		uxth	r2, r3
 1568 001e 7B68     		ldr	r3, [r7, #4]
 1569 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 1570 0022 07E0     		b	.L68
 1571              	.L69:
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is not the last transfer */
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_LAST);
 1572              		.loc 1 880 0
 1573 0024 7B68     		ldr	r3, [r7, #4]
 1574 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1575 0028 9BB2     		uxth	r3, r3
 1576 002a 23F48053 		bic	r3, r3, #4096
 1577 002e 9AB2     		uxth	r2, r3
 1578 0030 7B68     		ldr	r3, [r7, #4]
 1579 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1580              	.L68:
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1581              		.loc 1 882 0
 1582 0034 07F10C07 		add	r7, r7, #12
 1583 0038 BD46     		mov	sp, r7
 1584 003a 80BC     		pop	{r7}
 1585 003c 7047     		bx	lr
 1586              		.cfi_endproc
 1587              	.LFE134:
 1589 003e 00BF     		.section	.text.I2C_ReadRegister,"ax",%progbits
 1590              		.align	2
 1591              		.global	I2C_ReadRegister
 1592              		.thumb
 1593              		.thumb_func
 1595              	I2C_ReadRegister:
 1596              	.LFB135:
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group5 Interrupts events and flags management functions
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Interrupts, events and flags management functions
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                 Interrupts, events and flags management functions
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C Interrupts 
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   sources and check or clear the flags or pending bits status.
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   The user should identify which mode will be used in his application to manage 
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           I2C State Monitoring Functions                    
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================   
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This I2C driver provides three different ways for I2C state monitoring
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   depending on the application requirements and constraints:
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      1. Basic state monitoring (Using I2C_CheckEvent() function)
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -----------------------------------------------------------
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It compares the status registers (SR1 and SR2) content to a given event
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (can be the combination of one or more flags).
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It returns SUCCESS if the current status includes the given flags 
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         and returns ERROR if one or more flags are missing in the current status.
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - When to use
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - This function is suitable for most applications as well as for startup 
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                activity since the events are fully described in the product reference 
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                manual (RM0090).
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - It is also suitable for users who need to define their own events.
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - Limitations
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - If an error occurs (ie. error flags are set besides to the monitored 
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                flags), the I2C_CheckEvent() function may return SUCCESS despite 
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the communication hold or corrupted real state. 
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                In this case, it is advised to use error interrupts to monitor 
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the error events and handle them in the interrupt IRQ handler.
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      @note 
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          For error management, it is advised to use the following functions:
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2C_ITConfig() to configure and enable the error interrupts (I2C_IT_ERR).
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2Cx_ER_IRQHandler() which is called when the error interrupt occurs.
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              Where x is the peripheral instance (I2C1, I2C2 ...)
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2C_GetFlagStatus() or I2C_GetITStatus()  to be called into the 
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              I2Cx_ER_IRQHandler() function in order to determine which error occurred.
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2C_ClearFlag() or I2C_ClearITPendingBit() and/or I2C_SoftwareResetCmd() 
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              and/or I2C_GenerateStop() in order to clear the error flag and source 
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              and return to correct  communication status.
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      2. Advanced state monitoring (Using the function I2C_GetLastEvent())
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -------------------------------------------------------------------- 
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         Using the function I2C_GetLastEvent() which returns the image of both status 
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         registers in a single word (uint32_t) (Status Register 2 value is shifted left 
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         by 16 bits and concatenated to Status Register 1).
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - When to use
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - This function is suitable for the same applications above but it 
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                allows to overcome the mentioned limitation of I2C_GetFlagStatus() 
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function.
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - The returned value could be compared to events already defined in 
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the library (stm32f4xx_i2c.h) or to custom values defined by user.
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                This function is suitable when multiple flags are monitored at the 
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                same time.
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - At the opposite of I2C_CheckEvent() function, this function allows 
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                user to choose when an event is accepted (when all events flags are 
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                set and no other flags are set or just when the needed flags are set 
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                like I2C_CheckEvent() function.
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - Limitations
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - User may need to define his own events.
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - Same remark concerning the error management is applicable for this 
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function if user decides to check only regular communication flags 
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                (and ignores error flags).
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      3. Flag-based state monitoring (Using the function I2C_GetFlagStatus())
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -----------------------------------------------------------------------
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       Using the function I2C_GetFlagStatus() which simply returns the status of 
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       one single flag (ie. I2C_FLAG_RXNE ...). 
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - When to use
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - This function could be used for specific applications or in debug 
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                phase.
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - It is suitable when only one flag checking is needed (most I2C 
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                events are monitored through multiple flags).
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - Limitations: 
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - When calling this function, the Status register is accessed. 
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                Some flags are cleared when the status register is accessed. 
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                So checking the status of one Flag, may clear other ones.
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - Function may need to be called twice or more in order to monitor 
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                one single event.
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    For detailed description of Events, please refer to section I2C_Events in 
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    stm32f4xx_i2c.h file.
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****        
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Reads the specified I2C register and returns its value.
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Register: specifies the register to read.
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR1:  CR1 register.
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR2:   CR2 register.
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR1:  OAR1 register.
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR2:  OAR2 register.
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_DR:    DR register.
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR1:   SR1 register.
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR2:   SR2 register.
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CCR:   CCR register.
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_TRISE: TRISE register.
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the read register.
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1597              		.loc 1 1006 0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 16
 1600              		@ frame_needed = 1, uses_anonymous_args = 0
 1601              		@ link register save eliminated.
 1602 0000 80B4     		push	{r7}
 1603              	.LCFI75:
 1604              		.cfi_def_cfa_offset 4
 1605              		.cfi_offset 7, -4
 1606 0002 85B0     		sub	sp, sp, #20
 1607              	.LCFI76:
 1608              		.cfi_def_cfa_offset 24
 1609 0004 00AF     		add	r7, sp, #0
 1610              	.LCFI77:
 1611              		.cfi_def_cfa_register 7
 1612 0006 7860     		str	r0, [r7, #4]
 1613 0008 0B46     		mov	r3, r1
 1614 000a FB70     		strb	r3, [r7, #3]
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
 1615              		.loc 1 1007 0
 1616 000c 4FF00003 		mov	r3, #0
 1617 0010 FB60     		str	r3, [r7, #12]
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp = (uint32_t) I2Cx;
 1618              		.loc 1 1013 0
 1619 0012 7B68     		ldr	r3, [r7, #4]
 1620 0014 FB60     		str	r3, [r7, #12]
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp += I2C_Register;
 1621              		.loc 1 1014 0
 1622 0016 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1623 0018 FB68     		ldr	r3, [r7, #12]
 1624 001a D318     		adds	r3, r2, r3
 1625 001c FB60     		str	r3, [r7, #12]
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected register value */
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (*(__IO uint16_t *) tmp);
 1626              		.loc 1 1017 0
 1627 001e FB68     		ldr	r3, [r7, #12]
 1628 0020 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1629 0022 9BB2     		uxth	r3, r3
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1630              		.loc 1 1018 0
 1631 0024 1846     		mov	r0, r3
 1632 0026 07F11407 		add	r7, r7, #20
 1633 002a BD46     		mov	sp, r7
 1634 002c 80BC     		pop	{r7}
 1635 002e 7047     		bx	lr
 1636              		.cfi_endproc
 1637              	.LFE135:
 1639              		.section	.text.I2C_ITConfig,"ax",%progbits
 1640              		.align	2
 1641              		.global	I2C_ITConfig
 1642              		.thumb
 1643              		.thumb_func
 1645              	I2C_ITConfig:
 1646              	.LFB136:
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C interrupts.
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the I2C interrupts sources to be enabled or disabled. 
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BUF: Buffer interrupt mask
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_EVT: Event interrupt mask
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ERR: Error interrupt mask
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the specified I2C interrupts.
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1647              		.loc 1 1033 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 8
 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651              		@ link register save eliminated.
 1652 0000 80B4     		push	{r7}
 1653              	.LCFI78:
 1654              		.cfi_def_cfa_offset 4
 1655              		.cfi_offset 7, -4
 1656 0002 83B0     		sub	sp, sp, #12
 1657              	.LCFI79:
 1658              		.cfi_def_cfa_offset 16
 1659 0004 00AF     		add	r7, sp, #0
 1660              	.LCFI80:
 1661              		.cfi_def_cfa_register 7
 1662 0006 7860     		str	r0, [r7, #4]
 1663 0008 1346     		mov	r3, r2
 1664 000a 0A46     		mov	r2, r1	@ movhi
 1665 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1666 000e 7B70     		strb	r3, [r7, #1]
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CONFIG_IT(I2C_IT));
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1667              		.loc 1 1039 0
 1668 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1669 0012 002B     		cmp	r3, #0
 1670 0014 08D0     		beq	.L73
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C interrupts */
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_IT;
 1671              		.loc 1 1042 0
 1672 0016 7B68     		ldr	r3, [r7, #4]
 1673 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1674 001a 9AB2     		uxth	r2, r3
 1675 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1676 001e 1343     		orrs	r3, r3, r2
 1677 0020 9AB2     		uxth	r2, r3
 1678 0022 7B68     		ldr	r3, [r7, #4]
 1679 0024 9A80     		strh	r2, [r3, #4]	@ movhi
 1680 0026 0AE0     		b	.L72
 1681              	.L73:
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C interrupts */
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~I2C_IT;
 1682              		.loc 1 1047 0
 1683 0028 7B68     		ldr	r3, [r7, #4]
 1684 002a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1685 002c 9AB2     		uxth	r2, r3
 1686 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1687 0030 6FEA0303 		mvn	r3, r3
 1688 0034 9BB2     		uxth	r3, r3
 1689 0036 1340     		ands	r3, r3, r2
 1690 0038 9AB2     		uxth	r2, r3
 1691 003a 7B68     		ldr	r3, [r7, #4]
 1692 003c 9A80     		strh	r2, [r3, #4]	@ movhi
 1693              	.L72:
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1694              		.loc 1 1049 0
 1695 003e 07F10C07 		add	r7, r7, #12
 1696 0042 BD46     		mov	sp, r7
 1697 0044 80BC     		pop	{r7}
 1698 0046 7047     		bx	lr
 1699              		.cfi_endproc
 1700              	.LFE136:
 1702              		.section	.text.I2C_CheckEvent,"ax",%progbits
 1703              		.align	2
 1704              		.global	I2C_CheckEvent
 1705              		.thumb
 1706              		.thumb_func
 1708              	I2C_CheckEvent:
 1709              	.LFB137:
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           1. Basic state monitoring                    
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the last I2Cx Event is equal to the one passed
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         as parameter.
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_EVENT: specifies the event to be checked. 
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED: EV1
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED: EV1
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED: EV1
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED: EV1
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED: EV1
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_RECEIVED: EV2
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF): EV2
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL): EV2
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_TRANSMITTED: EV3
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF): EV3
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL): EV3
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_ACK_FAILURE: EV3_2
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_STOP_DETECTED: EV4
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_SELECT: EV5
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED: EV6     
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED: EV6
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_RECEIVED: EV7
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTING: EV8
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTED: EV8_2
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_ADDRESS10: EV9
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval An ErrorStatus enumeration value:
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - SUCCESS: Last event is equal to the I2C_EVENT
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - ERROR: Last event is different from the I2C_EVENT
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1710              		.loc 1 1092 0
 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 24
 1713              		@ frame_needed = 1, uses_anonymous_args = 0
 1714              		@ link register save eliminated.
 1715 0000 80B4     		push	{r7}
 1716              	.LCFI81:
 1717              		.cfi_def_cfa_offset 4
 1718              		.cfi_offset 7, -4
 1719 0002 87B0     		sub	sp, sp, #28
 1720              	.LCFI82:
 1721              		.cfi_def_cfa_offset 32
 1722 0004 00AF     		add	r7, sp, #0
 1723              	.LCFI83:
 1724              		.cfi_def_cfa_register 7
 1725 0006 7860     		str	r0, [r7, #4]
 1726 0008 3960     		str	r1, [r7, #0]
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 1727              		.loc 1 1093 0
 1728 000a 4FF00003 		mov	r3, #0
 1729 000e 3B61     		str	r3, [r7, #16]
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 1730              		.loc 1 1094 0
 1731 0010 4FF00003 		mov	r3, #0
 1732 0014 FB60     		str	r3, [r7, #12]
 1733 0016 4FF00003 		mov	r3, #0
 1734 001a BB60     		str	r3, [r7, #8]
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ErrorStatus status = ERROR;
 1735              		.loc 1 1095 0
 1736 001c 4FF00003 		mov	r3, #0
 1737 0020 FB75     		strb	r3, [r7, #23]
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_EVENT(I2C_EVENT));
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1738              		.loc 1 1102 0
 1739 0022 7B68     		ldr	r3, [r7, #4]
 1740 0024 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1741 0026 9BB2     		uxth	r3, r3
 1742 0028 FB60     		str	r3, [r7, #12]
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1743              		.loc 1 1103 0
 1744 002a 7B68     		ldr	r3, [r7, #4]
 1745 002c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1746 002e 9BB2     		uxth	r3, r3
 1747 0030 BB60     		str	r3, [r7, #8]
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 1748              		.loc 1 1104 0
 1749 0032 BB68     		ldr	r3, [r7, #8]
 1750 0034 4FEA0343 		lsl	r3, r3, #16
 1751 0038 BB60     		str	r3, [r7, #8]
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1752              		.loc 1 1107 0
 1753 003a FA68     		ldr	r2, [r7, #12]
 1754 003c BB68     		ldr	r3, [r7, #8]
 1755 003e 1343     		orrs	r3, r3, r2
 1756 0040 23F07F43 		bic	r3, r3, #-16777216
 1757 0044 3B61     		str	r3, [r7, #16]
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check whether the last event contains the I2C_EVENT */
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if ((lastevent & I2C_EVENT) == I2C_EVENT)
 1758              		.loc 1 1110 0
 1759 0046 3A69     		ldr	r2, [r7, #16]
 1760 0048 3B68     		ldr	r3, [r7, #0]
 1761 004a 1A40     		ands	r2, r2, r3
 1762 004c 3B68     		ldr	r3, [r7, #0]
 1763 004e 9A42     		cmp	r2, r3
 1764 0050 03D1     		bne	.L76
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* SUCCESS: last event is equal to I2C_EVENT */
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = SUCCESS;
 1765              		.loc 1 1113 0
 1766 0052 4FF00103 		mov	r3, #1
 1767 0056 FB75     		strb	r3, [r7, #23]
 1768 0058 02E0     		b	.L77
 1769              	.L76:
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* ERROR: last event is different from I2C_EVENT */
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = ERROR;
 1770              		.loc 1 1118 0
 1771 005a 4FF00003 		mov	r3, #0
 1772 005e FB75     		strb	r3, [r7, #23]
 1773              	.L77:
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return status;
 1774              		.loc 1 1121 0
 1775 0060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1776              		.loc 1 1122 0
 1777 0062 1846     		mov	r0, r3
 1778 0064 07F11C07 		add	r7, r7, #28
 1779 0068 BD46     		mov	sp, r7
 1780 006a 80BC     		pop	{r7}
 1781 006c 7047     		bx	lr
 1782              		.cfi_endproc
 1783              	.LFE137:
 1785 006e 00BF     		.section	.text.I2C_GetLastEvent,"ax",%progbits
 1786              		.align	2
 1787              		.global	I2C_GetLastEvent
 1788              		.thumb
 1789              		.thumb_func
 1791              	I2C_GetLastEvent:
 1792              	.LFB138:
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           2. Advanced state monitoring                   
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the last I2Cx Event.
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The last event
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx)
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1793              		.loc 1 1140 0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 24
 1796              		@ frame_needed = 1, uses_anonymous_args = 0
 1797              		@ link register save eliminated.
 1798 0000 80B4     		push	{r7}
 1799              	.LCFI84:
 1800              		.cfi_def_cfa_offset 4
 1801              		.cfi_offset 7, -4
 1802 0002 87B0     		sub	sp, sp, #28
 1803              	.LCFI85:
 1804              		.cfi_def_cfa_offset 32
 1805 0004 00AF     		add	r7, sp, #0
 1806              	.LCFI86:
 1807              		.cfi_def_cfa_register 7
 1808 0006 7860     		str	r0, [r7, #4]
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 1809              		.loc 1 1141 0
 1810 0008 4FF00003 		mov	r3, #0
 1811 000c 7B61     		str	r3, [r7, #20]
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 1812              		.loc 1 1142 0
 1813 000e 4FF00003 		mov	r3, #0
 1814 0012 3B61     		str	r3, [r7, #16]
 1815 0014 4FF00003 		mov	r3, #0
 1816 0018 FB60     		str	r3, [r7, #12]
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1817              		.loc 1 1148 0
 1818 001a 7B68     		ldr	r3, [r7, #4]
 1819 001c 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1820 001e 9BB2     		uxth	r3, r3
 1821 0020 3B61     		str	r3, [r7, #16]
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1822              		.loc 1 1149 0
 1823 0022 7B68     		ldr	r3, [r7, #4]
 1824 0024 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1825 0026 9BB2     		uxth	r3, r3
 1826 0028 FB60     		str	r3, [r7, #12]
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 1827              		.loc 1 1150 0
 1828 002a FB68     		ldr	r3, [r7, #12]
 1829 002c 4FEA0343 		lsl	r3, r3, #16
 1830 0030 FB60     		str	r3, [r7, #12]
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1831              		.loc 1 1153 0
 1832 0032 3A69     		ldr	r2, [r7, #16]
 1833 0034 FB68     		ldr	r3, [r7, #12]
 1834 0036 1343     		orrs	r3, r3, r2
 1835 0038 23F07F43 		bic	r3, r3, #-16777216
 1836 003c 7B61     		str	r3, [r7, #20]
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return lastevent;
 1837              		.loc 1 1156 0
 1838 003e 7B69     		ldr	r3, [r7, #20]
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1839              		.loc 1 1157 0
 1840 0040 1846     		mov	r0, r3
 1841 0042 07F11C07 		add	r7, r7, #28
 1842 0046 BD46     		mov	sp, r7
 1843 0048 80BC     		pop	{r7}
 1844 004a 7047     		bx	lr
 1845              		.cfi_endproc
 1846              	.LFE138:
 1848              		.section	.text.I2C_GetFlagStatus,"ax",%progbits
 1849              		.align	2
 1850              		.global	I2C_GetFlagStatus
 1851              		.thumb
 1852              		.thumb_func
 1854              	I2C_GetFlagStatus:
 1855              	.LFB139:
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           3. Flag-based state monitoring                   
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C flag is set or not.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to check. 
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_DUALF: Dual flag (Slave mode)
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBHOST: SMBus host header (Slave mode)
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBDEFAULT: SMBus default header (Slave mode)
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_GENCALL: General call header flag (Slave mode)
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TRA: Transmitter/Receiver flag
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BUSY: Bus busy flag
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_MSL: Master/Slave flag
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TXE: Data register empty flag (Transmitter)
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_RXNE: Data register not empty (Receiver) flag
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_STOPF: Stop detection flag (Slave mode)
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADD10: 10-bit header sent flag (Master mode)
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BTF: Byte transfer finished flag
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address sent flag (Master mode) "ADSL"
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                Address matched flag (Slave mode)"ENDAD"
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SB: Start bit flag (Master mode)
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1856              		.loc 1 1195 0
 1857              		.cfi_startproc
 1858              		@ args = 0, pretend = 0, frame = 24
 1859              		@ frame_needed = 1, uses_anonymous_args = 0
 1860              		@ link register save eliminated.
 1861 0000 80B4     		push	{r7}
 1862              	.LCFI87:
 1863              		.cfi_def_cfa_offset 4
 1864              		.cfi_offset 7, -4
 1865 0002 87B0     		sub	sp, sp, #28
 1866              	.LCFI88:
 1867              		.cfi_def_cfa_offset 32
 1868 0004 00AF     		add	r7, sp, #0
 1869              	.LCFI89:
 1870              		.cfi_def_cfa_register 7
 1871 0006 7860     		str	r0, [r7, #4]
 1872 0008 3960     		str	r1, [r7, #0]
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
 1873              		.loc 1 1196 0
 1874 000a 4FF00003 		mov	r3, #0
 1875 000e FB75     		strb	r3, [r7, #23]
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t i2creg = 0, i2cxbase = 0;
 1876              		.loc 1 1197 0
 1877 0010 4FF00003 		mov	r3, #0
 1878 0014 3B61     		str	r3, [r7, #16]
 1879 0016 4FF00003 		mov	r3, #0
 1880 001a FB60     		str	r3, [r7, #12]
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_FLAG(I2C_FLAG));
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx peripheral base address */
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2cxbase = (uint32_t)I2Cx;
 1881              		.loc 1 1204 0
 1882 001c 7B68     		ldr	r3, [r7, #4]
 1883 001e FB60     		str	r3, [r7, #12]
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read flag register index */
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2creg = I2C_FLAG >> 28;
 1884              		.loc 1 1207 0
 1885 0020 3B68     		ldr	r3, [r7, #0]
 1886 0022 4FEA1373 		lsr	r3, r3, #28
 1887 0026 3B61     		str	r3, [r7, #16]
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_FLAG &= FLAG_MASK;
 1888              		.loc 1 1210 0
 1889 0028 3B68     		ldr	r3, [r7, #0]
 1890 002a 23F07F43 		bic	r3, r3, #-16777216
 1891 002e 3B60     		str	r3, [r7, #0]
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(i2creg != 0)
 1892              		.loc 1 1212 0
 1893 0030 3B69     		ldr	r3, [r7, #16]
 1894 0032 002B     		cmp	r3, #0
 1895 0034 04D0     		beq	.L80
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR1 register address */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x14;
 1896              		.loc 1 1215 0
 1897 0036 FB68     		ldr	r3, [r7, #12]
 1898 0038 03F11403 		add	r3, r3, #20
 1899 003c FB60     		str	r3, [r7, #12]
 1900 003e 07E0     		b	.L81
 1901              	.L80:
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Flag in I2Cx SR2 Register */
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2C_FLAG = (uint32_t)(I2C_FLAG >> 16);
 1902              		.loc 1 1220 0
 1903 0040 3B68     		ldr	r3, [r7, #0]
 1904 0042 4FEA1343 		lsr	r3, r3, #16
 1905 0046 3B60     		str	r3, [r7, #0]
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x18;
 1906              		.loc 1 1222 0
 1907 0048 FB68     		ldr	r3, [r7, #12]
 1908 004a 03F11803 		add	r3, r3, #24
 1909 004e FB60     		str	r3, [r7, #12]
 1910              	.L81:
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(((*(__IO uint32_t *)i2cxbase) & I2C_FLAG) != (uint32_t)RESET)
 1911              		.loc 1 1225 0
 1912 0050 FB68     		ldr	r3, [r7, #12]
 1913 0052 1A68     		ldr	r2, [r3, #0]
 1914 0054 3B68     		ldr	r3, [r7, #0]
 1915 0056 1340     		ands	r3, r3, r2
 1916 0058 002B     		cmp	r3, #0
 1917 005a 03D0     		beq	.L82
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is set */
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
 1918              		.loc 1 1228 0
 1919 005c 4FF00103 		mov	r3, #1
 1920 0060 FB75     		strb	r3, [r7, #23]
 1921 0062 02E0     		b	.L83
 1922              	.L82:
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is reset */
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
 1923              		.loc 1 1233 0
 1924 0064 4FF00003 		mov	r3, #0
 1925 0068 FB75     		strb	r3, [r7, #23]
 1926              	.L83:
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_FLAG status */
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
 1927              		.loc 1 1237 0
 1928 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1929              		.loc 1 1238 0
 1930 006c 1846     		mov	r0, r3
 1931 006e 07F11C07 		add	r7, r7, #28
 1932 0072 BD46     		mov	sp, r7
 1933 0074 80BC     		pop	{r7}
 1934 0076 7047     		bx	lr
 1935              		.cfi_endproc
 1936              	.LFE139:
 1938              		.section	.text.I2C_ClearFlag,"ax",%progbits
 1939              		.align	2
 1940              		.global	I2C_ClearFlag
 1941              		.thumb
 1942              		.thumb_func
 1944              	I2C_ClearFlag:
 1945              	.LFB140:
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's pending flags.
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to clear. 
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *   
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetFlagStatus()) followed by a write operation 
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetFlagStatus()) followed by writing the 
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          second byte of the address in DR register.
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetFlagStatus()) followed by a 
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetFlagStatus()) followed by a read operation to 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared software sequence: a read operation to I2C_SR1
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_GetFlagStatus()) followed by a write operation to I2C_DR
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_SendData()).
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1946              		.loc 1 1272 0
 1947              		.cfi_startproc
 1948              		@ args = 0, pretend = 0, frame = 16
 1949              		@ frame_needed = 1, uses_anonymous_args = 0
 1950              		@ link register save eliminated.
 1951 0000 80B4     		push	{r7}
 1952              	.LCFI90:
 1953              		.cfi_def_cfa_offset 4
 1954              		.cfi_offset 7, -4
 1955 0002 85B0     		sub	sp, sp, #20
 1956              	.LCFI91:
 1957              		.cfi_def_cfa_offset 24
 1958 0004 00AF     		add	r7, sp, #0
 1959              	.LCFI92:
 1960              		.cfi_def_cfa_register 7
 1961 0006 7860     		str	r0, [r7, #4]
 1962 0008 3960     		str	r1, [r7, #0]
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 1963              		.loc 1 1273 0
 1964 000a 4FF00003 		mov	r3, #0
 1965 000e FB60     		str	r3, [r7, #12]
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_FLAG(I2C_FLAG));
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_FLAG & FLAG_MASK;
 1966              		.loc 1 1278 0
 1967 0010 3B68     		ldr	r3, [r7, #0]
 1968 0012 23F07F43 		bic	r3, r3, #-16777216
 1969 0016 FB60     		str	r3, [r7, #12]
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 1970              		.loc 1 1280 0
 1971 0018 FB68     		ldr	r3, [r7, #12]
 1972 001a 9BB2     		uxth	r3, r3
 1973 001c 6FEA0303 		mvn	r3, r3
 1974 0020 9AB2     		uxth	r2, r3
 1975 0022 7B68     		ldr	r3, [r7, #4]
 1976 0024 9A82     		strh	r2, [r3, #20]	@ movhi
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1977              		.loc 1 1281 0
 1978 0026 07F11407 		add	r7, r7, #20
 1979 002a BD46     		mov	sp, r7
 1980 002c 80BC     		pop	{r7}
 1981 002e 7047     		bx	lr
 1982              		.cfi_endproc
 1983              	.LFE140:
 1985              		.section	.text.I2C_GetITStatus,"ax",%progbits
 1986              		.align	2
 1987              		.global	I2C_GetITStatus
 1988              		.thumb
 1989              		.thumb_func
 1991              	I2C_GetITStatus:
 1992              	.LFB141:
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C interrupt has occurred or not.
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt source to check. 
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert flag
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error flag
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception flag
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun flag (Slave mode)
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure flag
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost flag (Master mode)
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error flag
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TXE: Data register empty flag (Transmitter)
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_RXNE: Data register not empty (Receiver) flag
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_STOPF: Stop detection flag (Slave mode)
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADD10: 10-bit header sent flag (Master mode)
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BTF: Byte transfer finished flag
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADDR: Address sent flag (Master mode) "ADSL"
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                              Address matched flag (Slave mode)"ENDAD"
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SB: Start bit flag (Master mode)
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1993              		.loc 1 1306 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 16
 1996              		@ frame_needed = 1, uses_anonymous_args = 0
 1997              		@ link register save eliminated.
 1998 0000 80B4     		push	{r7}
 1999              	.LCFI93:
 2000              		.cfi_def_cfa_offset 4
 2001              		.cfi_offset 7, -4
 2002 0002 85B0     		sub	sp, sp, #20
 2003              	.LCFI94:
 2004              		.cfi_def_cfa_offset 24
 2005 0004 00AF     		add	r7, sp, #0
 2006              	.LCFI95:
 2007              		.cfi_def_cfa_register 7
 2008 0006 7860     		str	r0, [r7, #4]
 2009 0008 3960     		str	r1, [r7, #0]
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ITStatus bitstatus = RESET;
 2010              		.loc 1 1307 0
 2011 000a 4FF00003 		mov	r3, #0
 2012 000e FB73     		strb	r3, [r7, #15]
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t enablestatus = 0;
 2013              		.loc 1 1308 0
 2014 0010 4FF00003 		mov	r3, #0
 2015 0014 BB60     		str	r3, [r7, #8]
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_IT(I2C_IT));
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check if the interrupt source is enabled or not */
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 2016              		.loc 1 1315 0
 2017 0016 3B68     		ldr	r3, [r7, #0]
 2018 0018 03F0E063 		and	r3, r3, #117440512
 2019 001c 4FEA1342 		lsr	r2, r3, #16
 2020 0020 7B68     		ldr	r3, [r7, #4]
 2021 0022 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2022 0024 9BB2     		uxth	r3, r3
 2023 0026 1340     		ands	r3, r3, r2
 2024 0028 BB60     		str	r3, [r7, #8]
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_IT &= FLAG_MASK;
 2025              		.loc 1 1318 0
 2026 002a 3B68     		ldr	r3, [r7, #0]
 2027 002c 23F07F43 		bic	r3, r3, #-16777216
 2028 0030 3B60     		str	r3, [r7, #0]
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the status of the specified I2C flag */
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (((I2Cx->SR1 & I2C_IT) != (uint32_t)RESET) && enablestatus)
 2029              		.loc 1 1321 0
 2030 0032 7B68     		ldr	r3, [r7, #4]
 2031 0034 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 2032 0036 9BB2     		uxth	r3, r3
 2033 0038 1A46     		mov	r2, r3
 2034 003a 3B68     		ldr	r3, [r7, #0]
 2035 003c 1340     		ands	r3, r3, r2
 2036 003e 002B     		cmp	r3, #0
 2037 0040 06D0     		beq	.L86
 2038              		.loc 1 1321 0 is_stmt 0 discriminator 1
 2039 0042 BB68     		ldr	r3, [r7, #8]
 2040 0044 002B     		cmp	r3, #0
 2041 0046 03D0     		beq	.L86
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is set */
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
 2042              		.loc 1 1324 0 is_stmt 1
 2043 0048 4FF00103 		mov	r3, #1
 2044 004c FB73     		strb	r3, [r7, #15]
 2045 004e 02E0     		b	.L87
 2046              	.L86:
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is reset */
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
 2047              		.loc 1 1329 0
 2048 0050 4FF00003 		mov	r3, #0
 2049 0054 FB73     		strb	r3, [r7, #15]
 2050              	.L87:
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_IT status */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
 2051              		.loc 1 1332 0
 2052 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2053              		.loc 1 1333 0
 2054 0058 1846     		mov	r0, r3
 2055 005a 07F11407 		add	r7, r7, #20
 2056 005e BD46     		mov	sp, r7
 2057 0060 80BC     		pop	{r7}
 2058 0062 7047     		bx	lr
 2059              		.cfi_endproc
 2060              	.LFE141:
 2062              		.section	.text.I2C_ClearITPendingBit,"ax",%progbits
 2063              		.align	2
 2064              		.global	I2C_ClearITPendingBit
 2065              		.thumb
 2066              		.thumb_func
 2068              	I2C_ClearITPendingBit:
 2069              	.LFB142:
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's interrupt pending bits.
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt pending bit to clear. 
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert interrupt
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error interrupt
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception  interrupt
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun interrupt (Slave mode)
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure interrupt
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost interrupt (Master mode)
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error interrupt
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetITStatus()) followed by writing the second 
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          byte of the address in I2C_DR register.
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetITStatus()) followed by a 
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a read operation to 
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared by software sequence: a read operation to 
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_DR register (I2C_SendData()).
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2070              		.loc 1 1366 0
 2071              		.cfi_startproc
 2072              		@ args = 0, pretend = 0, frame = 16
 2073              		@ frame_needed = 1, uses_anonymous_args = 0
 2074              		@ link register save eliminated.
 2075 0000 80B4     		push	{r7}
 2076              	.LCFI96:
 2077              		.cfi_def_cfa_offset 4
 2078              		.cfi_offset 7, -4
 2079 0002 85B0     		sub	sp, sp, #20
 2080              	.LCFI97:
 2081              		.cfi_def_cfa_offset 24
 2082 0004 00AF     		add	r7, sp, #0
 2083              	.LCFI98:
 2084              		.cfi_def_cfa_register 7
 2085 0006 7860     		str	r0, [r7, #4]
 2086 0008 3960     		str	r1, [r7, #0]
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 2087              		.loc 1 1367 0
 2088 000a 4FF00003 		mov	r3, #0
 2089 000e FB60     		str	r3, [r7, #12]
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_IT(I2C_IT));
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_IT & FLAG_MASK;
 2090              		.loc 1 1373 0
 2091 0010 3B68     		ldr	r3, [r7, #0]
 2092 0012 23F07F43 		bic	r3, r3, #-16777216
 2093 0016 FB60     		str	r3, [r7, #12]
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 2094              		.loc 1 1376 0
 2095 0018 FB68     		ldr	r3, [r7, #12]
 2096 001a 9BB2     		uxth	r3, r3
 2097 001c 6FEA0303 		mvn	r3, r3
 2098 0020 9AB2     		uxth	r2, r3
 2099 0022 7B68     		ldr	r3, [r7, #4]
 2100 0024 9A82     		strh	r2, [r3, #20]	@ movhi
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2101              		.loc 1 1377 0
 2102 0026 07F11407 		add	r7, r7, #20
 2103 002a BD46     		mov	sp, r7
 2104 002c 80BC     		pop	{r7}
 2105 002e 7047     		bx	lr
 2106              		.cfi_endproc
 2107              	.LFE142:
 2109              		.text
 2110              	.Letext0:
 2111              		.file 2 "/usr/local/csl/arm-2012.03/bin/../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/i
 2112              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 2113              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 2114              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
 2115              		.file 6 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_i2c.c
     /tmp/ccbUdaYV.s:20     .text.I2C_DeInit:00000000 $t
     /tmp/ccbUdaYV.s:25     .text.I2C_DeInit:00000000 I2C_DeInit
     /tmp/ccbUdaYV.s:99     .text.I2C_Init:00000000 $t
     /tmp/ccbUdaYV.s:104    .text.I2C_Init:00000000 I2C_Init
     /tmp/ccbUdaYV.s:332    .text.I2C_StructInit:00000000 $t
     /tmp/ccbUdaYV.s:337    .text.I2C_StructInit:00000000 I2C_StructInit
     /tmp/ccbUdaYV.s:388    .text.I2C_Cmd:00000000 $t
     /tmp/ccbUdaYV.s:393    .text.I2C_Cmd:00000000 I2C_Cmd
     /tmp/ccbUdaYV.s:445    .text.I2C_GenerateSTART:00000000 $t
     /tmp/ccbUdaYV.s:450    .text.I2C_GenerateSTART:00000000 I2C_GenerateSTART
     /tmp/ccbUdaYV.s:502    .text.I2C_GenerateSTOP:00000000 $t
     /tmp/ccbUdaYV.s:507    .text.I2C_GenerateSTOP:00000000 I2C_GenerateSTOP
     /tmp/ccbUdaYV.s:559    .text.I2C_Send7bitAddress:00000000 $t
     /tmp/ccbUdaYV.s:564    .text.I2C_Send7bitAddress:00000000 I2C_Send7bitAddress
     /tmp/ccbUdaYV.s:615    .text.I2C_AcknowledgeConfig:00000000 $t
     /tmp/ccbUdaYV.s:620    .text.I2C_AcknowledgeConfig:00000000 I2C_AcknowledgeConfig
     /tmp/ccbUdaYV.s:672    .text.I2C_OwnAddress2Config:00000000 $t
     /tmp/ccbUdaYV.s:677    .text.I2C_OwnAddress2Config:00000000 I2C_OwnAddress2Config
     /tmp/ccbUdaYV.s:730    .text.I2C_DualAddressCmd:00000000 $t
     /tmp/ccbUdaYV.s:735    .text.I2C_DualAddressCmd:00000000 I2C_DualAddressCmd
     /tmp/ccbUdaYV.s:787    .text.I2C_GeneralCallCmd:00000000 $t
     /tmp/ccbUdaYV.s:792    .text.I2C_GeneralCallCmd:00000000 I2C_GeneralCallCmd
     /tmp/ccbUdaYV.s:844    .text.I2C_SoftwareResetCmd:00000000 $t
     /tmp/ccbUdaYV.s:849    .text.I2C_SoftwareResetCmd:00000000 I2C_SoftwareResetCmd
     /tmp/ccbUdaYV.s:903    .text.I2C_StretchClockCmd:00000000 $t
     /tmp/ccbUdaYV.s:908    .text.I2C_StretchClockCmd:00000000 I2C_StretchClockCmd
     /tmp/ccbUdaYV.s:960    .text.I2C_FastModeDutyCycleConfig:00000000 $t
     /tmp/ccbUdaYV.s:965    .text.I2C_FastModeDutyCycleConfig:00000000 I2C_FastModeDutyCycleConfig
     /tmp/ccbUdaYV.s:1017   .text.I2C_NACKPositionConfig:00000000 $t
     /tmp/ccbUdaYV.s:1022   .text.I2C_NACKPositionConfig:00000000 I2C_NACKPositionConfig
     /tmp/ccbUdaYV.s:1074   .text.I2C_SMBusAlertConfig:00000000 $t
     /tmp/ccbUdaYV.s:1079   .text.I2C_SMBusAlertConfig:00000000 I2C_SMBusAlertConfig
     /tmp/ccbUdaYV.s:1131   .text.I2C_ARPCmd:00000000 $t
     /tmp/ccbUdaYV.s:1136   .text.I2C_ARPCmd:00000000 I2C_ARPCmd
     /tmp/ccbUdaYV.s:1188   .text.I2C_SendData:00000000 $t
     /tmp/ccbUdaYV.s:1193   .text.I2C_SendData:00000000 I2C_SendData
     /tmp/ccbUdaYV.s:1227   .text.I2C_ReceiveData:00000000 $t
     /tmp/ccbUdaYV.s:1232   .text.I2C_ReceiveData:00000000 I2C_ReceiveData
     /tmp/ccbUdaYV.s:1265   .text.I2C_TransmitPEC:00000000 $t
     /tmp/ccbUdaYV.s:1270   .text.I2C_TransmitPEC:00000000 I2C_TransmitPEC
     /tmp/ccbUdaYV.s:1322   .text.I2C_PECPositionConfig:00000000 $t
     /tmp/ccbUdaYV.s:1327   .text.I2C_PECPositionConfig:00000000 I2C_PECPositionConfig
     /tmp/ccbUdaYV.s:1379   .text.I2C_CalculatePEC:00000000 $t
     /tmp/ccbUdaYV.s:1384   .text.I2C_CalculatePEC:00000000 I2C_CalculatePEC
     /tmp/ccbUdaYV.s:1436   .text.I2C_GetPEC:00000000 $t
     /tmp/ccbUdaYV.s:1441   .text.I2C_GetPEC:00000000 I2C_GetPEC
     /tmp/ccbUdaYV.s:1476   .text.I2C_DMACmd:00000000 $t
     /tmp/ccbUdaYV.s:1481   .text.I2C_DMACmd:00000000 I2C_DMACmd
     /tmp/ccbUdaYV.s:1533   .text.I2C_DMALastTransferCmd:00000000 $t
     /tmp/ccbUdaYV.s:1538   .text.I2C_DMALastTransferCmd:00000000 I2C_DMALastTransferCmd
     /tmp/ccbUdaYV.s:1590   .text.I2C_ReadRegister:00000000 $t
     /tmp/ccbUdaYV.s:1595   .text.I2C_ReadRegister:00000000 I2C_ReadRegister
     /tmp/ccbUdaYV.s:1640   .text.I2C_ITConfig:00000000 $t
     /tmp/ccbUdaYV.s:1645   .text.I2C_ITConfig:00000000 I2C_ITConfig
     /tmp/ccbUdaYV.s:1703   .text.I2C_CheckEvent:00000000 $t
     /tmp/ccbUdaYV.s:1708   .text.I2C_CheckEvent:00000000 I2C_CheckEvent
     /tmp/ccbUdaYV.s:1786   .text.I2C_GetLastEvent:00000000 $t
     /tmp/ccbUdaYV.s:1791   .text.I2C_GetLastEvent:00000000 I2C_GetLastEvent
     /tmp/ccbUdaYV.s:1849   .text.I2C_GetFlagStatus:00000000 $t
     /tmp/ccbUdaYV.s:1854   .text.I2C_GetFlagStatus:00000000 I2C_GetFlagStatus
     /tmp/ccbUdaYV.s:1939   .text.I2C_ClearFlag:00000000 $t
     /tmp/ccbUdaYV.s:1944   .text.I2C_ClearFlag:00000000 I2C_ClearFlag
     /tmp/ccbUdaYV.s:1986   .text.I2C_GetITStatus:00000000 $t
     /tmp/ccbUdaYV.s:1991   .text.I2C_GetITStatus:00000000 I2C_GetITStatus
     /tmp/ccbUdaYV.s:2063   .text.I2C_ClearITPendingBit:00000000 $t
     /tmp/ccbUdaYV.s:2068   .text.I2C_ClearITPendingBit:00000000 I2C_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
