   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_cryp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CRYP_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	CRYP_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	CRYP_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @file    stm32f4xx_cryp.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          functionalities of the  Cryptographic processor (CRYP) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Initialization and Configuration functions
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Data treatment functions 
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Context swapping functions     
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - DMA interface function       
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Interrupts and flags management       
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @verbatim
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                               
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================      
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                                 How to use this driver
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          =================================================================== 
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          1. Enable the CRYP controller clock using 
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          2. Initialise the CRYP using CRYP_Init(), CRYP_KeyInit() and if 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             needed CRYP_IVInit(). 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          3. Flush the IN and OUT FIFOs by using CRYP_FIFOFlush() function.
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          4. Enable the CRYP controller using the CRYP_Cmd() function. 
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          5. If using DMA for Data input and output transfer, 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             Activate the needed DMA Requests using CRYP_DMACmd() function 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          6. If DMA is not used for data transfer, use CRYP_DataIn() and 
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_DataOut() functions to enter data to IN FIFO and get result
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             from OUT FIFO.
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          7. To control CRYP events you can use one of the following 
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              two methods:
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Check on CRYP flags using the CRYP_GetFlagStatus() function.  
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Use CRYP interrupts through the function CRYP_ITConfig() at 
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 initialization phase and CRYP_GetITStatus() function into 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 interrupt routines in processing phase.
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          8. Save and restore Cryptographic processor context using  
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_SaveContext() and CRYP_RestoreContext() functions.     
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                Procedure to perform an encryption or a decryption
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      Initialization
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      ===============  
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *     1. Initialize the peripheral using CRYP_Init(), CRYP_KeyInit() and 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        CRYP_IVInit functions:
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the key size (128-, 192- or 256-bit, in the AES only) 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Enter the symmetric key 
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the data type
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - In case of decryption in AES-ECB or AES-CBC, you must prepare 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          the key: configure the key preparation mode. Then Enable the CRYP 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          peripheral using CRYP_Cmd() function: the BUSY flag is set. 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          Wait until BUSY flag is reset : the key is prepared for decryption
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the algorithm and chaining (the DES/TDES in ECB/CBC, the 
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          AES in ECB/CBC/CTR) 
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the direction (encryption/decryption).
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Write the initialization vectors (in CBC or CTR modes only)
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Flush the IN and OUT FIFOs using the CRYP_FIFOFlush() function
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Basic Processing mode (polling mode) 
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================================  
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the cryptographic processor using CRYP_Cmd() function.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Write the first blocks in the input FIFO (2 to 8 words) using 
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_DataIn() function.
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. Repeat the following sequence until the complete message has been 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       processed:
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       a) Wait for flag CRYP_FLAG_OFNE occurs (using CRYP_GetFlagStatus() 
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function), then read the OUT-FIFO using CRYP_DataOut() function
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is empty)
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       b) Wait for flag CRYP_FLAG_IFNF occurs, (using CRYP_GetFlagStatus() 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function then write the IN FIFO using CRYP_DataIn() function 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is full)
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. At the end of the processing, CRYP_FLAG_BUSY flag will be reset and 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        both FIFOs are empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is 
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        reset). You can disable the peripheral using CRYP_Cmd() function.
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Interrupts Processing mode 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ===========================
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the data are transferred by the 
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    CPU during interrupts.
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the interrupts CRYP_IT_INI and CRYP_IT_OUTI using 
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_ITConfig() function.
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function.
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. In the CRYP_IT_INI interrupt handler : load the input message into the 
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       IN FIFO using CRYP_DataIn() function . You can load 2 or 4 words at a 
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       time, or load data until the IN FIFO is full. When the last word of
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the message has been entered into the IN FIFO, disable the CRYP_IT_INI 
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt (using CRYP_ITConfig() function).
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. In the CRYP_IT_OUTI interrupt handler : read the output message from 
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the OUT FIFO using CRYP_DataOut() function. You can read 1 block (2 or 
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       4 words) at a time or read data until the FIFO is empty.
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       When the last word has been read, INIM=0, BUSY=0 and both FIFOs are 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is reset). 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       You can disable the CRYP_IT_OUTI interrupt (using CRYP_ITConfig() 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       function) and you can disable the peripheral using CRYP_Cmd() function.
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    DMA Processing mode 
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the DMA is used to transfer the 
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    data from/to the memory.
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Configure the DMA controller to transfer the input data from the 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       memory using DMA_Init() function. 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       The transfer length is the length of the message. 
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       As message padding is not managed by the peripheral, the message 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       length must be an entire number of blocks. The data are transferred 
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       in burst mode. The burst length is 4 words in the AES and 2 or 4 
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       words in the DES/TDES. The DMA should be configured to set an 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt on transfer completion of the output data to indicate that 
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the processing is finished. 
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Refer to DMA peripheral driver for more details.  
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function. 
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Enable the DMA requests CRYP_DMAReq_DataIN and CRYP_DMAReq_DataOUT 
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       using CRYP_DMACmd() function.
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. All the transfers and processing are managed by the DMA and the 
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       cryptographic processor. The DMA transfer complete interrupt indicates 
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       that the processing is complete. Both FIFOs are normally empty and 
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_FLAG_BUSY flag is reset.
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @endverbatim
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @attention
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************  
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Includes ------------------------------------------------------------------*/
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_cryp.h"
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_rcc.h"
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP 
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief CRYP driver modules
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private typedef -----------------------------------------------------------*/
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private define ------------------------------------------------------------*/
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define FLAG_MASK     ((uint8_t)0x20)
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define MAX_TIMEOUT   ((uint16_t)0xFFFF)
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private macro -------------------------------------------------------------*/
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private variables ---------------------------------------------------------*/
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private function prototypes -----------------------------------------------*/
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private functions ---------------------------------------------------------*/
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Private_Functions
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group1 Initialization and Configuration functions
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    Initialization and Configuration functions 
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       Initialization and Configuration functions
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to 
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Initialize the cryptographic Processor using CRYP_Init() function 
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  Encrypt or Decrypt 
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  mode : TDES-ECB, TDES-CBC, 
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 DES-ECB, DES-CBC, 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 AES-ECB, AES-CBC, AES-CTR, AES-Key 
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - DataType :  32-bit data, 16-bit data, bit data or bit-string
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - Key Size (only in AES modes)
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Encrypt or Decrypt Key using CRYP_KeyInit() function 
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Initialization Vectors(IV) for CBC and CTR modes using 
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      CRYP_IVInit() function.  
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Flushes the IN and OUT FIFOs : using CRYP_FIFOFlush() function.                         
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Enable or disable the CRYP Processor using CRYP_Cmd() function 
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Deinitializes the CRYP peripheral registers to their default reset values
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DeInit(void)
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  28              		.loc 1 216 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 7, -8
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable CRYP reset state */
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, ENABLE);
  40              		.loc 1 218 0
  41 0004 4FF01000 		mov	r0, #16
  42 0008 4FF00101 		mov	r1, #1
  43 000c FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Release CRYP from reset state */
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, DISABLE);
  44              		.loc 1 221 0
  45 0010 4FF01000 		mov	r0, #16
  46 0014 4FF00001 		mov	r1, #0
  47 0018 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
  48              		.loc 1 222 0
  49 001c 80BD     		pop	{r7, pc}
  50              		.cfi_endproc
  51              	.LFE110:
  53 001e 00BF     		.section	.text.CRYP_Init,"ax",%progbits
  54              		.align	2
  55              		.global	CRYP_Init
  56              		.thumb
  57              		.thumb_func
  59              	CRYP_Init:
  60              	.LFB111:
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP peripheral according to the specified parameters
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         in the CRYP_InitStruct.
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP peripheral.
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  61              		.loc 1 232 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 8
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66 0000 80B4     		push	{r7}
  67              	.LCFI2:
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 83B0     		sub	sp, sp, #12
  71              	.LCFI3:
  72              		.cfi_def_cfa_offset 16
  73 0004 00AF     		add	r7, sp, #0
  74              	.LCFI4:
  75              		.cfi_def_cfa_register 7
  76 0006 7860     		str	r0, [r7, #4]
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select Algorithm mode*/  
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGOMODE;
  77              		.loc 1 239 0
  78 0008 4FF00003 		mov	r3, #0
  79 000c C5F20603 		movt	r3, 20486
  80 0010 4FF00002 		mov	r2, #0
  81 0014 C5F20602 		movt	r2, 20486
  82 0018 1268     		ldr	r2, [r2, #0]
  83 001a 22F03802 		bic	r2, r2, #56
  84 001e 1A60     		str	r2, [r3, #0]
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
  85              		.loc 1 240 0
  86 0020 4FF00003 		mov	r3, #0
  87 0024 C5F20603 		movt	r3, 20486
  88 0028 4FF00002 		mov	r2, #0
  89 002c C5F20602 		movt	r2, 20486
  90 0030 1168     		ldr	r1, [r2, #0]
  91 0032 7A68     		ldr	r2, [r7, #4]
  92 0034 5288     		ldrh	r2, [r2, #2]
  93 0036 0A43     		orrs	r2, r2, r1
  94 0038 1A60     		str	r2, [r3, #0]
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select dataType */ 
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_DATATYPE;
  95              		.loc 1 243 0
  96 003a 4FF00003 		mov	r3, #0
  97 003e C5F20603 		movt	r3, 20486
  98 0042 4FF00002 		mov	r2, #0
  99 0046 C5F20602 		movt	r2, 20486
 100 004a 1268     		ldr	r2, [r2, #0]
 101 004c 22F0C002 		bic	r2, r2, #192
 102 0050 1A60     		str	r2, [r3, #0]
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
 103              		.loc 1 244 0
 104 0052 4FF00003 		mov	r3, #0
 105 0056 C5F20603 		movt	r3, 20486
 106 005a 4FF00002 		mov	r2, #0
 107 005e C5F20602 		movt	r2, 20486
 108 0062 1168     		ldr	r1, [r2, #0]
 109 0064 7A68     		ldr	r2, [r7, #4]
 110 0066 9288     		ldrh	r2, [r2, #4]
 111 0068 0A43     		orrs	r2, r2, r1
 112 006a 1A60     		str	r2, [r3, #0]
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* select Key size (used only with AES algorithm) */
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
 113              		.loc 1 247 0
 114 006c 7B68     		ldr	r3, [r7, #4]
 115 006e 5B88     		ldrh	r3, [r3, #2]
 116 0070 202B     		cmp	r3, #32
 117 0072 0BD0     		beq	.L3
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
 118              		.loc 1 248 0 discriminator 1
 119 0074 7B68     		ldr	r3, [r7, #4]
 120 0076 5B88     		ldrh	r3, [r3, #2]
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
 121              		.loc 1 247 0 discriminator 1
 122 0078 282B     		cmp	r3, #40
 123 007a 07D0     		beq	.L3
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
 124              		.loc 1 249 0
 125 007c 7B68     		ldr	r3, [r7, #4]
 126 007e 5B88     		ldrh	r3, [r3, #2]
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
 127              		.loc 1 248 0
 128 0080 302B     		cmp	r3, #48
 129 0082 03D0     		beq	.L3
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_Key))
 130              		.loc 1 250 0
 131 0084 7B68     		ldr	r3, [r7, #4]
 132 0086 5B88     		ldrh	r3, [r3, #2]
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
 133              		.loc 1 249 0
 134 0088 382B     		cmp	r3, #56
 135 008a 18D1     		bne	.L4
 136              	.L3:
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_KEYSIZE;
 137              		.loc 1 253 0
 138 008c 4FF00003 		mov	r3, #0
 139 0090 C5F20603 		movt	r3, 20486
 140 0094 4FF00002 		mov	r2, #0
 141 0098 C5F20602 		movt	r2, 20486
 142 009c 1268     		ldr	r2, [r2, #0]
 143 009e 22F44072 		bic	r2, r2, #768
 144 00a2 1A60     		str	r2, [r3, #0]
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
 145              		.loc 1 254 0
 146 00a4 4FF00003 		mov	r3, #0
 147 00a8 C5F20603 		movt	r3, 20486
 148 00ac 4FF00002 		mov	r2, #0
 149 00b0 C5F20602 		movt	r2, 20486
 150 00b4 1168     		ldr	r1, [r2, #0]
 151 00b6 7A68     		ldr	r2, [r7, #4]
 152 00b8 D288     		ldrh	r2, [r2, #6]
 153 00ba 0A43     		orrs	r2, r2, r1
 154 00bc 1A60     		str	r2, [r3, #0]
 155              	.L4:
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   configured once the key has 
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   been prepared */
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select data Direction */ 
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGODIR;
 156              		.loc 1 260 0
 157 00be 4FF00003 		mov	r3, #0
 158 00c2 C5F20603 		movt	r3, 20486
 159 00c6 4FF00002 		mov	r2, #0
 160 00ca C5F20602 		movt	r2, 20486
 161 00ce 1268     		ldr	r2, [r2, #0]
 162 00d0 22F00402 		bic	r2, r2, #4
 163 00d4 1A60     		str	r2, [r3, #0]
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 164              		.loc 1 261 0
 165 00d6 4FF00003 		mov	r3, #0
 166 00da C5F20603 		movt	r3, 20486
 167 00de 4FF00002 		mov	r2, #0
 168 00e2 C5F20602 		movt	r2, 20486
 169 00e6 1168     		ldr	r1, [r2, #0]
 170 00e8 7A68     		ldr	r2, [r7, #4]
 171 00ea 1288     		ldrh	r2, [r2, #0]
 172 00ec 0A43     		orrs	r2, r2, r1
 173 00ee 1A60     		str	r2, [r3, #0]
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 174              		.loc 1 262 0
 175 00f0 07F10C07 		add	r7, r7, #12
 176 00f4 BD46     		mov	sp, r7
 177 00f6 80BC     		pop	{r7}
 178 00f8 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE111:
 182 00fa 00BF     		.section	.text.CRYP_StructInit,"ax",%progbits
 183              		.align	2
 184              		.global	CRYP_StructInit
 185              		.thumb
 186              		.thumb_func
 188              	CRYP_StructInit:
 189              	.LFB112:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_InitStruct member with its default value.
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure which will
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         be initialized.
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct)
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 190              		.loc 1 271 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195 0000 80B4     		push	{r7}
 196              	.LCFI5:
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 7, -4
 199 0002 83B0     		sub	sp, sp, #12
 200              	.LCFI6:
 201              		.cfi_def_cfa_offset 16
 202 0004 00AF     		add	r7, sp, #0
 203              	.LCFI7:
 204              		.cfi_def_cfa_register 7
 205 0006 7860     		str	r0, [r7, #4]
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_AlgoDir member */
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 206              		.loc 1 273 0
 207 0008 7B68     		ldr	r3, [r7, #4]
 208 000a 4FF00002 		mov	r2, #0
 209 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_AlgoMode member */
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
 210              		.loc 1 276 0
 211 0010 7B68     		ldr	r3, [r7, #4]
 212 0012 4FF00002 		mov	r2, #0
 213 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_DataType member */
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_DataType = CRYP_DataType_32b;
 214              		.loc 1 279 0
 215 0018 7B68     		ldr	r3, [r7, #4]
 216 001a 4FF00002 		mov	r2, #0
 217 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_KeySize member */
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_KeySize = CRYP_KeySize_128b;
 218              		.loc 1 282 0
 219 0020 7B68     		ldr	r3, [r7, #4]
 220 0022 4FF00002 		mov	r2, #0
 221 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 222              		.loc 1 283 0
 223 0028 07F10C07 		add	r7, r7, #12
 224 002c BD46     		mov	sp, r7
 225 002e 80BC     		pop	{r7}
 226 0030 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE112:
 230 0032 00BF     		.section	.text.CRYP_KeyInit,"ax",%progbits
 231              		.align	2
 232              		.global	CRYP_KeyInit
 233              		.thumb
 234              		.thumb_func
 236              	CRYP_KeyInit:
 237              	.LFB113:
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Keys according to the specified parameters in
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the CRYP_KeyInitStruct.
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 238              		.loc 1 293 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 80B4     		push	{r7}
 244              	.LCFI8:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 7, -4
 247 0002 83B0     		sub	sp, sp, #12
 248              	.LCFI9:
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              	.LCFI10:
 252              		.cfi_def_cfa_register 7
 253 0006 7860     		str	r0, [r7, #4]
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Key Initialisation */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
 254              		.loc 1 295 0
 255 0008 4FF00003 		mov	r3, #0
 256 000c C5F20603 		movt	r3, 20486
 257 0010 7A68     		ldr	r2, [r7, #4]
 258 0012 1268     		ldr	r2, [r2, #0]
 259 0014 1A62     		str	r2, [r3, #32]
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
 260              		.loc 1 296 0
 261 0016 4FF00003 		mov	r3, #0
 262 001a C5F20603 		movt	r3, 20486
 263 001e 7A68     		ldr	r2, [r7, #4]
 264 0020 5268     		ldr	r2, [r2, #4]
 265 0022 5A62     		str	r2, [r3, #36]
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
 266              		.loc 1 297 0
 267 0024 4FF00003 		mov	r3, #0
 268 0028 C5F20603 		movt	r3, 20486
 269 002c 7A68     		ldr	r2, [r7, #4]
 270 002e 9268     		ldr	r2, [r2, #8]
 271 0030 9A62     		str	r2, [r3, #40]
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
 272              		.loc 1 298 0
 273 0032 4FF00003 		mov	r3, #0
 274 0036 C5F20603 		movt	r3, 20486
 275 003a 7A68     		ldr	r2, [r7, #4]
 276 003c D268     		ldr	r2, [r2, #12]
 277 003e DA62     		str	r2, [r3, #44]
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
 278              		.loc 1 299 0
 279 0040 4FF00003 		mov	r3, #0
 280 0044 C5F20603 		movt	r3, 20486
 281 0048 7A68     		ldr	r2, [r7, #4]
 282 004a 1269     		ldr	r2, [r2, #16]
 283 004c 1A63     		str	r2, [r3, #48]
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
 284              		.loc 1 300 0
 285 004e 4FF00003 		mov	r3, #0
 286 0052 C5F20603 		movt	r3, 20486
 287 0056 7A68     		ldr	r2, [r7, #4]
 288 0058 5269     		ldr	r2, [r2, #20]
 289 005a 5A63     		str	r2, [r3, #52]
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
 290              		.loc 1 301 0
 291 005c 4FF00003 		mov	r3, #0
 292 0060 C5F20603 		movt	r3, 20486
 293 0064 7A68     		ldr	r2, [r7, #4]
 294 0066 9269     		ldr	r2, [r2, #24]
 295 0068 9A63     		str	r2, [r3, #56]
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
 296              		.loc 1 302 0
 297 006a 4FF00003 		mov	r3, #0
 298 006e C5F20603 		movt	r3, 20486
 299 0072 7A68     		ldr	r2, [r7, #4]
 300 0074 D269     		ldr	r2, [r2, #28]
 301 0076 DA63     		str	r2, [r3, #60]
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 302              		.loc 1 303 0
 303 0078 07F10C07 		add	r7, r7, #12
 304 007c BD46     		mov	sp, r7
 305 007e 80BC     		pop	{r7}
 306 0080 7047     		bx	lr
 307              		.cfi_endproc
 308              	.LFE113:
 310 0082 00BF     		.section	.text.CRYP_KeyStructInit,"ax",%progbits
 311              		.align	2
 312              		.global	CRYP_KeyStructInit
 313              		.thumb
 314              		.thumb_func
 316              	CRYP_KeyStructInit:
 317              	.LFB114:
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_KeyInitStruct member with its default value.
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         which will be initialized.
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 318              		.loc 1 312 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 8
 321              		@ frame_needed = 1, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 323 0000 80B4     		push	{r7}
 324              	.LCFI11:
 325              		.cfi_def_cfa_offset 4
 326              		.cfi_offset 7, -4
 327 0002 83B0     		sub	sp, sp, #12
 328              	.LCFI12:
 329              		.cfi_def_cfa_offset 16
 330 0004 00AF     		add	r7, sp, #0
 331              	.LCFI13:
 332              		.cfi_def_cfa_register 7
 333 0006 7860     		str	r0, [r7, #4]
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
 334              		.loc 1 313 0
 335 0008 7B68     		ldr	r3, [r7, #4]
 336 000a 4FF00002 		mov	r2, #0
 337 000e 1A60     		str	r2, [r3, #0]
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Right = 0;
 338              		.loc 1 314 0
 339 0010 7B68     		ldr	r3, [r7, #4]
 340 0012 4FF00002 		mov	r2, #0
 341 0016 5A60     		str	r2, [r3, #4]
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
 342              		.loc 1 315 0
 343 0018 7B68     		ldr	r3, [r7, #4]
 344 001a 4FF00002 		mov	r2, #0
 345 001e 9A60     		str	r2, [r3, #8]
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Right = 0;
 346              		.loc 1 316 0
 347 0020 7B68     		ldr	r3, [r7, #4]
 348 0022 4FF00002 		mov	r2, #0
 349 0026 DA60     		str	r2, [r3, #12]
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
 350              		.loc 1 317 0
 351 0028 7B68     		ldr	r3, [r7, #4]
 352 002a 4FF00002 		mov	r2, #0
 353 002e 1A61     		str	r2, [r3, #16]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Right = 0;
 354              		.loc 1 318 0
 355 0030 7B68     		ldr	r3, [r7, #4]
 356 0032 4FF00002 		mov	r2, #0
 357 0036 5A61     		str	r2, [r3, #20]
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
 358              		.loc 1 319 0
 359 0038 7B68     		ldr	r3, [r7, #4]
 360 003a 4FF00002 		mov	r2, #0
 361 003e 9A61     		str	r2, [r3, #24]
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Right = 0;
 362              		.loc 1 320 0
 363 0040 7B68     		ldr	r3, [r7, #4]
 364 0042 4FF00002 		mov	r2, #0
 365 0046 DA61     		str	r2, [r3, #28]
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 366              		.loc 1 321 0
 367 0048 07F10C07 		add	r7, r7, #12
 368 004c BD46     		mov	sp, r7
 369 004e 80BC     		pop	{r7}
 370 0050 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE114:
 374 0052 00BF     		.section	.text.CRYP_IVInit,"ax",%progbits
 375              		.align	2
 376              		.global	CRYP_IVInit
 377              		.thumb
 378              		.thumb_func
 380              	CRYP_IVInit:
 381              	.LFB115:
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Initialization Vectors(IV) according to the
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         specified parameters in the CRYP_IVInitStruct.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef structure that contains
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP Initialization Vectors(IV).
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 382              		.loc 1 330 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 0000 80B4     		push	{r7}
 388              	.LCFI14:
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 0002 83B0     		sub	sp, sp, #12
 392              	.LCFI15:
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              	.LCFI16:
 396              		.cfi_def_cfa_register 7
 397 0006 7860     		str	r0, [r7, #4]
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_IVInitStruct->CRYP_IV0Left;
 398              		.loc 1 331 0
 399 0008 4FF00003 		mov	r3, #0
 400 000c C5F20603 		movt	r3, 20486
 401 0010 7A68     		ldr	r2, [r7, #4]
 402 0012 1268     		ldr	r2, [r2, #0]
 403 0014 1A64     		str	r2, [r3, #64]
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_IVInitStruct->CRYP_IV0Right;
 404              		.loc 1 332 0
 405 0016 4FF00003 		mov	r3, #0
 406 001a C5F20603 		movt	r3, 20486
 407 001e 7A68     		ldr	r2, [r7, #4]
 408 0020 5268     		ldr	r2, [r2, #4]
 409 0022 5A64     		str	r2, [r3, #68]
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_IVInitStruct->CRYP_IV1Left;
 410              		.loc 1 333 0
 411 0024 4FF00003 		mov	r3, #0
 412 0028 C5F20603 		movt	r3, 20486
 413 002c 7A68     		ldr	r2, [r7, #4]
 414 002e 9268     		ldr	r2, [r2, #8]
 415 0030 9A64     		str	r2, [r3, #72]
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_IVInitStruct->CRYP_IV1Right;
 416              		.loc 1 334 0
 417 0032 4FF00003 		mov	r3, #0
 418 0036 C5F20603 		movt	r3, 20486
 419 003a 7A68     		ldr	r2, [r7, #4]
 420 003c D268     		ldr	r2, [r2, #12]
 421 003e DA64     		str	r2, [r3, #76]
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 422              		.loc 1 335 0
 423 0040 07F10C07 		add	r7, r7, #12
 424 0044 BD46     		mov	sp, r7
 425 0046 80BC     		pop	{r7}
 426 0048 7047     		bx	lr
 427              		.cfi_endproc
 428              	.LFE115:
 430 004a 00BF     		.section	.text.CRYP_IVStructInit,"ax",%progbits
 431              		.align	2
 432              		.global	CRYP_IVStructInit
 433              		.thumb
 434              		.thumb_func
 436              	CRYP_IVStructInit:
 437              	.LFB116:
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_IVInitStruct member with its default value.
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef Initialization 
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         Vectors(IV) structure which will be initialized.
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 438              		.loc 1 344 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 8
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443 0000 80B4     		push	{r7}
 444              	.LCFI17:
 445              		.cfi_def_cfa_offset 4
 446              		.cfi_offset 7, -4
 447 0002 83B0     		sub	sp, sp, #12
 448              	.LCFI18:
 449              		.cfi_def_cfa_offset 16
 450 0004 00AF     		add	r7, sp, #0
 451              	.LCFI19:
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Left  = 0;
 454              		.loc 1 345 0
 455 0008 7B68     		ldr	r3, [r7, #4]
 456 000a 4FF00002 		mov	r2, #0
 457 000e 1A60     		str	r2, [r3, #0]
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Right = 0;
 458              		.loc 1 346 0
 459 0010 7B68     		ldr	r3, [r7, #4]
 460 0012 4FF00002 		mov	r2, #0
 461 0016 5A60     		str	r2, [r3, #4]
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Left  = 0;
 462              		.loc 1 347 0
 463 0018 7B68     		ldr	r3, [r7, #4]
 464 001a 4FF00002 		mov	r2, #0
 465 001e 9A60     		str	r2, [r3, #8]
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Right = 0;
 466              		.loc 1 348 0
 467 0020 7B68     		ldr	r3, [r7, #4]
 468 0022 4FF00002 		mov	r2, #0
 469 0026 DA60     		str	r2, [r3, #12]
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 470              		.loc 1 349 0
 471 0028 07F10C07 		add	r7, r7, #12
 472 002c BD46     		mov	sp, r7
 473 002e 80BC     		pop	{r7}
 474 0030 7047     		bx	lr
 475              		.cfi_endproc
 476              	.LFE116:
 478 0032 00BF     		.section	.text.CRYP_FIFOFlush,"ax",%progbits
 479              		.align	2
 480              		.global	CRYP_FIFOFlush
 481              		.thumb
 482              		.thumb_func
 484              	CRYP_FIFOFlush:
 485              	.LFB117:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         FIFOs are reset)
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The FIFOs must be flushed only when BUSY flag is reset.  
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_FIFOFlush(void)
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 486              		.loc 1 359 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491 0000 80B4     		push	{r7}
 492              	.LCFI20:
 493              		.cfi_def_cfa_offset 4
 494              		.cfi_offset 7, -4
 495 0002 00AF     		add	r7, sp, #0
 496              	.LCFI21:
 497              		.cfi_def_cfa_register 7
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Reset the read and write pointers of the FIFOs */
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_FFLUSH;
 498              		.loc 1 361 0
 499 0004 4FF00003 		mov	r3, #0
 500 0008 C5F20603 		movt	r3, 20486
 501 000c 4FF00002 		mov	r2, #0
 502 0010 C5F20602 		movt	r2, 20486
 503 0014 1268     		ldr	r2, [r2, #0]
 504 0016 42F48042 		orr	r2, r2, #16384
 505 001a 1A60     		str	r2, [r3, #0]
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 506              		.loc 1 362 0
 507 001c BD46     		mov	sp, r7
 508 001e 80BC     		pop	{r7}
 509 0020 7047     		bx	lr
 510              		.cfi_endproc
 511              	.LFE117:
 513 0022 00BF     		.section	.text.CRYP_Cmd,"ax",%progbits
 514              		.align	2
 515              		.global	CRYP_Cmd
 516              		.thumb
 517              		.thumb_func
 519              	CRYP_Cmd:
 520              	.LFB118:
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP peripheral.
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the CRYP peripheral.
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Cmd(FunctionalState NewState)
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 521              		.loc 1 371 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 8
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526 0000 80B4     		push	{r7}
 527              	.LCFI22:
 528              		.cfi_def_cfa_offset 4
 529              		.cfi_offset 7, -4
 530 0002 83B0     		sub	sp, sp, #12
 531              	.LCFI23:
 532              		.cfi_def_cfa_offset 16
 533 0004 00AF     		add	r7, sp, #0
 534              	.LCFI24:
 535              		.cfi_def_cfa_register 7
 536 0006 0346     		mov	r3, r0
 537 0008 FB71     		strb	r3, [r7, #7]
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 538              		.loc 1 375 0
 539 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 540 000c 002B     		cmp	r3, #0
 541 000e 0CD0     		beq	.L12
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the Cryptographic processor */
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_CR_CRYPEN;
 542              		.loc 1 378 0
 543 0010 4FF00003 		mov	r3, #0
 544 0014 C5F20603 		movt	r3, 20486
 545 0018 4FF00002 		mov	r2, #0
 546 001c C5F20602 		movt	r2, 20486
 547 0020 1268     		ldr	r2, [r2, #0]
 548 0022 42F40042 		orr	r2, r2, #32768
 549 0026 1A60     		str	r2, [r3, #0]
 550 0028 0BE0     		b	.L11
 551              	.L12:
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the Cryptographic processor */
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_CRYPEN;
 552              		.loc 1 383 0
 553 002a 4FF00003 		mov	r3, #0
 554 002e C5F20603 		movt	r3, 20486
 555 0032 4FF00002 		mov	r2, #0
 556 0036 C5F20602 		movt	r2, 20486
 557 003a 1268     		ldr	r2, [r2, #0]
 558 003c 22F40042 		bic	r2, r2, #32768
 559 0040 1A60     		str	r2, [r3, #0]
 560              	.L11:
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 561              		.loc 1 385 0
 562 0042 07F10C07 		add	r7, r7, #12
 563 0046 BD46     		mov	sp, r7
 564 0048 80BC     		pop	{r7}
 565 004a 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE118:
 569              		.section	.text.CRYP_DataIn,"ax",%progbits
 570              		.align	2
 571              		.global	CRYP_DataIn
 572              		.thumb
 573              		.thumb_func
 575              	CRYP_DataIn:
 576              	.LFB119:
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group2 CRYP Data processing functions
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    CRYP Data processing functions
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP Data processing functions
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing the encryption and decryption 
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   operations: 
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Enter data to be treated in the IN FIFO : using CRYP_DataIn() function.
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Get the data result from the OUT FIFO : using CRYP_DataOut() function.
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Writes data in the Data Input register (DIN).
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   After the DIN register has been read once or several times, 
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  Data: data to write in Data Input register
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DataIn(uint32_t Data)
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 577              		.loc 1 414 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 8
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582 0000 80B4     		push	{r7}
 583              	.LCFI25:
 584              		.cfi_def_cfa_offset 4
 585              		.cfi_offset 7, -4
 586 0002 83B0     		sub	sp, sp, #12
 587              	.LCFI26:
 588              		.cfi_def_cfa_offset 16
 589 0004 00AF     		add	r7, sp, #0
 590              	.LCFI27:
 591              		.cfi_def_cfa_register 7
 592 0006 7860     		str	r0, [r7, #4]
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DR = Data;
 593              		.loc 1 415 0
 594 0008 4FF00003 		mov	r3, #0
 595 000c C5F20603 		movt	r3, 20486
 596 0010 7A68     		ldr	r2, [r7, #4]
 597 0012 9A60     		str	r2, [r3, #8]
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 598              		.loc 1 416 0
 599 0014 07F10C07 		add	r7, r7, #12
 600 0018 BD46     		mov	sp, r7
 601 001a 80BC     		pop	{r7}
 602 001c 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE119:
 606 001e 00BF     		.section	.text.CRYP_DataOut,"ax",%progbits
 607              		.align	2
 608              		.global	CRYP_DataOut
 609              		.thumb
 610              		.thumb_func
 612              	CRYP_DataOut:
 613              	.LFB120:
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Returns the last data entered into the output FIFO.
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval Last data entered into the output FIFO.
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** uint32_t CRYP_DataOut(void)
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 614              		.loc 1 424 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619 0000 80B4     		push	{r7}
 620              	.LCFI28:
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 7, -4
 623 0002 00AF     		add	r7, sp, #0
 624              	.LCFI29:
 625              		.cfi_def_cfa_register 7
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return CRYP->DOUT;
 626              		.loc 1 425 0
 627 0004 4FF00003 		mov	r3, #0
 628 0008 C5F20603 		movt	r3, 20486
 629 000c DB68     		ldr	r3, [r3, #12]
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 630              		.loc 1 426 0
 631 000e 1846     		mov	r0, r3
 632 0010 BD46     		mov	sp, r7
 633 0012 80BC     		pop	{r7}
 634 0014 7047     		bx	lr
 635              		.cfi_endproc
 636              	.LFE120:
 638 0016 00BF     		.section	.text.CRYP_SaveContext,"ax",%progbits
 639              		.align	2
 640              		.global	CRYP_SaveContext
 641              		.thumb
 642              		.thumb_func
 644              	CRYP_SaveContext:
 645              	.LFB121:
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group3 Context swapping functions
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Context swapping functions
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              Context swapping functions
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to save and store CRYP Context
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   It is possible to interrupt an encryption/ decryption/ key generation process 
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to perform another processing with a higher priority, and to complete the 
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   interrupted process later on, when the higher-priority task is complete. To do 
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   so, the context of the interrupted task must be saved from the CRYP registers 
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to memory, and then be restored from memory to the CRYP registers.
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1. To save the current context, use CRYP_SaveContext() function
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2. To restore the saved context, use CRYP_RestoreContext() function 
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Saves the CRYP peripheral Context. 
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function stops DMA transfer before to save the context. After 
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         restoring the context, you have to enable the DMA again (if the DMA
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         was previously used).
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextSave: pointer to a CRYP_Context structure that contains
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for current context.
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that 
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.  
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ErrorStatus CRYP_SaveContext(CRYP_Context* CRYP_ContextSave,
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 646              		.loc 1 468 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 24
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651 0000 80B4     		push	{r7}
 652              	.LCFI30:
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 7, -4
 655 0002 87B0     		sub	sp, sp, #28
 656              	.LCFI31:
 657              		.cfi_def_cfa_offset 32
 658 0004 00AF     		add	r7, sp, #0
 659              	.LCFI32:
 660              		.cfi_def_cfa_register 7
 661 0006 7860     		str	r0, [r7, #4]
 662 0008 3960     		str	r1, [r7, #0]
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   __IO uint32_t timeout = 0;
 663              		.loc 1 469 0
 664 000a 4FF00003 		mov	r3, #0
 665 000e BB60     		str	r3, [r7, #8]
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t ckeckmask = 0, bitstatus;    
 666              		.loc 1 470 0
 667 0010 4FF00003 		mov	r3, #0
 668 0014 7B61     		str	r3, [r7, #20]
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ErrorStatus status = ERROR;
 669              		.loc 1 471 0
 670 0016 4FF00003 		mov	r3, #0
 671 001a FB74     		strb	r3, [r7, #19]
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Stop DMA transfers on the IN FIFO by clearing the DIEN bit in the CRYP_DMACR */
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DIEN;
 672              		.loc 1 474 0
 673 001c 4FF00003 		mov	r3, #0
 674 0020 C5F20603 		movt	r3, 20486
 675 0024 4FF00002 		mov	r2, #0
 676 0028 C5F20602 		movt	r2, 20486
 677 002c 1269     		ldr	r2, [r2, #16]
 678 002e 22F00102 		bic	r2, r2, #1
 679 0032 1A61     		str	r2, [r3, #16]
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Wait until both the IN and OUT FIFOs are empty  
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (IFEM=1 and OFNE=0 in the CRYP_SR register) and the 
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      BUSY bit is cleared. */
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->CR & (uint32_t)(CRYP_CR_ALGOMODE_TDES_ECB | CRYP_CR_ALGOMODE_TDES_CBC)) != (uint32_t)0
 680              		.loc 1 480 0
 681 0034 4FF00003 		mov	r3, #0
 682 0038 C5F20603 		movt	r3, 20486
 683 003c 1B68     		ldr	r3, [r3, #0]
 684 003e 03F00803 		and	r3, r3, #8
 685 0042 002B     		cmp	r3, #0
 686 0044 03D0     		beq	.L17
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   { 
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY ;
 687              		.loc 1 482 0
 688 0046 4FF01103 		mov	r3, #17
 689 004a 7B61     		str	r3, [r7, #20]
 690 004c 02E0     		b	.L18
 691              	.L17:
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else /* AES or DES */
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY | CRYP_SR_OFNE;
 692              		.loc 1 486 0
 693 004e 4FF01503 		mov	r3, #21
 694 0052 7B61     		str	r3, [r7, #20]
 695              	.L18:
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }           
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   do 
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = CRYP->SR & ckeckmask;
 696              		.loc 1 491 0 discriminator 1
 697 0054 4FF00003 		mov	r3, #0
 698 0058 C5F20603 		movt	r3, 20486
 699 005c 5A68     		ldr	r2, [r3, #4]
 700 005e 7B69     		ldr	r3, [r7, #20]
 701 0060 1340     		ands	r3, r3, r2
 702 0062 FB60     		str	r3, [r7, #12]
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 703              		.loc 1 492 0 discriminator 1
 704 0064 BB68     		ldr	r3, [r7, #8]
 705 0066 03F10103 		add	r3, r3, #1
 706 006a BB60     		str	r3, [r7, #8]
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   while ((timeout != MAX_TIMEOUT) && (bitstatus != CRYP_SR_IFEM));
 707              		.loc 1 494 0 discriminator 1
 708 006c BA68     		ldr	r2, [r7, #8]
 709 006e 4FF6FF73 		movw	r3, #65535
 710 0072 9A42     		cmp	r2, r3
 711 0074 02D0     		beq	.L19
 712 0076 FB68     		ldr	r3, [r7, #12]
 713 0078 012B     		cmp	r3, #1
 714 007a EBD1     		bne	.L18
 715              	.L19:
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->SR & ckeckmask) != CRYP_SR_IFEM)
 716              		.loc 1 496 0
 717 007c 4FF00003 		mov	r3, #0
 718 0080 C5F20603 		movt	r3, 20486
 719 0084 5A68     		ldr	r2, [r3, #4]
 720 0086 7B69     		ldr	r3, [r7, #20]
 721 0088 1340     		ands	r3, r3, r2
 722 008a 012B     		cmp	r3, #1
 723 008c 03D0     		beq	.L20
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = ERROR;
 724              		.loc 1 498 0
 725 008e 4FF00003 		mov	r3, #0
 726 0092 FB74     		strb	r3, [r7, #19]
 727 0094 5FE0     		b	.L21
 728              	.L20:
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {      
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Stop DMA transfers on the OUT FIFO by 
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - writing the DOEN bit to 0 in the CRYP_DMACR register 
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - and clear the CRYPEN bit. */
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DOEN;
 729              		.loc 1 506 0
 730 0096 4FF00003 		mov	r3, #0
 731 009a C5F20603 		movt	r3, 20486
 732 009e 4FF00002 		mov	r2, #0
 733 00a2 C5F20602 		movt	r2, 20486
 734 00a6 1269     		ldr	r2, [r2, #16]
 735 00a8 22F00202 		bic	r2, r2, #2
 736 00ac 1A61     		str	r2, [r3, #16]
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 737              		.loc 1 507 0
 738 00ae 4FF00003 		mov	r3, #0
 739 00b2 C5F20603 		movt	r3, 20486
 740 00b6 4FF00002 		mov	r2, #0
 741 00ba C5F20602 		movt	r2, 20486
 742 00be 1268     		ldr	r2, [r2, #0]
 743 00c0 22F40042 		bic	r2, r2, #32768
 744 00c4 1A60     		str	r2, [r3, #0]
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Save the current configuration (bits [9:2] in the CRYP_CR register) */
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CR_bits9to2  = CRYP->CR & (CRYP_CR_KEYSIZE  | 
 745              		.loc 1 510 0
 746 00c6 4FF00003 		mov	r3, #0
 747 00ca C5F20603 		movt	r3, 20486
 748 00ce 1B68     		ldr	r3, [r3, #0]
 749 00d0 03F47F72 		and	r2, r3, #1020
 750 00d4 7B68     		ldr	r3, [r7, #4]
 751 00d6 1A60     		str	r2, [r3, #0]
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_DATATYPE | 
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGOMODE |
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGODIR); 
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* and, if not in ECB mode, the initialization vectors. */
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0LR = CRYP->IV0LR;
 752              		.loc 1 516 0
 753 00d8 4FF00003 		mov	r3, #0
 754 00dc C5F20603 		movt	r3, 20486
 755 00e0 1A6C     		ldr	r2, [r3, #64]
 756 00e2 7B68     		ldr	r3, [r7, #4]
 757 00e4 5A60     		str	r2, [r3, #4]
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 758              		.loc 1 517 0
 759 00e6 4FF00003 		mov	r3, #0
 760 00ea C5F20603 		movt	r3, 20486
 761 00ee 5A6C     		ldr	r2, [r3, #68]
 762 00f0 7B68     		ldr	r3, [r7, #4]
 763 00f2 9A60     		str	r2, [r3, #8]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 764              		.loc 1 518 0
 765 00f4 4FF00003 		mov	r3, #0
 766 00f8 C5F20603 		movt	r3, 20486
 767 00fc 9A6C     		ldr	r2, [r3, #72]
 768 00fe 7B68     		ldr	r3, [r7, #4]
 769 0100 DA60     		str	r2, [r3, #12]
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 770              		.loc 1 519 0
 771 0102 4FF00003 		mov	r3, #0
 772 0106 C5F20603 		movt	r3, 20486
 773 010a DA6C     		ldr	r2, [r3, #76]
 774 010c 7B68     		ldr	r3, [r7, #4]
 775 010e 1A61     		str	r2, [r3, #16]
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* save The key value */
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0LR = CRYP_KeyInitStruct->CRYP_Key0Left; 
 776              		.loc 1 522 0
 777 0110 3B68     		ldr	r3, [r7, #0]
 778 0112 1A68     		ldr	r2, [r3, #0]
 779 0114 7B68     		ldr	r3, [r7, #4]
 780 0116 5A61     		str	r2, [r3, #20]
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 781              		.loc 1 523 0
 782 0118 3B68     		ldr	r3, [r7, #0]
 783 011a 5A68     		ldr	r2, [r3, #4]
 784 011c 7B68     		ldr	r3, [r7, #4]
 785 011e 9A61     		str	r2, [r3, #24]
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 786              		.loc 1 524 0
 787 0120 3B68     		ldr	r3, [r7, #0]
 788 0122 9A68     		ldr	r2, [r3, #8]
 789 0124 7B68     		ldr	r3, [r7, #4]
 790 0126 DA61     		str	r2, [r3, #28]
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 791              		.loc 1 525 0
 792 0128 3B68     		ldr	r3, [r7, #0]
 793 012a DA68     		ldr	r2, [r3, #12]
 794 012c 7B68     		ldr	r3, [r7, #4]
 795 012e 1A62     		str	r2, [r3, #32]
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 796              		.loc 1 526 0
 797 0130 3B68     		ldr	r3, [r7, #0]
 798 0132 1A69     		ldr	r2, [r3, #16]
 799 0134 7B68     		ldr	r3, [r7, #4]
 800 0136 5A62     		str	r2, [r3, #36]
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 801              		.loc 1 527 0
 802 0138 3B68     		ldr	r3, [r7, #0]
 803 013a 5A69     		ldr	r2, [r3, #20]
 804 013c 7B68     		ldr	r3, [r7, #4]
 805 013e 9A62     		str	r2, [r3, #40]
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 806              		.loc 1 528 0
 807 0140 3B68     		ldr	r3, [r7, #0]
 808 0142 9A69     		ldr	r2, [r3, #24]
 809 0144 7B68     		ldr	r3, [r7, #4]
 810 0146 DA62     		str	r2, [r3, #44]
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 811              		.loc 1 529 0
 812 0148 3B68     		ldr	r3, [r7, #0]
 813 014a DA69     		ldr	r2, [r3, #28]
 814 014c 7B68     		ldr	r3, [r7, #4]
 815 014e 1A63     		str	r2, [r3, #48]
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    /* When needed, save the DMA status (pointers for IN and OUT messages, 
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       number of remaining bytes, etc.) */
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = SUCCESS;
 816              		.loc 1 534 0
 817 0150 4FF00103 		mov	r3, #1
 818 0154 FB74     		strb	r3, [r7, #19]
 819              	.L21:
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    return status;
 820              		.loc 1 537 0
 821 0156 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 822              		.loc 1 538 0
 823 0158 1846     		mov	r0, r3
 824 015a 07F11C07 		add	r7, r7, #28
 825 015e BD46     		mov	sp, r7
 826 0160 80BC     		pop	{r7}
 827 0162 7047     		bx	lr
 828              		.cfi_endproc
 829              	.LFE121:
 831              		.section	.text.CRYP_RestoreContext,"ax",%progbits
 832              		.align	2
 833              		.global	CRYP_RestoreContext
 834              		.thumb
 835              		.thumb_func
 837              	CRYP_RestoreContext:
 838              	.LFB122:
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Restores the CRYP peripheral Context.
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   Since teh DMA transfer is stopped in CRYP_SaveContext() function,
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         after restoring the context, you have to enable the DMA again (if the
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         DMA was previously used).  
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextRestore: pointer to a CRYP_Context structure that contains
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for saved context.
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The data that were saved during context saving must be rewrited into
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the IN FIFO.
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_RestoreContext(CRYP_Context* CRYP_ContextRestore)  
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 839              		.loc 1 552 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 844 0000 80B4     		push	{r7}
 845              	.LCFI33:
 846              		.cfi_def_cfa_offset 4
 847              		.cfi_offset 7, -4
 848 0002 83B0     		sub	sp, sp, #12
 849              	.LCFI34:
 850              		.cfi_def_cfa_offset 16
 851 0004 00AF     		add	r7, sp, #0
 852              	.LCFI35:
 853              		.cfi_def_cfa_register 7
 854 0006 7860     		str	r0, [r7, #4]
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Configure the processor with the saved configuration */
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR = CRYP_ContextRestore->CR_bits9to2;
 855              		.loc 1 555 0
 856 0008 4FF00003 		mov	r3, #0
 857 000c C5F20603 		movt	r3, 20486
 858 0010 7A68     		ldr	r2, [r7, #4]
 859 0012 1268     		ldr	r2, [r2, #0]
 860 0014 1A60     		str	r2, [r3, #0]
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* restore The key value */
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_ContextRestore->CRYP_K0LR; 
 861              		.loc 1 558 0
 862 0016 4FF00003 		mov	r3, #0
 863 001a C5F20603 		movt	r3, 20486
 864 001e 7A68     		ldr	r2, [r7, #4]
 865 0020 5269     		ldr	r2, [r2, #20]
 866 0022 1A62     		str	r2, [r3, #32]
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_ContextRestore->CRYP_K0RR;
 867              		.loc 1 559 0
 868 0024 4FF00003 		mov	r3, #0
 869 0028 C5F20603 		movt	r3, 20486
 870 002c 7A68     		ldr	r2, [r7, #4]
 871 002e 9269     		ldr	r2, [r2, #24]
 872 0030 5A62     		str	r2, [r3, #36]
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_ContextRestore->CRYP_K1LR;
 873              		.loc 1 560 0
 874 0032 4FF00003 		mov	r3, #0
 875 0036 C5F20603 		movt	r3, 20486
 876 003a 7A68     		ldr	r2, [r7, #4]
 877 003c D269     		ldr	r2, [r2, #28]
 878 003e 9A62     		str	r2, [r3, #40]
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_ContextRestore->CRYP_K1RR;
 879              		.loc 1 561 0
 880 0040 4FF00003 		mov	r3, #0
 881 0044 C5F20603 		movt	r3, 20486
 882 0048 7A68     		ldr	r2, [r7, #4]
 883 004a 126A     		ldr	r2, [r2, #32]
 884 004c DA62     		str	r2, [r3, #44]
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_ContextRestore->CRYP_K2LR;
 885              		.loc 1 562 0
 886 004e 4FF00003 		mov	r3, #0
 887 0052 C5F20603 		movt	r3, 20486
 888 0056 7A68     		ldr	r2, [r7, #4]
 889 0058 526A     		ldr	r2, [r2, #36]
 890 005a 1A63     		str	r2, [r3, #48]
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_ContextRestore->CRYP_K2RR;
 891              		.loc 1 563 0
 892 005c 4FF00003 		mov	r3, #0
 893 0060 C5F20603 		movt	r3, 20486
 894 0064 7A68     		ldr	r2, [r7, #4]
 895 0066 926A     		ldr	r2, [r2, #40]
 896 0068 5A63     		str	r2, [r3, #52]
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_ContextRestore->CRYP_K3LR;
 897              		.loc 1 564 0
 898 006a 4FF00003 		mov	r3, #0
 899 006e C5F20603 		movt	r3, 20486
 900 0072 7A68     		ldr	r2, [r7, #4]
 901 0074 D26A     		ldr	r2, [r2, #44]
 902 0076 9A63     		str	r2, [r3, #56]
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_ContextRestore->CRYP_K3RR;
 903              		.loc 1 565 0
 904 0078 4FF00003 		mov	r3, #0
 905 007c C5F20603 		movt	r3, 20486
 906 0080 7A68     		ldr	r2, [r7, #4]
 907 0082 126B     		ldr	r2, [r2, #48]
 908 0084 DA63     		str	r2, [r3, #60]
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* and the initialization vectors. */
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_ContextRestore->CRYP_IV0LR;
 909              		.loc 1 568 0
 910 0086 4FF00003 		mov	r3, #0
 911 008a C5F20603 		movt	r3, 20486
 912 008e 7A68     		ldr	r2, [r7, #4]
 913 0090 5268     		ldr	r2, [r2, #4]
 914 0092 1A64     		str	r2, [r3, #64]
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_ContextRestore->CRYP_IV0RR;
 915              		.loc 1 569 0
 916 0094 4FF00003 		mov	r3, #0
 917 0098 C5F20603 		movt	r3, 20486
 918 009c 7A68     		ldr	r2, [r7, #4]
 919 009e 9268     		ldr	r2, [r2, #8]
 920 00a0 5A64     		str	r2, [r3, #68]
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_ContextRestore->CRYP_IV1LR;
 921              		.loc 1 570 0
 922 00a2 4FF00003 		mov	r3, #0
 923 00a6 C5F20603 		movt	r3, 20486
 924 00aa 7A68     		ldr	r2, [r7, #4]
 925 00ac D268     		ldr	r2, [r2, #12]
 926 00ae 9A64     		str	r2, [r3, #72]
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_ContextRestore->CRYP_IV1RR;
 927              		.loc 1 571 0
 928 00b0 4FF00003 		mov	r3, #0
 929 00b4 C5F20603 		movt	r3, 20486
 930 00b8 7A68     		ldr	r2, [r7, #4]
 931 00ba 1269     		ldr	r2, [r2, #16]
 932 00bc DA64     		str	r2, [r3, #76]
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable the cryptographic processor */
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_CRYPEN;
 933              		.loc 1 574 0
 934 00be 4FF00003 		mov	r3, #0
 935 00c2 C5F20603 		movt	r3, 20486
 936 00c6 4FF00002 		mov	r2, #0
 937 00ca C5F20602 		movt	r2, 20486
 938 00ce 1268     		ldr	r2, [r2, #0]
 939 00d0 42F40042 		orr	r2, r2, #32768
 940 00d4 1A60     		str	r2, [r3, #0]
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 941              		.loc 1 575 0
 942 00d6 07F10C07 		add	r7, r7, #12
 943 00da BD46     		mov	sp, r7
 944 00dc 80BC     		pop	{r7}
 945 00de 7047     		bx	lr
 946              		.cfi_endproc
 947              	.LFE122:
 949              		.section	.text.CRYP_DMACmd,"ax",%progbits
 950              		.align	2
 951              		.global	CRYP_DMACmd
 952              		.thumb
 953              		.thumb_func
 955              	CRYP_DMACmd:
 956              	.LFB123:
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group4 CRYP's DMA interface Configuration function
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   CRYP's DMA interface Configuration function 
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    CRYP's DMA interface Configuration function
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the DMA interface for 
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP data input and output transfer.
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   When the DMA mode is enabled (using the CRYP_DMACmd() function), data can be 
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   transferred:
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From memory to the CRYP IN FIFO using the DMA peripheral by enabling 
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataIN request.
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From the CRYP OUT FIFO to the memory using the DMA peripheral by enabling 
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataOUT request.
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP DMA interface.
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_DMAReq: specifies the CRYP DMA transfer request to be enabled or disabled.
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be any combination of the following values:
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataOUT: DMA for outgoing(Tx) data transfer
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataIN: DMA for incoming(Rx) data transfer
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the selected CRYP DMA transfer request.
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DMACmd(uint8_t CRYP_DMAReq, FunctionalState NewState)
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 957              		.loc 1 613 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 8
 960              		@ frame_needed = 1, uses_anonymous_args = 0
 961              		@ link register save eliminated.
 962 0000 80B4     		push	{r7}
 963              	.LCFI36:
 964              		.cfi_def_cfa_offset 4
 965              		.cfi_offset 7, -4
 966 0002 83B0     		sub	sp, sp, #12
 967              	.LCFI37:
 968              		.cfi_def_cfa_offset 16
 969 0004 00AF     		add	r7, sp, #0
 970              	.LCFI38:
 971              		.cfi_def_cfa_register 7
 972 0006 0246     		mov	r2, r0
 973 0008 0B46     		mov	r3, r1
 974 000a FA71     		strb	r2, [r7, #7]
 975 000c BB71     		strb	r3, [r7, #6]
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DMAREQ(CRYP_DMAReq));
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 976              		.loc 1 618 0
 977 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 978 0010 002B     		cmp	r3, #0
 979 0012 0CD0     		beq	.L24
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP DMA request */
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR |= CRYP_DMAReq;
 980              		.loc 1 621 0
 981 0014 4FF00003 		mov	r3, #0
 982 0018 C5F20603 		movt	r3, 20486
 983 001c 4FF00002 		mov	r2, #0
 984 0020 C5F20602 		movt	r2, 20486
 985 0024 1169     		ldr	r1, [r2, #16]
 986 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 987 0028 0A43     		orrs	r2, r2, r1
 988 002a 1A61     		str	r2, [r3, #16]
 989 002c 0EE0     		b	.L23
 990              	.L24:
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP DMA request */
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= (uint8_t)~CRYP_DMAReq;
 991              		.loc 1 626 0
 992 002e 4FF00003 		mov	r3, #0
 993 0032 C5F20603 		movt	r3, 20486
 994 0036 4FF00002 		mov	r2, #0
 995 003a C5F20602 		movt	r2, 20486
 996 003e 1169     		ldr	r1, [r2, #16]
 997 0040 FA79     		ldrb	r2, [r7, #7]
 998 0042 6FEA0202 		mvn	r2, r2
 999 0046 D2B2     		uxtb	r2, r2
 1000 0048 0A40     		ands	r2, r2, r1
 1001 004a 1A61     		str	r2, [r3, #16]
 1002              	.L23:
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1003              		.loc 1 628 0
 1004 004c 07F10C07 		add	r7, r7, #12
 1005 0050 BD46     		mov	sp, r7
 1006 0052 80BC     		pop	{r7}
 1007 0054 7047     		bx	lr
 1008              		.cfi_endproc
 1009              	.LFE123:
 1011 0056 00BF     		.section	.text.CRYP_ITConfig,"ax",%progbits
 1012              		.align	2
 1013              		.global	CRYP_ITConfig
 1014              		.thumb
 1015              		.thumb_func
 1017              	CRYP_ITConfig:
 1018              	.LFB124:
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group5 Interrupts and flags management functions
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Interrupts and flags management functions
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    Interrupts and flags management functions
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the CRYP Interrupts and 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to get the status and Interrupts pending bits.
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The CRYP provides 2 Interrupts sources and 7 Flags:
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Flags :
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------- 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      1. CRYP_FLAG_IFEM :  Set when Input FIFO is empty.
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      2. CRYP_FLAG_IFNF :  Set when Input FIFO is not full.
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      3. CRYP_FLAG_INRIS  : Set when Input FIFO Raw interrupt is pending 
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the input FIFO service interrupt.
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      4. CRYP_FLAG_OFNE   : Set when Output FIFO not empty.
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      5. CRYP_FLAG_OFFU   : Set when Output FIFO is full.
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      6. CRYP_FLAG_OUTRIS : Set when Output FIFO Raw interrupt is pending 
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the output FIFO service interrupt.
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      7. CRYP_FLAG_BUSY   : Set when the CRYP core is currently processing a 
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            block of data or a key preparation (for AES 
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            decryption).
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            To clear it, the CRYP core must be disabled and the 
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            last processing has completed. 
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Interrupts :
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    1. CRYP_IT_INI   : The input FIFO service interrupt is asserted when there 
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       are less than 4 words in the input FIFO.
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_INRIS flag.
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by performing write operations 
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       to the input FIFO until it holds 4 or more words. The 
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       input FIFO service interrupt INMIS is enabled with the 
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP enable bit. Consequently, when CRYP is disabled, the 
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       INMIS signal is low even if the input FIFO is empty.
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    2. CRYP_IT_OUTI  : The output FIFO service interrupt is asserted when there 
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       is one or more (32-bit word) data items in the output FIFO.
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_OUTRIS flag.
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by reading data from the output 
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       FIFO until there is no valid (32-bit) word left (that is, 
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       the interrupt follows the state of the OFNE (output FIFO 
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       not empty) flag).
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Managing the CRYP controller events :
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------------------------------ 
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The user should identify which mode will be used in his application to manage 
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   the CRYP controller events: Polling mode or Interrupt mode.
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1.  In the Polling Mode it is advised to use the following functions:
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetFlagStatus() : to check if flags events occur. 
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT flags do not need to be cleared since they are cleared as 
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event are reset.   
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_ITConfig()       : to enable or disable the interrupt source.
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetITStatus()    : to check if Interrupt occurs.
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT interrupts have no pending bits, the interrupt is cleared as 
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event is reset. 
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the specified CRYP interrupts.
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP interrupt source to be enabled or disabled.
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be any combination of the following values:
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the specified CRYP interrupt.
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be: ENABLE or DISABLE.
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_ITConfig(uint8_t CRYP_IT, FunctionalState NewState)
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 1019              		.loc 1 738 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 8
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024 0000 80B4     		push	{r7}
 1025              	.LCFI39:
 1026              		.cfi_def_cfa_offset 4
 1027              		.cfi_offset 7, -4
 1028 0002 83B0     		sub	sp, sp, #12
 1029              	.LCFI40:
 1030              		.cfi_def_cfa_offset 16
 1031 0004 00AF     		add	r7, sp, #0
 1032              	.LCFI41:
 1033              		.cfi_def_cfa_register 7
 1034 0006 0246     		mov	r2, r0
 1035 0008 0B46     		mov	r3, r1
 1036 000a FA71     		strb	r2, [r7, #7]
 1037 000c BB71     		strb	r3, [r7, #6]
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_CONFIG_IT(CRYP_IT));
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 1038              		.loc 1 743 0
 1039 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1040 0010 002B     		cmp	r3, #0
 1041 0012 0CD0     		beq	.L27
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP interrupt */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR |= CRYP_IT;
 1042              		.loc 1 746 0
 1043 0014 4FF00003 		mov	r3, #0
 1044 0018 C5F20603 		movt	r3, 20486
 1045 001c 4FF00002 		mov	r2, #0
 1046 0020 C5F20602 		movt	r2, 20486
 1047 0024 5169     		ldr	r1, [r2, #20]
 1048 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1049 0028 0A43     		orrs	r2, r2, r1
 1050 002a 5A61     		str	r2, [r3, #20]
 1051 002c 0EE0     		b	.L26
 1052              	.L27:
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP interrupt */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR &= (uint8_t)~CRYP_IT;
 1053              		.loc 1 751 0
 1054 002e 4FF00003 		mov	r3, #0
 1055 0032 C5F20603 		movt	r3, 20486
 1056 0036 4FF00002 		mov	r2, #0
 1057 003a C5F20602 		movt	r2, 20486
 1058 003e 5169     		ldr	r1, [r2, #20]
 1059 0040 FA79     		ldrb	r2, [r7, #7]
 1060 0042 6FEA0202 		mvn	r2, r2
 1061 0046 D2B2     		uxtb	r2, r2
 1062 0048 0A40     		ands	r2, r2, r1
 1063 004a 5A61     		str	r2, [r3, #20]
 1064              	.L26:
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1065              		.loc 1 753 0
 1066 004c 07F10C07 		add	r7, r7, #12
 1067 0050 BD46     		mov	sp, r7
 1068 0052 80BC     		pop	{r7}
 1069 0054 7047     		bx	lr
 1070              		.cfi_endproc
 1071              	.LFE124:
 1073 0056 00BF     		.section	.text.CRYP_GetITStatus,"ax",%progbits
 1074              		.align	2
 1075              		.global	CRYP_GetITStatus
 1076              		.thumb
 1077              		.thumb_func
 1079              	CRYP_GetITStatus:
 1080              	.LFB125:
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP interrupt has occurred or not.
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function checks the status of the masked interrupt (i.e the 
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         interrupt should be previously enabled).     
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP (masked) interrupt source to check.
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_IT (SET or RESET).
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ITStatus CRYP_GetITStatus(uint8_t CRYP_IT)
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 1081              		.loc 1 766 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 16
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086 0000 80B4     		push	{r7}
 1087              	.LCFI42:
 1088              		.cfi_def_cfa_offset 4
 1089              		.cfi_offset 7, -4
 1090 0002 85B0     		sub	sp, sp, #20
 1091              	.LCFI43:
 1092              		.cfi_def_cfa_offset 24
 1093 0004 00AF     		add	r7, sp, #0
 1094              	.LCFI44:
 1095              		.cfi_def_cfa_register 7
 1096 0006 0346     		mov	r3, r0
 1097 0008 FB71     		strb	r3, [r7, #7]
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ITStatus bitstatus = RESET;
 1098              		.loc 1 767 0
 1099 000a 4FF00003 		mov	r3, #0
 1100 000e FB73     		strb	r3, [r7, #15]
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_IT(CRYP_IT));
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP interrupt */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->MISR &  CRYP_IT) != (uint8_t)RESET)
 1101              		.loc 1 772 0
 1102 0010 4FF00003 		mov	r3, #0
 1103 0014 C5F20603 		movt	r3, 20486
 1104 0018 DA69     		ldr	r2, [r3, #28]
 1105 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1106 001c 1340     		ands	r3, r3, r2
 1107 001e 002B     		cmp	r3, #0
 1108 0020 03D0     		beq	.L30
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is set */
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 1109              		.loc 1 775 0
 1110 0022 4FF00103 		mov	r3, #1
 1111 0026 FB73     		strb	r3, [r7, #15]
 1112 0028 02E0     		b	.L31
 1113              	.L30:
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is reset */
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1114              		.loc 1 780 0
 1115 002a 4FF00003 		mov	r3, #0
 1116 002e FB73     		strb	r3, [r7, #15]
 1117              	.L31:
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_IT status */
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return bitstatus;
 1118              		.loc 1 783 0
 1119 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1120              		.loc 1 784 0
 1121 0032 1846     		mov	r0, r3
 1122 0034 07F11407 		add	r7, r7, #20
 1123 0038 BD46     		mov	sp, r7
 1124 003a 80BC     		pop	{r7}
 1125 003c 7047     		bx	lr
 1126              		.cfi_endproc
 1127              	.LFE125:
 1129 003e 00BF     		.section	.text.CRYP_GetFlagStatus,"ax",%progbits
 1130              		.align	2
 1131              		.global	CRYP_GetFlagStatus
 1132              		.thumb
 1133              		.thumb_func
 1135              	CRYP_GetFlagStatus:
 1136              	.LFB126:
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP flag is set or not.
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_FLAG: specifies the CRYP flag to check.
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be one of the following values:
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_BUSY: Busy flag.
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_FLAG (SET or RESET).
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 1137              		.loc 1 800 0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 16
 1140              		@ frame_needed = 1, uses_anonymous_args = 0
 1141              		@ link register save eliminated.
 1142 0000 80B4     		push	{r7}
 1143              	.LCFI45:
 1144              		.cfi_def_cfa_offset 4
 1145              		.cfi_offset 7, -4
 1146 0002 85B0     		sub	sp, sp, #20
 1147              	.LCFI46:
 1148              		.cfi_def_cfa_offset 24
 1149 0004 00AF     		add	r7, sp, #0
 1150              	.LCFI47:
 1151              		.cfi_def_cfa_register 7
 1152 0006 0346     		mov	r3, r0
 1153 0008 FB71     		strb	r3, [r7, #7]
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   FlagStatus bitstatus = RESET;
 1154              		.loc 1 801 0
 1155 000a 4FF00003 		mov	r3, #0
 1156 000e FB73     		strb	r3, [r7, #15]
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t tempreg = 0;
 1157              		.loc 1 802 0
 1158 0010 4FF00003 		mov	r3, #0
 1159 0014 BB60     		str	r3, [r7, #8]
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* check if the FLAG is in RISR register */
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
 1160              		.loc 1 808 0
 1161 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1162 0018 03F02003 		and	r3, r3, #32
 1163 001c 002B     		cmp	r3, #0
 1164 001e 06D0     		beq	.L33
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->RISR;
 1165              		.loc 1 810 0
 1166 0020 4FF00003 		mov	r3, #0
 1167 0024 C5F20603 		movt	r3, 20486
 1168 0028 9B69     		ldr	r3, [r3, #24]
 1169 002a BB60     		str	r3, [r7, #8]
 1170 002c 05E0     		b	.L34
 1171              	.L33:
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else  /* The FLAG is in SR register */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->SR;
 1172              		.loc 1 814 0
 1173 002e 4FF00003 		mov	r3, #0
 1174 0032 C5F20603 		movt	r3, 20486
 1175 0036 5B68     		ldr	r3, [r3, #4]
 1176 0038 BB60     		str	r3, [r7, #8]
 1177              	.L34:
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP flag */
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
 1178              		.loc 1 819 0
 1179 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1180 003c BB68     		ldr	r3, [r7, #8]
 1181 003e 1340     		ands	r3, r3, r2
 1182 0040 002B     		cmp	r3, #0
 1183 0042 03D0     		beq	.L35
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is set */
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 1184              		.loc 1 822 0
 1185 0044 4FF00103 		mov	r3, #1
 1186 0048 FB73     		strb	r3, [r7, #15]
 1187 004a 02E0     		b	.L36
 1188              	.L35:
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is reset */
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1189              		.loc 1 827 0
 1190 004c 4FF00003 		mov	r3, #0
 1191 0050 FB73     		strb	r3, [r7, #15]
 1192              	.L36:
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_FLAG status */
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return  bitstatus;
 1193              		.loc 1 831 0
 1194 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1195              		.loc 1 832 0
 1196 0054 1846     		mov	r0, r3
 1197 0056 07F11407 		add	r7, r7, #20
 1198 005a BD46     		mov	sp, r7
 1199 005c 80BC     		pop	{r7}
 1200 005e 7047     		bx	lr
 1201              		.cfi_endproc
 1202              	.LFE126:
 1204              		.text
 1205              	.Letext0:
 1206              		.file 2 "/usr/local/csl/arm-2012.03/bin/../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/i
 1207              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 1208              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
 1209              		.file 5 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp.c
     /tmp/cc1yf27Z.s:20     .text.CRYP_DeInit:00000000 $t
     /tmp/cc1yf27Z.s:25     .text.CRYP_DeInit:00000000 CRYP_DeInit
     /tmp/cc1yf27Z.s:54     .text.CRYP_Init:00000000 $t
     /tmp/cc1yf27Z.s:59     .text.CRYP_Init:00000000 CRYP_Init
     /tmp/cc1yf27Z.s:183    .text.CRYP_StructInit:00000000 $t
     /tmp/cc1yf27Z.s:188    .text.CRYP_StructInit:00000000 CRYP_StructInit
     /tmp/cc1yf27Z.s:231    .text.CRYP_KeyInit:00000000 $t
     /tmp/cc1yf27Z.s:236    .text.CRYP_KeyInit:00000000 CRYP_KeyInit
     /tmp/cc1yf27Z.s:311    .text.CRYP_KeyStructInit:00000000 $t
     /tmp/cc1yf27Z.s:316    .text.CRYP_KeyStructInit:00000000 CRYP_KeyStructInit
     /tmp/cc1yf27Z.s:375    .text.CRYP_IVInit:00000000 $t
     /tmp/cc1yf27Z.s:380    .text.CRYP_IVInit:00000000 CRYP_IVInit
     /tmp/cc1yf27Z.s:431    .text.CRYP_IVStructInit:00000000 $t
     /tmp/cc1yf27Z.s:436    .text.CRYP_IVStructInit:00000000 CRYP_IVStructInit
     /tmp/cc1yf27Z.s:479    .text.CRYP_FIFOFlush:00000000 $t
     /tmp/cc1yf27Z.s:484    .text.CRYP_FIFOFlush:00000000 CRYP_FIFOFlush
     /tmp/cc1yf27Z.s:514    .text.CRYP_Cmd:00000000 $t
     /tmp/cc1yf27Z.s:519    .text.CRYP_Cmd:00000000 CRYP_Cmd
     /tmp/cc1yf27Z.s:570    .text.CRYP_DataIn:00000000 $t
     /tmp/cc1yf27Z.s:575    .text.CRYP_DataIn:00000000 CRYP_DataIn
     /tmp/cc1yf27Z.s:607    .text.CRYP_DataOut:00000000 $t
     /tmp/cc1yf27Z.s:612    .text.CRYP_DataOut:00000000 CRYP_DataOut
     /tmp/cc1yf27Z.s:639    .text.CRYP_SaveContext:00000000 $t
     /tmp/cc1yf27Z.s:644    .text.CRYP_SaveContext:00000000 CRYP_SaveContext
     /tmp/cc1yf27Z.s:832    .text.CRYP_RestoreContext:00000000 $t
     /tmp/cc1yf27Z.s:837    .text.CRYP_RestoreContext:00000000 CRYP_RestoreContext
     /tmp/cc1yf27Z.s:950    .text.CRYP_DMACmd:00000000 $t
     /tmp/cc1yf27Z.s:955    .text.CRYP_DMACmd:00000000 CRYP_DMACmd
     /tmp/cc1yf27Z.s:1012   .text.CRYP_ITConfig:00000000 $t
     /tmp/cc1yf27Z.s:1017   .text.CRYP_ITConfig:00000000 CRYP_ITConfig
     /tmp/cc1yf27Z.s:1074   .text.CRYP_GetITStatus:00000000 $t
     /tmp/cc1yf27Z.s:1079   .text.CRYP_GetITStatus:00000000 CRYP_GetITStatus
     /tmp/cc1yf27Z.s:1130   .text.CRYP_GetFlagStatus:00000000 $t
     /tmp/cc1yf27Z.s:1135   .text.CRYP_GetFlagStatus:00000000 CRYP_GetFlagStatus
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
