   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_dac.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.DAC_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	DAC_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	DAC_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************  
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  28              		.loc 1 175 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 7, -8
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  40              		.loc 1 177 0
  41 0004 4FF00050 		mov	r0, #536870912
  42 0008 4FF00101 		mov	r1, #1
  43 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  44              		.loc 1 179 0
  45 0010 4FF00050 		mov	r0, #536870912
  46 0014 4FF00001 		mov	r1, #0
  47 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
  48              		.loc 1 180 0
  49 001c 80BD     		pop	{r7, pc}
  50              		.cfi_endproc
  51              	.LFE110:
  53 001e 00BF     		.section	.text.DAC_Init,"ax",%progbits
  54              		.align	2
  55              		.global	DAC_Init
  56              		.thumb
  57              		.thumb_func
  59              	DAC_Init:
  60              	.LFB111:
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  61              		.loc 1 194 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 16
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66 0000 80B4     		push	{r7}
  67              	.LCFI2:
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 85B0     		sub	sp, sp, #20
  71              	.LCFI3:
  72              		.cfi_def_cfa_offset 24
  73 0004 00AF     		add	r7, sp, #0
  74              	.LCFI4:
  75              		.cfi_def_cfa_register 7
  76 0006 7860     		str	r0, [r7, #4]
  77 0008 3960     		str	r1, [r7, #0]
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
  78              		.loc 1 195 0
  79 000a 4FF00003 		mov	r3, #0
  80 000e FB60     		str	r3, [r7, #12]
  81 0010 4FF00003 		mov	r3, #0
  82 0014 BB60     		str	r3, [r7, #8]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  83              		.loc 1 205 0
  84 0016 4FF4E843 		mov	r3, #29696
  85 001a C4F20003 		movt	r3, 16384
  86 001e 1B68     		ldr	r3, [r3, #0]
  87 0020 FB60     		str	r3, [r7, #12]
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  88              		.loc 1 207 0
  89 0022 7B68     		ldr	r3, [r7, #4]
  90 0024 40F6FE72 		movw	r2, #4094
  91 0028 02FA03F3 		lsl	r3, r2, r3
  92 002c 6FEA0303 		mvn	r3, r3
  93 0030 FA68     		ldr	r2, [r7, #12]
  94 0032 1340     		ands	r3, r3, r2
  95 0034 FB60     		str	r3, [r7, #12]
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  96              		.loc 1 214 0
  97 0036 3B68     		ldr	r3, [r7, #0]
  98 0038 1A68     		ldr	r2, [r3, #0]
  99 003a 3B68     		ldr	r3, [r7, #0]
 100 003c 5B68     		ldr	r3, [r3, #4]
 101 003e 1A43     		orrs	r2, r2, r3
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 102              		.loc 1 215 0
 103 0040 3B68     		ldr	r3, [r7, #0]
 104 0042 9B68     		ldr	r3, [r3, #8]
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 105              		.loc 1 214 0
 106 0044 1A43     		orrs	r2, r2, r3
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 107              		.loc 1 216 0
 108 0046 3B68     		ldr	r3, [r7, #0]
 109 0048 DB68     		ldr	r3, [r3, #12]
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 110              		.loc 1 214 0
 111 004a 1343     		orrs	r3, r3, r2
 112 004c BB60     		str	r3, [r7, #8]
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 113              		.loc 1 218 0
 114 004e 7B68     		ldr	r3, [r7, #4]
 115 0050 BA68     		ldr	r2, [r7, #8]
 116 0052 02FA03F3 		lsl	r3, r2, r3
 117 0056 FA68     		ldr	r2, [r7, #12]
 118 0058 1343     		orrs	r3, r3, r2
 119 005a FB60     		str	r3, [r7, #12]
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
 120              		.loc 1 220 0
 121 005c 4FF4E843 		mov	r3, #29696
 122 0060 C4F20003 		movt	r3, 16384
 123 0064 FA68     		ldr	r2, [r7, #12]
 124 0066 1A60     		str	r2, [r3, #0]
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 125              		.loc 1 221 0
 126 0068 07F11407 		add	r7, r7, #20
 127 006c BD46     		mov	sp, r7
 128 006e 80BC     		pop	{r7}
 129 0070 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE111:
 133 0072 00BF     		.section	.text.DAC_StructInit,"ax",%progbits
 134              		.align	2
 135              		.global	DAC_StructInit
 136              		.thumb
 137              		.thumb_func
 139              	DAC_StructInit:
 140              	.LFB112:
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 141              		.loc 1 230 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI5:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 83B0     		sub	sp, sp, #12
 151              	.LCFI6:
 152              		.cfi_def_cfa_offset 16
 153 0004 00AF     		add	r7, sp, #0
 154              	.LCFI7:
 155              		.cfi_def_cfa_register 7
 156 0006 7860     		str	r0, [r7, #4]
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 157              		.loc 1 233 0
 158 0008 7B68     		ldr	r3, [r7, #4]
 159 000a 4FF00002 		mov	r2, #0
 160 000e 1A60     		str	r2, [r3, #0]
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 161              		.loc 1 235 0
 162 0010 7B68     		ldr	r3, [r7, #4]
 163 0012 4FF00002 		mov	r2, #0
 164 0016 5A60     		str	r2, [r3, #4]
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 165              		.loc 1 237 0
 166 0018 7B68     		ldr	r3, [r7, #4]
 167 001a 4FF00002 		mov	r2, #0
 168 001e 9A60     		str	r2, [r3, #8]
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 169              		.loc 1 239 0
 170 0020 7B68     		ldr	r3, [r7, #4]
 171 0022 4FF00002 		mov	r2, #0
 172 0026 DA60     		str	r2, [r3, #12]
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 173              		.loc 1 240 0
 174 0028 07F10C07 		add	r7, r7, #12
 175 002c BD46     		mov	sp, r7
 176 002e 80BC     		pop	{r7}
 177 0030 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE112:
 181 0032 00BF     		.section	.text.DAC_Cmd,"ax",%progbits
 182              		.align	2
 183              		.global	DAC_Cmd
 184              		.thumb
 185              		.thumb_func
 187              	DAC_Cmd:
 188              	.LFB113:
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 189              		.loc 1 254 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              	.LCFI8:
 196              		.cfi_def_cfa_offset 4
 197              		.cfi_offset 7, -4
 198 0002 83B0     		sub	sp, sp, #12
 199              	.LCFI9:
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI10:
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 205 0008 0B46     		mov	r3, r1
 206 000a FB70     		strb	r3, [r7, #3]
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 207              		.loc 1 259 0
 208 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 209 000e 002B     		cmp	r3, #0
 210 0010 10D0     		beq	.L5
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 211              		.loc 1 262 0
 212 0012 4FF4E843 		mov	r3, #29696
 213 0016 C4F20003 		movt	r3, 16384
 214 001a 4FF4E842 		mov	r2, #29696
 215 001e C4F20002 		movt	r2, 16384
 216 0022 1168     		ldr	r1, [r2, #0]
 217 0024 7A68     		ldr	r2, [r7, #4]
 218 0026 4FF00100 		mov	r0, #1
 219 002a 00FA02F2 		lsl	r2, r0, r2
 220 002e 0A43     		orrs	r2, r2, r1
 221 0030 1A60     		str	r2, [r3, #0]
 222 0032 11E0     		b	.L4
 223              	.L5:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 224              		.loc 1 267 0
 225 0034 4FF4E843 		mov	r3, #29696
 226 0038 C4F20003 		movt	r3, 16384
 227 003c 4FF4E842 		mov	r2, #29696
 228 0040 C4F20002 		movt	r2, 16384
 229 0044 1168     		ldr	r1, [r2, #0]
 230 0046 7A68     		ldr	r2, [r7, #4]
 231 0048 4FF00100 		mov	r0, #1
 232 004c 00FA02F2 		lsl	r2, r0, r2
 233 0050 6FEA0202 		mvn	r2, r2
 234 0054 0A40     		ands	r2, r2, r1
 235 0056 1A60     		str	r2, [r3, #0]
 236              	.L4:
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 237              		.loc 1 269 0
 238 0058 07F10C07 		add	r7, r7, #12
 239 005c BD46     		mov	sp, r7
 240 005e 80BC     		pop	{r7}
 241 0060 7047     		bx	lr
 242              		.cfi_endproc
 243              	.LFE113:
 245 0062 00BF     		.section	.text.DAC_SoftwareTriggerCmd,"ax",%progbits
 246              		.align	2
 247              		.global	DAC_SoftwareTriggerCmd
 248              		.thumb
 249              		.thumb_func
 251              	DAC_SoftwareTriggerCmd:
 252              	.LFB114:
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 253              		.loc 1 282 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258 0000 80B4     		push	{r7}
 259              	.LCFI11:
 260              		.cfi_def_cfa_offset 4
 261              		.cfi_offset 7, -4
 262 0002 83B0     		sub	sp, sp, #12
 263              	.LCFI12:
 264              		.cfi_def_cfa_offset 16
 265 0004 00AF     		add	r7, sp, #0
 266              	.LCFI13:
 267              		.cfi_def_cfa_register 7
 268 0006 7860     		str	r0, [r7, #4]
 269 0008 0B46     		mov	r3, r1
 270 000a FB70     		strb	r3, [r7, #3]
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 271              		.loc 1 287 0
 272 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 273 000e 002B     		cmp	r3, #0
 274 0010 12D0     		beq	.L8
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 275              		.loc 1 290 0
 276 0012 4FF4E843 		mov	r3, #29696
 277 0016 C4F20003 		movt	r3, 16384
 278 001a 4FF4E842 		mov	r2, #29696
 279 001e C4F20002 		movt	r2, 16384
 280 0022 5168     		ldr	r1, [r2, #4]
 281 0024 7A68     		ldr	r2, [r7, #4]
 282 0026 4FEA1212 		lsr	r2, r2, #4
 283 002a 4FF00100 		mov	r0, #1
 284 002e 00FA02F2 		lsl	r2, r0, r2
 285 0032 0A43     		orrs	r2, r2, r1
 286 0034 5A60     		str	r2, [r3, #4]
 287 0036 13E0     		b	.L7
 288              	.L8:
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 289              		.loc 1 295 0
 290 0038 4FF4E843 		mov	r3, #29696
 291 003c C4F20003 		movt	r3, 16384
 292 0040 4FF4E842 		mov	r2, #29696
 293 0044 C4F20002 		movt	r2, 16384
 294 0048 5168     		ldr	r1, [r2, #4]
 295 004a 7A68     		ldr	r2, [r7, #4]
 296 004c 4FEA1212 		lsr	r2, r2, #4
 297 0050 4FF00100 		mov	r0, #1
 298 0054 00FA02F2 		lsl	r2, r0, r2
 299 0058 6FEA0202 		mvn	r2, r2
 300 005c 0A40     		ands	r2, r2, r1
 301 005e 5A60     		str	r2, [r3, #4]
 302              	.L7:
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 303              		.loc 1 297 0
 304 0060 07F10C07 		add	r7, r7, #12
 305 0064 BD46     		mov	sp, r7
 306 0066 80BC     		pop	{r7}
 307 0068 7047     		bx	lr
 308              		.cfi_endproc
 309              	.LFE114:
 311 006a 00BF     		.section	.text.DAC_DualSoftwareTriggerCmd,"ax",%progbits
 312              		.align	2
 313              		.global	DAC_DualSoftwareTriggerCmd
 314              		.thumb
 315              		.thumb_func
 317              	DAC_DualSoftwareTriggerCmd:
 318              	.LFB115:
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 319              		.loc 1 306 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 8
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 324 0000 80B4     		push	{r7}
 325              	.LCFI14:
 326              		.cfi_def_cfa_offset 4
 327              		.cfi_offset 7, -4
 328 0002 83B0     		sub	sp, sp, #12
 329              	.LCFI15:
 330              		.cfi_def_cfa_offset 16
 331 0004 00AF     		add	r7, sp, #0
 332              	.LCFI16:
 333              		.cfi_def_cfa_register 7
 334 0006 0346     		mov	r3, r0
 335 0008 FB71     		strb	r3, [r7, #7]
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 336              		.loc 1 310 0
 337 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 338 000c 002B     		cmp	r3, #0
 339 000e 0CD0     		beq	.L11
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 340              		.loc 1 313 0
 341 0010 4FF4E843 		mov	r3, #29696
 342 0014 C4F20003 		movt	r3, 16384
 343 0018 4FF4E842 		mov	r2, #29696
 344 001c C4F20002 		movt	r2, 16384
 345 0020 5268     		ldr	r2, [r2, #4]
 346 0022 42F00302 		orr	r2, r2, #3
 347 0026 5A60     		str	r2, [r3, #4]
 348 0028 0BE0     		b	.L10
 349              	.L11:
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 350              		.loc 1 318 0
 351 002a 4FF4E843 		mov	r3, #29696
 352 002e C4F20003 		movt	r3, 16384
 353 0032 4FF4E842 		mov	r2, #29696
 354 0036 C4F20002 		movt	r2, 16384
 355 003a 5268     		ldr	r2, [r2, #4]
 356 003c 22F00302 		bic	r2, r2, #3
 357 0040 5A60     		str	r2, [r3, #4]
 358              	.L10:
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 359              		.loc 1 320 0
 360 0042 07F10C07 		add	r7, r7, #12
 361 0046 BD46     		mov	sp, r7
 362 0048 80BC     		pop	{r7}
 363 004a 7047     		bx	lr
 364              		.cfi_endproc
 365              	.LFE115:
 367              		.section	.text.DAC_WaveGenerationCmd,"ax",%progbits
 368              		.align	2
 369              		.global	DAC_WaveGenerationCmd
 370              		.thumb
 371              		.thumb_func
 373              	DAC_WaveGenerationCmd:
 374              	.LFB116:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 375              		.loc 1 337 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 16
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380 0000 80B4     		push	{r7}
 381              	.LCFI17:
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 7, -4
 384 0002 85B0     		sub	sp, sp, #20
 385              	.LCFI18:
 386              		.cfi_def_cfa_offset 24
 387 0004 00AF     		add	r7, sp, #0
 388              	.LCFI19:
 389              		.cfi_def_cfa_register 7
 390 0006 F860     		str	r0, [r7, #12]
 391 0008 B960     		str	r1, [r7, #8]
 392 000a 1346     		mov	r3, r2
 393 000c FB71     		strb	r3, [r7, #7]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 394              		.loc 1 343 0
 395 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 396 0010 002B     		cmp	r3, #0
 397 0012 0FD0     		beq	.L14
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 398              		.loc 1 346 0
 399 0014 4FF4E843 		mov	r3, #29696
 400 0018 C4F20003 		movt	r3, 16384
 401 001c 4FF4E842 		mov	r2, #29696
 402 0020 C4F20002 		movt	r2, 16384
 403 0024 1168     		ldr	r1, [r2, #0]
 404 0026 FA68     		ldr	r2, [r7, #12]
 405 0028 B868     		ldr	r0, [r7, #8]
 406 002a 00FA02F2 		lsl	r2, r0, r2
 407 002e 0A43     		orrs	r2, r2, r1
 408 0030 1A60     		str	r2, [r3, #0]
 409 0032 10E0     		b	.L13
 410              	.L14:
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 411              		.loc 1 351 0
 412 0034 4FF4E843 		mov	r3, #29696
 413 0038 C4F20003 		movt	r3, 16384
 414 003c 4FF4E842 		mov	r2, #29696
 415 0040 C4F20002 		movt	r2, 16384
 416 0044 1168     		ldr	r1, [r2, #0]
 417 0046 FA68     		ldr	r2, [r7, #12]
 418 0048 B868     		ldr	r0, [r7, #8]
 419 004a 00FA02F2 		lsl	r2, r0, r2
 420 004e 6FEA0202 		mvn	r2, r2
 421 0052 0A40     		ands	r2, r2, r1
 422 0054 1A60     		str	r2, [r3, #0]
 423              	.L13:
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 424              		.loc 1 353 0
 425 0056 07F11407 		add	r7, r7, #20
 426 005a BD46     		mov	sp, r7
 427 005c 80BC     		pop	{r7}
 428 005e 7047     		bx	lr
 429              		.cfi_endproc
 430              	.LFE116:
 432              		.section	.text.DAC_SetChannel1Data,"ax",%progbits
 433              		.align	2
 434              		.global	DAC_SetChannel1Data
 435              		.thumb
 436              		.thumb_func
 438              	DAC_SetChannel1Data:
 439              	.LFB117:
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 440              		.loc 1 366 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 16
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0000 80B4     		push	{r7}
 446              	.LCFI20:
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 85B0     		sub	sp, sp, #20
 450              	.LCFI21:
 451              		.cfi_def_cfa_offset 24
 452 0004 00AF     		add	r7, sp, #0
 453              	.LCFI22:
 454              		.cfi_def_cfa_register 7
 455 0006 7860     		str	r0, [r7, #4]
 456 0008 0B46     		mov	r3, r1
 457 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 458              		.loc 1 367 0
 459 000c 4FF00003 		mov	r3, #0
 460 0010 FB60     		str	r3, [r7, #12]
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 461              		.loc 1 373 0
 462 0012 4FF4E843 		mov	r3, #29696
 463 0016 C4F20003 		movt	r3, 16384
 464 001a FB60     		str	r3, [r7, #12]
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 465              		.loc 1 374 0
 466 001c FA68     		ldr	r2, [r7, #12]
 467 001e 7B68     		ldr	r3, [r7, #4]
 468 0020 D318     		adds	r3, r2, r3
 469 0022 03F10803 		add	r3, r3, #8
 470 0026 FB60     		str	r3, [r7, #12]
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 471              		.loc 1 377 0
 472 0028 FB68     		ldr	r3, [r7, #12]
 473 002a 7A88     		ldrh	r2, [r7, #2]
 474 002c 1A60     		str	r2, [r3, #0]
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 475              		.loc 1 378 0
 476 002e 07F11407 		add	r7, r7, #20
 477 0032 BD46     		mov	sp, r7
 478 0034 80BC     		pop	{r7}
 479 0036 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE117:
 483              		.section	.text.DAC_SetChannel2Data,"ax",%progbits
 484              		.align	2
 485              		.global	DAC_SetChannel2Data
 486              		.thumb
 487              		.thumb_func
 489              	DAC_SetChannel2Data:
 490              	.LFB118:
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 491              		.loc 1 391 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 16
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 496 0000 80B4     		push	{r7}
 497              	.LCFI23:
 498              		.cfi_def_cfa_offset 4
 499              		.cfi_offset 7, -4
 500 0002 85B0     		sub	sp, sp, #20
 501              	.LCFI24:
 502              		.cfi_def_cfa_offset 24
 503 0004 00AF     		add	r7, sp, #0
 504              	.LCFI25:
 505              		.cfi_def_cfa_register 7
 506 0006 7860     		str	r0, [r7, #4]
 507 0008 0B46     		mov	r3, r1
 508 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 509              		.loc 1 392 0
 510 000c 4FF00003 		mov	r3, #0
 511 0010 FB60     		str	r3, [r7, #12]
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 512              		.loc 1 398 0
 513 0012 4FF4E843 		mov	r3, #29696
 514 0016 C4F20003 		movt	r3, 16384
 515 001a FB60     		str	r3, [r7, #12]
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 516              		.loc 1 399 0
 517 001c FA68     		ldr	r2, [r7, #12]
 518 001e 7B68     		ldr	r3, [r7, #4]
 519 0020 D318     		adds	r3, r2, r3
 520 0022 03F11403 		add	r3, r3, #20
 521 0026 FB60     		str	r3, [r7, #12]
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 522              		.loc 1 402 0
 523 0028 FB68     		ldr	r3, [r7, #12]
 524 002a 7A88     		ldrh	r2, [r7, #2]
 525 002c 1A60     		str	r2, [r3, #0]
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 526              		.loc 1 403 0
 527 002e 07F11407 		add	r7, r7, #20
 528 0032 BD46     		mov	sp, r7
 529 0034 80BC     		pop	{r7}
 530 0036 7047     		bx	lr
 531              		.cfi_endproc
 532              	.LFE118:
 534              		.section	.text.DAC_SetDualChannelData,"ax",%progbits
 535              		.align	2
 536              		.global	DAC_SetDualChannelData
 537              		.thumb
 538              		.thumb_func
 540              	DAC_SetDualChannelData:
 541              	.LFB119:
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 542              		.loc 1 419 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 16
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547 0000 80B4     		push	{r7}
 548              	.LCFI26:
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 85B0     		sub	sp, sp, #20
 552              	.LCFI27:
 553              		.cfi_def_cfa_offset 24
 554 0004 00AF     		add	r7, sp, #0
 555              	.LCFI28:
 556              		.cfi_def_cfa_register 7
 557 0006 7860     		str	r0, [r7, #4]
 558 0008 1346     		mov	r3, r2
 559 000a 0A46     		mov	r2, r1	@ movhi
 560 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 561 000e 3B80     		strh	r3, [r7, #0]	@ movhi
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 562              		.loc 1 420 0
 563 0010 4FF00003 		mov	r3, #0
 564 0014 FB60     		str	r3, [r7, #12]
 565 0016 4FF00003 		mov	r3, #0
 566 001a BB60     		str	r3, [r7, #8]
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 567              		.loc 1 428 0
 568 001c 7B68     		ldr	r3, [r7, #4]
 569 001e 082B     		cmp	r3, #8
 570 0020 06D1     		bne	.L19
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 571              		.loc 1 430 0
 572 0022 7B88     		ldrh	r3, [r7, #2]
 573 0024 4FEA0322 		lsl	r2, r3, #8
 574 0028 3B88     		ldrh	r3, [r7, #0]
 575 002a 1343     		orrs	r3, r3, r2
 576 002c FB60     		str	r3, [r7, #12]
 577 002e 05E0     		b	.L20
 578              	.L19:
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 579              		.loc 1 434 0
 580 0030 7B88     		ldrh	r3, [r7, #2]
 581 0032 4FEA0342 		lsl	r2, r3, #16
 582 0036 3B88     		ldrh	r3, [r7, #0]
 583 0038 1343     		orrs	r3, r3, r2
 584 003a FB60     		str	r3, [r7, #12]
 585              	.L20:
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 586              		.loc 1 437 0
 587 003c 4FF4E843 		mov	r3, #29696
 588 0040 C4F20003 		movt	r3, 16384
 589 0044 BB60     		str	r3, [r7, #8]
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 590              		.loc 1 438 0
 591 0046 7A68     		ldr	r2, [r7, #4]
 592 0048 BB68     		ldr	r3, [r7, #8]
 593 004a D318     		adds	r3, r2, r3
 594 004c 03F12003 		add	r3, r3, #32
 595 0050 BB60     		str	r3, [r7, #8]
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 596              		.loc 1 441 0
 597 0052 BB68     		ldr	r3, [r7, #8]
 598 0054 FA68     		ldr	r2, [r7, #12]
 599 0056 1A60     		str	r2, [r3, #0]
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 600              		.loc 1 442 0
 601 0058 07F11407 		add	r7, r7, #20
 602 005c BD46     		mov	sp, r7
 603 005e 80BC     		pop	{r7}
 604 0060 7047     		bx	lr
 605              		.cfi_endproc
 606              	.LFE119:
 608 0062 00BF     		.section	.text.DAC_GetDataOutputValue,"ax",%progbits
 609              		.align	2
 610              		.global	DAC_GetDataOutputValue
 611              		.thumb
 612              		.thumb_func
 614              	DAC_GetDataOutputValue:
 615              	.LFB120:
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 616              		.loc 1 453 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 16
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI29:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 85B0     		sub	sp, sp, #20
 626              	.LCFI30:
 627              		.cfi_def_cfa_offset 24
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI31:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 632              		.loc 1 454 0
 633 0008 4FF00003 		mov	r3, #0
 634 000c FB60     		str	r3, [r7, #12]
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 635              		.loc 1 459 0
 636 000e 4FF4E843 		mov	r3, #29696
 637 0012 C4F20003 		movt	r3, 16384
 638 0016 FB60     		str	r3, [r7, #12]
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 639              		.loc 1 460 0
 640 0018 7B68     		ldr	r3, [r7, #4]
 641 001a 4FEA9302 		lsr	r2, r3, #2
 642 001e FB68     		ldr	r3, [r7, #12]
 643 0020 D318     		adds	r3, r2, r3
 644 0022 03F12C03 		add	r3, r3, #44
 645 0026 FB60     		str	r3, [r7, #12]
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 646              		.loc 1 463 0
 647 0028 FB68     		ldr	r3, [r7, #12]
 648 002a 1B68     		ldr	r3, [r3, #0]
 649 002c 9BB2     		uxth	r3, r3
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 650              		.loc 1 464 0
 651 002e 1846     		mov	r0, r3
 652 0030 07F11407 		add	r7, r7, #20
 653 0034 BD46     		mov	sp, r7
 654 0036 80BC     		pop	{r7}
 655 0038 7047     		bx	lr
 656              		.cfi_endproc
 657              	.LFE120:
 659 003a 00BF     		.section	.text.DAC_DMACmd,"ax",%progbits
 660              		.align	2
 661              		.global	DAC_DMACmd
 662              		.thumb
 663              		.thumb_func
 665              	DAC_DMACmd:
 666              	.LFB121:
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 667              		.loc 1 498 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 8
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 672 0000 80B4     		push	{r7}
 673              	.LCFI32:
 674              		.cfi_def_cfa_offset 4
 675              		.cfi_offset 7, -4
 676 0002 83B0     		sub	sp, sp, #12
 677              	.LCFI33:
 678              		.cfi_def_cfa_offset 16
 679 0004 00AF     		add	r7, sp, #0
 680              	.LCFI34:
 681              		.cfi_def_cfa_register 7
 682 0006 7860     		str	r0, [r7, #4]
 683 0008 0B46     		mov	r3, r1
 684 000a FB70     		strb	r3, [r7, #3]
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 685              		.loc 1 503 0
 686 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 687 000e 002B     		cmp	r3, #0
 688 0010 10D0     		beq	.L23
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 689              		.loc 1 506 0
 690 0012 4FF4E843 		mov	r3, #29696
 691 0016 C4F20003 		movt	r3, 16384
 692 001a 4FF4E842 		mov	r2, #29696
 693 001e C4F20002 		movt	r2, 16384
 694 0022 1168     		ldr	r1, [r2, #0]
 695 0024 7A68     		ldr	r2, [r7, #4]
 696 0026 4FF48050 		mov	r0, #4096
 697 002a 00FA02F2 		lsl	r2, r0, r2
 698 002e 0A43     		orrs	r2, r2, r1
 699 0030 1A60     		str	r2, [r3, #0]
 700 0032 11E0     		b	.L22
 701              	.L23:
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 702              		.loc 1 511 0
 703 0034 4FF4E843 		mov	r3, #29696
 704 0038 C4F20003 		movt	r3, 16384
 705 003c 4FF4E842 		mov	r2, #29696
 706 0040 C4F20002 		movt	r2, 16384
 707 0044 1168     		ldr	r1, [r2, #0]
 708 0046 7A68     		ldr	r2, [r7, #4]
 709 0048 4FF48050 		mov	r0, #4096
 710 004c 00FA02F2 		lsl	r2, r0, r2
 711 0050 6FEA0202 		mvn	r2, r2
 712 0054 0A40     		ands	r2, r2, r1
 713 0056 1A60     		str	r2, [r3, #0]
 714              	.L22:
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 715              		.loc 1 513 0
 716 0058 07F10C07 		add	r7, r7, #12
 717 005c BD46     		mov	sp, r7
 718 005e 80BC     		pop	{r7}
 719 0060 7047     		bx	lr
 720              		.cfi_endproc
 721              	.LFE121:
 723 0062 00BF     		.section	.text.DAC_ITConfig,"ax",%progbits
 724              		.align	2
 725              		.global	DAC_ITConfig
 726              		.thumb
 727              		.thumb_func
 729              	DAC_ITConfig:
 730              	.LFB122:
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 731              		.loc 1 546 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 16
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736 0000 80B4     		push	{r7}
 737              	.LCFI35:
 738              		.cfi_def_cfa_offset 4
 739              		.cfi_offset 7, -4
 740 0002 85B0     		sub	sp, sp, #20
 741              	.LCFI36:
 742              		.cfi_def_cfa_offset 24
 743 0004 00AF     		add	r7, sp, #0
 744              	.LCFI37:
 745              		.cfi_def_cfa_register 7
 746 0006 F860     		str	r0, [r7, #12]
 747 0008 B960     		str	r1, [r7, #8]
 748 000a 1346     		mov	r3, r2
 749 000c FB71     		strb	r3, [r7, #7]
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 750              		.loc 1 552 0
 751 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 752 0010 002B     		cmp	r3, #0
 753 0012 0FD0     		beq	.L26
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 754              		.loc 1 555 0
 755 0014 4FF4E843 		mov	r3, #29696
 756 0018 C4F20003 		movt	r3, 16384
 757 001c 4FF4E842 		mov	r2, #29696
 758 0020 C4F20002 		movt	r2, 16384
 759 0024 1168     		ldr	r1, [r2, #0]
 760 0026 FA68     		ldr	r2, [r7, #12]
 761 0028 B868     		ldr	r0, [r7, #8]
 762 002a 00FA02F2 		lsl	r2, r0, r2
 763 002e 0A43     		orrs	r2, r2, r1
 764 0030 1A60     		str	r2, [r3, #0]
 765 0032 10E0     		b	.L25
 766              	.L26:
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 767              		.loc 1 560 0
 768 0034 4FF4E843 		mov	r3, #29696
 769 0038 C4F20003 		movt	r3, 16384
 770 003c 4FF4E842 		mov	r2, #29696
 771 0040 C4F20002 		movt	r2, 16384
 772 0044 1168     		ldr	r1, [r2, #0]
 773 0046 FA68     		ldr	r2, [r7, #12]
 774 0048 B868     		ldr	r0, [r7, #8]
 775 004a 00FA02F2 		lsl	r2, r0, r2
 776 004e 6FEA0202 		mvn	r2, r2
 777 0052 0A40     		ands	r2, r2, r1
 778 0054 1A60     		str	r2, [r3, #0]
 779              	.L25:
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 780              		.loc 1 562 0
 781 0056 07F11407 		add	r7, r7, #20
 782 005a BD46     		mov	sp, r7
 783 005c 80BC     		pop	{r7}
 784 005e 7047     		bx	lr
 785              		.cfi_endproc
 786              	.LFE122:
 788              		.section	.text.DAC_GetFlagStatus,"ax",%progbits
 789              		.align	2
 790              		.global	DAC_GetFlagStatus
 791              		.thumb
 792              		.thumb_func
 794              	DAC_GetFlagStatus:
 795              	.LFB123:
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 796              		.loc 1 578 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 16
 799              		@ frame_needed = 1, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801 0000 80B4     		push	{r7}
 802              	.LCFI38:
 803              		.cfi_def_cfa_offset 4
 804              		.cfi_offset 7, -4
 805 0002 85B0     		sub	sp, sp, #20
 806              	.LCFI39:
 807              		.cfi_def_cfa_offset 24
 808 0004 00AF     		add	r7, sp, #0
 809              	.LCFI40:
 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
 812 0008 3960     		str	r1, [r7, #0]
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 813              		.loc 1 579 0
 814 000a 4FF00003 		mov	r3, #0
 815 000e FB73     		strb	r3, [r7, #15]
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 816              		.loc 1 585 0
 817 0010 4FF4E843 		mov	r3, #29696
 818 0014 C4F20003 		movt	r3, 16384
 819 0018 5A6B     		ldr	r2, [r3, #52]
 820 001a 7B68     		ldr	r3, [r7, #4]
 821 001c 3968     		ldr	r1, [r7, #0]
 822 001e 01FA03F3 		lsl	r3, r1, r3
 823 0022 1340     		ands	r3, r3, r2
 824 0024 002B     		cmp	r3, #0
 825 0026 03D0     		beq	.L29
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 826              		.loc 1 588 0
 827 0028 4FF00103 		mov	r3, #1
 828 002c FB73     		strb	r3, [r7, #15]
 829 002e 02E0     		b	.L30
 830              	.L29:
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 831              		.loc 1 593 0
 832 0030 4FF00003 		mov	r3, #0
 833 0034 FB73     		strb	r3, [r7, #15]
 834              	.L30:
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 835              		.loc 1 596 0
 836 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 837              		.loc 1 597 0
 838 0038 1846     		mov	r0, r3
 839 003a 07F11407 		add	r7, r7, #20
 840 003e BD46     		mov	sp, r7
 841 0040 80BC     		pop	{r7}
 842 0042 7047     		bx	lr
 843              		.cfi_endproc
 844              	.LFE123:
 846              		.section	.text.DAC_ClearFlag,"ax",%progbits
 847              		.align	2
 848              		.global	DAC_ClearFlag
 849              		.thumb
 850              		.thumb_func
 852              	DAC_ClearFlag:
 853              	.LFB124:
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 854              		.loc 1 613 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 8
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859 0000 80B4     		push	{r7}
 860              	.LCFI41:
 861              		.cfi_def_cfa_offset 4
 862              		.cfi_offset 7, -4
 863 0002 83B0     		sub	sp, sp, #12
 864              	.LCFI42:
 865              		.cfi_def_cfa_offset 16
 866 0004 00AF     		add	r7, sp, #0
 867              	.LCFI43:
 868              		.cfi_def_cfa_register 7
 869 0006 7860     		str	r0, [r7, #4]
 870 0008 3960     		str	r1, [r7, #0]
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 871              		.loc 1 619 0
 872 000a 4FF4E843 		mov	r3, #29696
 873 000e C4F20003 		movt	r3, 16384
 874 0012 7A68     		ldr	r2, [r7, #4]
 875 0014 3968     		ldr	r1, [r7, #0]
 876 0016 01FA02F2 		lsl	r2, r1, r2
 877 001a 5A63     		str	r2, [r3, #52]
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 878              		.loc 1 620 0
 879 001c 07F10C07 		add	r7, r7, #12
 880 0020 BD46     		mov	sp, r7
 881 0022 80BC     		pop	{r7}
 882 0024 7047     		bx	lr
 883              		.cfi_endproc
 884              	.LFE124:
 886 0026 00BF     		.section	.text.DAC_GetITStatus,"ax",%progbits
 887              		.align	2
 888              		.global	DAC_GetITStatus
 889              		.thumb
 890              		.thumb_func
 892              	DAC_GetITStatus:
 893              	.LFB125:
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 894              		.loc 1 636 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 16
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899 0000 80B4     		push	{r7}
 900              	.LCFI44:
 901              		.cfi_def_cfa_offset 4
 902              		.cfi_offset 7, -4
 903 0002 85B0     		sub	sp, sp, #20
 904              	.LCFI45:
 905              		.cfi_def_cfa_offset 24
 906 0004 00AF     		add	r7, sp, #0
 907              	.LCFI46:
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
 910 0008 3960     		str	r1, [r7, #0]
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 911              		.loc 1 637 0
 912 000a 4FF00003 		mov	r3, #0
 913 000e FB73     		strb	r3, [r7, #15]
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 914              		.loc 1 638 0
 915 0010 4FF00003 		mov	r3, #0
 916 0014 BB60     		str	r3, [r7, #8]
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 917              		.loc 1 645 0
 918 0016 4FF4E843 		mov	r3, #29696
 919 001a C4F20003 		movt	r3, 16384
 920 001e 1A68     		ldr	r2, [r3, #0]
 921 0020 7B68     		ldr	r3, [r7, #4]
 922 0022 3968     		ldr	r1, [r7, #0]
 923 0024 01FA03F3 		lsl	r3, r1, r3
 924 0028 1340     		ands	r3, r3, r2
 925 002a BB60     		str	r3, [r7, #8]
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 926              		.loc 1 648 0
 927 002c 4FF4E843 		mov	r3, #29696
 928 0030 C4F20003 		movt	r3, 16384
 929 0034 5A6B     		ldr	r2, [r3, #52]
 930 0036 7B68     		ldr	r3, [r7, #4]
 931 0038 3968     		ldr	r1, [r7, #0]
 932 003a 01FA03F3 		lsl	r3, r1, r3
 933 003e 1340     		ands	r3, r3, r2
 934 0040 002B     		cmp	r3, #0
 935 0042 06D0     		beq	.L33
 936              		.loc 1 648 0 is_stmt 0 discriminator 1
 937 0044 BB68     		ldr	r3, [r7, #8]
 938 0046 002B     		cmp	r3, #0
 939 0048 03D0     		beq	.L33
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 940              		.loc 1 651 0 is_stmt 1
 941 004a 4FF00103 		mov	r3, #1
 942 004e FB73     		strb	r3, [r7, #15]
 943 0050 02E0     		b	.L34
 944              	.L33:
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 945              		.loc 1 656 0
 946 0052 4FF00003 		mov	r3, #0
 947 0056 FB73     		strb	r3, [r7, #15]
 948              	.L34:
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 949              		.loc 1 659 0
 950 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 951              		.loc 1 660 0
 952 005a 1846     		mov	r0, r3
 953 005c 07F11407 		add	r7, r7, #20
 954 0060 BD46     		mov	sp, r7
 955 0062 80BC     		pop	{r7}
 956 0064 7047     		bx	lr
 957              		.cfi_endproc
 958              	.LFE125:
 960 0066 00BF     		.section	.text.DAC_ClearITPendingBit,"ax",%progbits
 961              		.align	2
 962              		.global	DAC_ClearITPendingBit
 963              		.thumb
 964              		.thumb_func
 966              	DAC_ClearITPendingBit:
 967              	.LFB126:
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 968              		.loc 1 676 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 8
 971              		@ frame_needed = 1, uses_anonymous_args = 0
 972              		@ link register save eliminated.
 973 0000 80B4     		push	{r7}
 974              	.LCFI47:
 975              		.cfi_def_cfa_offset 4
 976              		.cfi_offset 7, -4
 977 0002 83B0     		sub	sp, sp, #12
 978              	.LCFI48:
 979              		.cfi_def_cfa_offset 16
 980 0004 00AF     		add	r7, sp, #0
 981              	.LCFI49:
 982              		.cfi_def_cfa_register 7
 983 0006 7860     		str	r0, [r7, #4]
 984 0008 3960     		str	r1, [r7, #0]
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 985              		.loc 1 682 0
 986 000a 4FF4E843 		mov	r3, #29696
 987 000e C4F20003 		movt	r3, 16384
 988 0012 7A68     		ldr	r2, [r7, #4]
 989 0014 3968     		ldr	r1, [r7, #0]
 990 0016 01FA02F2 		lsl	r2, r1, r2
 991 001a 5A63     		str	r2, [r3, #52]
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 992              		.loc 1 683 0
 993 001c 07F10C07 		add	r7, r7, #12
 994 0020 BD46     		mov	sp, r7
 995 0022 80BC     		pop	{r7}
 996 0024 7047     		bx	lr
 997              		.cfi_endproc
 998              	.LFE126:
 1000 0026 00BF     		.text
 1001              	.Letext0:
 1002              		.file 2 "/usr/local/csl/arm-2012.03/bin/../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/i
 1003              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 1004              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
 1005              		.file 5 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dac.c
     /tmp/cc7tQl2j.s:20     .text.DAC_DeInit:00000000 $t
     /tmp/cc7tQl2j.s:25     .text.DAC_DeInit:00000000 DAC_DeInit
     /tmp/cc7tQl2j.s:54     .text.DAC_Init:00000000 $t
     /tmp/cc7tQl2j.s:59     .text.DAC_Init:00000000 DAC_Init
     /tmp/cc7tQl2j.s:134    .text.DAC_StructInit:00000000 $t
     /tmp/cc7tQl2j.s:139    .text.DAC_StructInit:00000000 DAC_StructInit
     /tmp/cc7tQl2j.s:182    .text.DAC_Cmd:00000000 $t
     /tmp/cc7tQl2j.s:187    .text.DAC_Cmd:00000000 DAC_Cmd
     /tmp/cc7tQl2j.s:246    .text.DAC_SoftwareTriggerCmd:00000000 $t
     /tmp/cc7tQl2j.s:251    .text.DAC_SoftwareTriggerCmd:00000000 DAC_SoftwareTriggerCmd
     /tmp/cc7tQl2j.s:312    .text.DAC_DualSoftwareTriggerCmd:00000000 $t
     /tmp/cc7tQl2j.s:317    .text.DAC_DualSoftwareTriggerCmd:00000000 DAC_DualSoftwareTriggerCmd
     /tmp/cc7tQl2j.s:368    .text.DAC_WaveGenerationCmd:00000000 $t
     /tmp/cc7tQl2j.s:373    .text.DAC_WaveGenerationCmd:00000000 DAC_WaveGenerationCmd
     /tmp/cc7tQl2j.s:433    .text.DAC_SetChannel1Data:00000000 $t
     /tmp/cc7tQl2j.s:438    .text.DAC_SetChannel1Data:00000000 DAC_SetChannel1Data
     /tmp/cc7tQl2j.s:484    .text.DAC_SetChannel2Data:00000000 $t
     /tmp/cc7tQl2j.s:489    .text.DAC_SetChannel2Data:00000000 DAC_SetChannel2Data
     /tmp/cc7tQl2j.s:535    .text.DAC_SetDualChannelData:00000000 $t
     /tmp/cc7tQl2j.s:540    .text.DAC_SetDualChannelData:00000000 DAC_SetDualChannelData
     /tmp/cc7tQl2j.s:609    .text.DAC_GetDataOutputValue:00000000 $t
     /tmp/cc7tQl2j.s:614    .text.DAC_GetDataOutputValue:00000000 DAC_GetDataOutputValue
     /tmp/cc7tQl2j.s:660    .text.DAC_DMACmd:00000000 $t
     /tmp/cc7tQl2j.s:665    .text.DAC_DMACmd:00000000 DAC_DMACmd
     /tmp/cc7tQl2j.s:724    .text.DAC_ITConfig:00000000 $t
     /tmp/cc7tQl2j.s:729    .text.DAC_ITConfig:00000000 DAC_ITConfig
     /tmp/cc7tQl2j.s:789    .text.DAC_GetFlagStatus:00000000 $t
     /tmp/cc7tQl2j.s:794    .text.DAC_GetFlagStatus:00000000 DAC_GetFlagStatus
     /tmp/cc7tQl2j.s:847    .text.DAC_ClearFlag:00000000 $t
     /tmp/cc7tQl2j.s:852    .text.DAC_ClearFlag:00000000 DAC_ClearFlag
     /tmp/cc7tQl2j.s:887    .text.DAC_GetITStatus:00000000 $t
     /tmp/cc7tQl2j.s:892    .text.DAC_GetITStatus:00000000 DAC_GetITStatus
     /tmp/cc7tQl2j.s:961    .text.DAC_ClearITPendingBit:00000000 $t
     /tmp/cc7tQl2j.s:966    .text.DAC_ClearITPendingBit:00000000 DAC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
