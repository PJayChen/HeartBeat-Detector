   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_iwdg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  20              		.align	2
  21              		.global	IWDG_WriteAccessCmd
  22              		.thumb
  23              		.thumb_func
  25              	IWDG_WriteAccessCmd:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @file    stm32f4xx_iwdg.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          functionalities of the Independent watchdog (IWDG) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Prescaler and Counter configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - IWDG activation
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Flag management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @verbatim  
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                     IWDG features
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG can be started by either software or hardware (configurable
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          through option byte).
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is clocked by its own dedicated low-speed clock (LSI) and
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          thus stays active even if the main clock fails.
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Once the IWDG is started, the LSI is forced ON and cannot be disabled
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          (LSI cannot be disabled too), and the counter starts counting down from 
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          the reset value of 0xFFF. When it reaches the end of count value (0x000)
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          a system reset is generated.
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG counter should be reloaded at regular intervals to prevent
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          an MCU reset.
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                           
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is implemented in the VDD voltage domain that is still functional
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).          
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          IWDGRST flag in RCC_CSR register can be used to inform when a IWDG
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          reset occurs.
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG timeout may vary due to LSI frequency dispersion. STM32F4xx
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          devices provide the capability to measure the LSI frequency (LSI clock
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          connected internally to TIM5 CH4 input capture). The measured value
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          can be used to have an IWDG timeout with an acceptable accuracy. 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          For more information, please refer to the STM32F4xx Reference manual
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                            
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                 How to use this driver
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          1. Enable write access to IWDG_PR and IWDG_RLR registers using
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable) function
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *               
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          2. Configure the IWDG prescaler using IWDG_SetPrescaler() function
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          3. Configure the IWDG counter value using IWDG_SetReload() function.
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             This value will be loaded in the IWDG counter each time the counter
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             is reloaded, then the IWDG will start counting down from this value.
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          4. Start the IWDG using IWDG_Enable() function, when the IWDG is used
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             in software mode (no need to enable the LSI, it will be enabled
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             by hardware)
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          5. Then the application program must reload the IWDG counter at regular
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_ReloadCounter() function.      
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @endverbatim
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @attention
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #include "stm32f4xx_iwdg.h"
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG 
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief IWDG driver modules
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */ 
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private define ------------------------------------------------------------*/
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* KR register bit mask */
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_RELOAD    ((uint16_t)0xAAAA)
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_ENABLE    ((uint16_t)0xCCCC)
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private functions ---------------------------------------------------------*/
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Private_Functions
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group1 Prescaler and Counter configuration functions
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   Prescaler and Counter configuration functions
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                   Prescaler and Counter configuration functions
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR register
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  28              		.loc 1 130 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 0346     		mov	r3, r0
  44 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  45              		.loc 1 133 0
  46 000a 4FF44053 		mov	r3, #12288
  47 000e C4F20003 		movt	r3, 16384
  48 0012 FA88     		ldrh	r2, [r7, #6]
  49 0014 1A60     		str	r2, [r3, #0]
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
  50              		.loc 1 134 0
  51 0016 07F10C07 		add	r7, r7, #12
  52 001a BD46     		mov	sp, r7
  53 001c 80BC     		pop	{r7}
  54 001e 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE110:
  58              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  59              		.align	2
  60              		.global	IWDG_SetPrescaler
  61              		.thumb
  62              		.thumb_func
  64              	IWDG_SetPrescaler:
  65              	.LFB111:
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  66              		.loc 1 150 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71 0000 80B4     		push	{r7}
  72              	.LCFI3:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 7, -4
  75 0002 83B0     		sub	sp, sp, #12
  76              	.LCFI4:
  77              		.cfi_def_cfa_offset 16
  78 0004 00AF     		add	r7, sp, #0
  79              	.LCFI5:
  80              		.cfi_def_cfa_register 7
  81 0006 0346     		mov	r3, r0
  82 0008 FB71     		strb	r3, [r7, #7]
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
  83              		.loc 1 153 0
  84 000a 4FF44053 		mov	r3, #12288
  85 000e C4F20003 		movt	r3, 16384
  86 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  87 0014 5A60     		str	r2, [r3, #4]
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
  88              		.loc 1 154 0
  89 0016 07F10C07 		add	r7, r7, #12
  90 001a BD46     		mov	sp, r7
  91 001c 80BC     		pop	{r7}
  92 001e 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE111:
  96              		.section	.text.IWDG_SetReload,"ax",%progbits
  97              		.align	2
  98              		.global	IWDG_SetReload
  99              		.thumb
 100              		.thumb_func
 102              	IWDG_SetReload:
 103              	.LFB112:
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Reload value.
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter must be a number between 0 and 0x0FFF.
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 104              		.loc 1 163 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109 0000 80B4     		push	{r7}
 110              	.LCFI6:
 111              		.cfi_def_cfa_offset 4
 112              		.cfi_offset 7, -4
 113 0002 83B0     		sub	sp, sp, #12
 114              	.LCFI7:
 115              		.cfi_def_cfa_offset 16
 116 0004 00AF     		add	r7, sp, #0
 117              	.LCFI8:
 118              		.cfi_def_cfa_register 7
 119 0006 0346     		mov	r3, r0
 120 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->RLR = Reload;
 121              		.loc 1 166 0
 122 000a 4FF44053 		mov	r3, #12288
 123 000e C4F20003 		movt	r3, 16384
 124 0012 FA88     		ldrh	r2, [r7, #6]
 125 0014 9A60     		str	r2, [r3, #8]
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 126              		.loc 1 167 0
 127 0016 07F10C07 		add	r7, r7, #12
 128 001a BD46     		mov	sp, r7
 129 001c 80BC     		pop	{r7}
 130 001e 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE112:
 134              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
 135              		.align	2
 136              		.global	IWDG_ReloadCounter
 137              		.thumb
 138              		.thumb_func
 140              	IWDG_ReloadCounter:
 141              	.LFB113:
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *         (write access to IWDG_PR and IWDG_RLR registers disabled).
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_ReloadCounter(void)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 142              		.loc 1 176 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147 0000 80B4     		push	{r7}
 148              	.LCFI9:
 149              		.cfi_def_cfa_offset 4
 150              		.cfi_offset 7, -4
 151 0002 00AF     		add	r7, sp, #0
 152              	.LCFI10:
 153              		.cfi_def_cfa_register 7
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_RELOAD;
 154              		.loc 1 177 0
 155 0004 4FF44053 		mov	r3, #12288
 156 0008 C4F20003 		movt	r3, 16384
 157 000c 4AF6AA22 		movw	r2, #43690
 158 0010 1A60     		str	r2, [r3, #0]
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 159              		.loc 1 178 0
 160 0012 BD46     		mov	sp, r7
 161 0014 80BC     		pop	{r7}
 162 0016 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE113:
 166              		.section	.text.IWDG_Enable,"ax",%progbits
 167              		.align	2
 168              		.global	IWDG_Enable
 169              		.thumb
 170              		.thumb_func
 172              	IWDG_Enable:
 173              	.LFB114:
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group2 IWDG activation function
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   IWDG activation function 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                           IWDG activation function
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_Enable(void)
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 174              		.loc 1 202 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 80B4     		push	{r7}
 180              	.LCFI11:
 181              		.cfi_def_cfa_offset 4
 182              		.cfi_offset 7, -4
 183 0002 00AF     		add	r7, sp, #0
 184              	.LCFI12:
 185              		.cfi_def_cfa_register 7
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_ENABLE;
 186              		.loc 1 203 0
 187 0004 4FF44053 		mov	r3, #12288
 188 0008 C4F20003 		movt	r3, 16384
 189 000c 4CF6CC42 		movw	r2, #52428
 190 0010 1A60     		str	r2, [r3, #0]
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 191              		.loc 1 204 0
 192 0012 BD46     		mov	sp, r7
 193 0014 80BC     		pop	{r7}
 194 0016 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE114:
 198              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 199              		.align	2
 200              		.global	IWDG_GetFlagStatus
 201              		.thumb
 202              		.thumb_func
 204              	IWDG_GetFlagStatus:
 205              	.LFB115:
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group3 Flag management function 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief  Flag management function  
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                             Flag management function 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_RVU: Reload Value Update on going
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 206              		.loc 1 231 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 16
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211 0000 80B4     		push	{r7}
 212              	.LCFI13:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 7, -4
 215 0002 85B0     		sub	sp, sp, #20
 216              	.LCFI14:
 217              		.cfi_def_cfa_offset 24
 218 0004 00AF     		add	r7, sp, #0
 219              	.LCFI15:
 220              		.cfi_def_cfa_register 7
 221 0006 0346     		mov	r3, r0
 222 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   FlagStatus bitstatus = RESET;
 223              		.loc 1 232 0
 224 000a 4FF00003 		mov	r3, #0
 225 000e FB73     		strb	r3, [r7, #15]
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 226              		.loc 1 235 0
 227 0010 4FF44053 		mov	r3, #12288
 228 0014 C4F20003 		movt	r3, 16384
 229 0018 DA68     		ldr	r2, [r3, #12]
 230 001a FB88     		ldrh	r3, [r7, #6]
 231 001c 1340     		ands	r3, r3, r2
 232 001e 002B     		cmp	r3, #0
 233 0020 03D0     		beq	.L7
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = SET;
 234              		.loc 1 237 0
 235 0022 4FF00103 		mov	r3, #1
 236 0026 FB73     		strb	r3, [r7, #15]
 237 0028 02E0     		b	.L8
 238              	.L7:
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   else
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = RESET;
 239              		.loc 1 241 0
 240 002a 4FF00003 		mov	r3, #0
 241 002e FB73     		strb	r3, [r7, #15]
 242              	.L8:
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Return the flag status */
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   return bitstatus;
 243              		.loc 1 244 0
 244 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 245              		.loc 1 245 0
 246 0032 1846     		mov	r0, r3
 247 0034 07F11407 		add	r7, r7, #20
 248 0038 BD46     		mov	sp, r7
 249 003a 80BC     		pop	{r7}
 250 003c 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE115:
 254 003e 00BF     		.text
 255              	.Letext0:
 256              		.file 2 "/usr/local/csl/arm-2012.03/bin/../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/i
 257              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 258              		.file 4 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_iwdg.c
     /tmp/ccOXBlJ3.s:20     .text.IWDG_WriteAccessCmd:00000000 $t
     /tmp/ccOXBlJ3.s:25     .text.IWDG_WriteAccessCmd:00000000 IWDG_WriteAccessCmd
     /tmp/ccOXBlJ3.s:59     .text.IWDG_SetPrescaler:00000000 $t
     /tmp/ccOXBlJ3.s:64     .text.IWDG_SetPrescaler:00000000 IWDG_SetPrescaler
     /tmp/ccOXBlJ3.s:97     .text.IWDG_SetReload:00000000 $t
     /tmp/ccOXBlJ3.s:102    .text.IWDG_SetReload:00000000 IWDG_SetReload
     /tmp/ccOXBlJ3.s:135    .text.IWDG_ReloadCounter:00000000 $t
     /tmp/ccOXBlJ3.s:140    .text.IWDG_ReloadCounter:00000000 IWDG_ReloadCounter
     /tmp/ccOXBlJ3.s:167    .text.IWDG_Enable:00000000 $t
     /tmp/ccOXBlJ3.s:172    .text.IWDG_Enable:00000000 IWDG_Enable
     /tmp/ccOXBlJ3.s:199    .text.IWDG_GetFlagStatus:00000000 $t
     /tmp/ccOXBlJ3.s:204    .text.IWDG_GetFlagStatus:00000000 IWDG_GetFlagStatus
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
